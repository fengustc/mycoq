DIGEST 37e12736dd6e468b7c251f729e080d66
FPoly
R354:358 Lists <> <> lib
ind 905:912 <> boollist
constr 928:935 <> bool_nil
constr 952:960 <> bool_cons
R939:946 Poly <> boollist ind
R984:991 Poly <> boollist ind
R972:979 Poly <> boollist ind
R964:967 Basics <> bool ind
ind 1466:1469 <> list
constr 1494:1496 <> nil
constr 1511:1514 <> cons
R1500:1503 Poly <> list ind
R1533:1536 Poly <> list ind
R1523:1526 Poly <> list ind
R2728:2730 Poly <> nil constr
R2780:2783 Poly <> cons constr
R3191:3194 Poly <> cons constr
R3203:3206 Poly <> cons constr
R3215:3217 Poly <> nil constr
R3219:3221 Coq.Init.Datatypes <> nat ind
R3208:3210 Coq.Init.Datatypes <> nat ind
R3196:3198 Coq.Init.Datatypes <> nat ind
def 3602:3607 <> length
R3621:3624 Poly <> list ind
R3626:3626 Poly <> X var
R3631:3633 Coq.Init.Datatypes <> nat ind
R3646:3646 Poly <> l var
R3657:3659 Poly <> nil constr
R3675:3678 Poly <> cons constr
R3687:3687 Coq.Init.Datatypes <> S constr
R3690:3695 Poly <> length def
R3697:3697 Poly <> X var
def 4234:4245 <> test_length1
R4299:4301 Coq.Init.Logic <> :type_scope:x_'='_x not
R4253:4258 Poly <> length def
R4265:4268 Poly <> cons constr
R4277:4280 Poly <> cons constr
R4289:4291 Poly <> nil constr
R4293:4295 Coq.Init.Datatypes <> nat ind
R4282:4284 Coq.Init.Datatypes <> nat ind
R4270:4272 Coq.Init.Datatypes <> nat ind
R4260:4262 Coq.Init.Datatypes <> nat ind
def 4458:4469 <> test_length2
R4516:4518 Coq.Init.Logic <> :type_scope:x_'='_x not
R4477:4482 Poly <> length def
R4490:4493 Poly <> cons constr
R4506:4508 Poly <> nil constr
R4510:4513 Basics <> bool ind
R4500:4503 Basics <> true constr
R4495:4498 Basics <> bool ind
R4484:4487 Basics <> bool ind
def 4683:4685 <> app
R4707:4710 Poly <> list ind
R4712:4712 Poly <> X var
R4734:4737 Poly <> list ind
R4739:4739 Poly <> X var
R4753:4754 Poly <> l1 var
R4765:4767 Poly <> nil constr
R4777:4778 Poly <> l2 var
R4784:4787 Poly <> cons constr
R4796:4799 Poly <> cons constr
R4806:4808 Poly <> app def
R4814:4815 Poly <> l2 var
R4810:4810 Poly <> X var
R4801:4801 Poly <> X var
def 4835:4838 <> snoc
R4852:4855 Poly <> list ind
R4857:4857 Poly <> X var
R4863:4863 Poly <> X var
R4869:4872 Poly <> list ind
R4874:4874 Poly <> X var
R4888:4888 Poly <> l var
R4899:4901 Poly <> nil constr
R4911:4914 Poly <> cons constr
R4921:4923 Poly <> nil constr
R4925:4925 Poly <> X var
R4918:4918 Poly <> v var
R4916:4916 Poly <> X var
R4932:4935 Poly <> cons constr
R4944:4947 Poly <> cons constr
R4954:4957 Poly <> snoc def
R4963:4963 Poly <> v var
R4959:4959 Poly <> X var
R4949:4949 Poly <> X var
def 4983:4985 <> rev
R4999:5002 Poly <> list ind
R5004:5004 Poly <> X var
R5009:5012 Poly <> list ind
R5014:5014 Poly <> X var
R5027:5027 Poly <> l var
R5038:5040 Poly <> nil constr
R5050:5052 Poly <> nil constr
R5054:5054 Poly <> X var
R5060:5063 Poly <> cons constr
R5072:5075 Poly <> snoc def
R5080:5082 Poly <> rev def
R5084:5084 Poly <> X var
R5077:5077 Poly <> X var
def 5109:5117 <> test_rev1
R5168:5173 Coq.Init.Logic <> :type_scope:x_'='_x not
R5207:5207 Coq.Init.Logic <> :type_scope:x_'='_x not
R5125:5127 Poly <> rev def
R5134:5137 Poly <> cons constr
R5146:5149 Poly <> cons constr
R5158:5160 Poly <> nil constr
R5162:5164 Coq.Init.Datatypes <> nat ind
R5151:5153 Coq.Init.Datatypes <> nat ind
R5139:5141 Coq.Init.Datatypes <> nat ind
R5129:5131 Coq.Init.Datatypes <> nat ind
R5174:5177 Poly <> cons constr
R5186:5189 Poly <> cons constr
R5198:5200 Poly <> nil constr
R5202:5204 Coq.Init.Datatypes <> nat ind
R5191:5193 Coq.Init.Datatypes <> nat ind
R5179:5181 Coq.Init.Datatypes <> nat ind
def 5245:5253 <> test_rev2
R5277:5279 Coq.Init.Logic <> :type_scope:x_'='_x not
R5258:5260 Poly <> rev def
R5268:5270 Poly <> nil constr
R5272:5275 Basics <> bool ind
R5262:5265 Basics <> bool ind
R5280:5282 Poly <> nil constr
R5284:5287 Basics <> bool ind
mod 5324:5332 <> MumbleBaz
ind 5454:5459 MumbleBaz mumble
constr 5475:5475 MumbleBaz a
constr 5490:5490 MumbleBaz b
constr 5522:5522 MumbleBaz c
R5479:5484 Poly <> mumble ind
R5511:5516 Poly <> mumble ind
R5504:5506 Coq.Init.Datatypes <> nat ind
R5494:5499 Poly <> mumble ind
R5526:5531 Poly <> mumble ind
ind 5545:5551 MumbleBaz grumble
constr 5576:5576 MumbleBaz d
constr 5604:5604 MumbleBaz e
R5590:5596 Poly <> grumble ind
R5580:5585 Poly MumbleBaz mumble ind
R5613:5619 Poly <> grumble ind
ind 6007:6009 MumbleBaz baz
constr 6026:6026 MumbleBaz x
constr 6046:6046 MumbleBaz y
R6037:6039 Poly <> baz ind
R6030:6032 Poly <> baz ind
R6065:6067 Poly <> baz ind
R6057:6060 Basics <> bool ind
R6050:6052 Poly <> baz ind
R6155:6163 Poly <> <> mod
def 6426:6429 <> app'
R6441:6444 Poly <> list ind
R6446:6446 Poly <> X var
R6459:6460 Poly <> l1 var
R6471:6473 Poly <> nil constr
R6483:6484 Poly <> l2 var
R6490:6493 Poly <> cons constr
R6502:6505 Poly <> cons constr
R6512:6515 Poly <> app' def
R6521:6522 Poly <> l2 var
R6517:6517 Poly <> X var
R6507:6507 Poly <> X var
R6612:6615 Poly <> app' def
R6679:6681 Poly <> app def
def 9326:9332 <> length'
R9346:9349 Poly <> list ind
R9351:9351 Poly <> X var
R9356:9358 Coq.Init.Datatypes <> nat ind
R9371:9371 Poly <> l var
R9382:9384 Poly <> nil constr
R9400:9403 Poly <> cons constr
R9412:9412 Coq.Init.Datatypes <> S constr
R9415:9421 Poly <> length' def
def 9710:9716 <> list123
R9723:9726 Poly <> cons constr
R9735:9738 Poly <> cons constr
R9747:9750 Poly <> cons constr
R9759:9761 Poly <> nil constr
R9763:9765 Coq.Init.Datatypes <> nat ind
R9752:9754 Coq.Init.Datatypes <> nat ind
R9740:9742 Coq.Init.Datatypes <> nat ind
R9728:9730 Coq.Init.Datatypes <> nat ind
def 9839:9846 <> list123'
R9851:9854 Poly <> cons constr
R9861:9864 Poly <> cons constr
R9871:9874 Poly <> cons constr
R9881:9883 Poly <> nil constr
R10371:10373 Poly <> nil constr
R10371:10373 Poly <> nil constr
R10390:10393 Poly <> cons constr
R10390:10393 Poly <> cons constr
R10475:10480 Poly <> length def
R10475:10480 Poly <> length def
R10499:10501 Poly <> app def
R10499:10501 Poly <> app def
R10524:10526 Poly <> rev def
R10524:10526 Poly <> rev def
R10546:10549 Poly <> snoc def
R10546:10549 Poly <> snoc def
def 10611:10619 <> list123''
R10624:10627 Poly <> cons constr
R10632:10635 Poly <> cons constr
R10640:10643 Poly <> cons constr
R10647:10649 Poly <> nil constr
R10661:10666 Poly <> length def
R10668:10676 Poly <> list123'' def
def 10858:10865 <> length''
R10879:10882 Poly <> list ind
R10884:10884 Poly <> X var
R10889:10891 Coq.Init.Datatypes <> nat ind
R10904:10904 Poly <> l var
R10915:10917 Poly <> nil constr
R10933:10936 Poly <> cons constr
R10945:10945 Coq.Init.Datatypes <> S constr
R10948:10955 Poly <> length'' def
def 11969:11973 <> mynil
R11977:11980 Poly <> list ind
R11982:11984 Coq.Init.Datatypes <> nat ind
R11989:11991 Poly <> nil constr
R12120:12122 Poly <> nil constr
def 12137:12142 <> mynil'
R12148:12150 Poly <> nil constr
R12152:12154 Coq.Init.Datatypes <> nat ind
R12436:12439 Poly <> cons constr
not 12423 <> ::x_'::'_x
R12521:12523 Poly <> nil constr
not 12512 <> ::'['_']'
R12556:12559 Poly <> cons constr
R12567:12570 Poly <> cons constr
R12574:12575 Poly <> ::'['_']' not
not 12535 <> ::'['_x_';'_'..'_';'_x_']'
R12605:12607 Poly <> app def
not 12592 <> ::x_'++'_x
def 12740:12749 <> list123'''
R12754:12754 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12756:12757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12759:12760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R12762:12762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 13114:13119 <> repeat
R13137:13137 Poly <> X var
R13149:13151 Coq.Init.Datatypes <> nat ind
R13156:13159 Poly <> list ind
R13161:13161 Poly <> X var
R13173:13177 Poly <> count var
R13187:13187 Coq.Init.Datatypes <> O constr
R13192:13194 Poly <> nil constr
R13199:13199 Coq.Init.Datatypes <> S constr
R13211:13214 Poly <> cons constr
R13219:13224 Poly <> repeat def
R13226:13226 Poly <> n var
R13216:13216 Poly <> n var
def 13273:13284 <> test_repeat1
R13302:13304 Coq.Init.Logic <> :type_scope:x_'='_x not
R13289:13294 Poly <> repeat def
R13296:13299 Basics <> true constr
R13305:13308 Poly <> cons constr
R13316:13319 Poly <> cons constr
R13326:13328 Poly <> nil constr
R13321:13324 Basics <> true constr
R13310:13313 Basics <> true constr
prf 13389:13395 <> nil_app
R13423:13426 Poly <> list ind
R13428:13428 Poly <> X var
R13441:13443 Coq.Init.Logic <> :type_scope:x_'='_x not
R13433:13435 Poly <> app def
R13440:13440 Poly <> l var
R13437:13438 Poly <> ::'['_']' not
R13444:13444 Poly <> l var
prf 13510:13517 <> rev_snoc
R13570:13570 Poly <> X var
R13605:13608 Poly <> list ind
R13610:13610 Poly <> X var
R13629:13631 Coq.Init.Logic <> :type_scope:x_'='_x not
R13615:13617 Poly <> rev def
R13620:13623 Poly <> snoc def
R13627:13627 Poly <> v var
R13625:13625 Poly <> s var
R13633:13637 Poly <> ::x_'::'_x not
R13643:13643 Poly <> ::x_'::'_x not
R13632:13632 Poly <> v var
R13638:13640 Poly <> rev def
R13642:13642 Poly <> s var
prf 13823:13836 <> rev_involutive
R13868:13871 Poly <> list ind
R13873:13873 Poly <> X var
R13889:13891 Coq.Init.Logic <> :type_scope:x_'='_x not
R13878:13880 Poly <> rev def
R13883:13885 Poly <> rev def
R13887:13887 Poly <> l var
R13892:13892 Poly <> l var
R14014:14021 Poly <> rev_snoc thm
R14014:14021 Poly <> rev_snoc thm
prf 14093:14108 <> snoc_with_append
R14169:14172 Poly <> list ind
R14174:14174 Poly <> X var
R14213:14213 Poly <> X var
R14235:14237 Coq.Init.Logic <> :type_scope:x_'='_x not
R14218:14221 Poly <> snoc def
R14234:14234 Poly <> v var
R14226:14229 Poly <> ::x_'++'_x not
R14224:14225 Poly <> l1 var
R14230:14231 Poly <> l2 var
R14240:14244 Poly <> ::x_'++'_x not
R14254:14254 Poly <> ::x_'++'_x not
R14238:14239 Poly <> l1 var
R14245:14248 Poly <> snoc def
R14253:14253 Poly <> v var
R14250:14251 Poly <> l2 var
ind 14726:14729 <> prod
constr 14756:14759 <> pair
R14773:14776 Poly <> prod ind
R14794:14797 Poly <> pair constr
R14794:14797 Poly <> pair constr
R14944:14947 Poly <> pair constr
not 14928 <> ::'('_x_','_x_')'
R15080:15083 Poly <> prod ind
not 15068 <> :type_scope:x_'*'_x
def 15695:15697 <> fst
R15718:15720 Poly <> :type_scope:x_'*'_x not
R15717:15717 Poly <> X var
R15721:15721 Poly <> Y var
R15726:15726 Poly <> X var
R15739:15739 Poly <> p var
R15746:15746 Poly <> ::'('_x_','_x_')' not
R15748:15748 Poly <> ::'('_x_','_x_')' not
R15750:15750 Poly <> ::'('_x_','_x_')' not
def 15774:15776 <> snd
R15797:15799 Poly <> :type_scope:x_'*'_x not
R15796:15796 Poly <> X var
R15800:15800 Poly <> Y var
R15805:15805 Poly <> Y var
R15818:15818 Poly <> p var
R15825:15825 Poly <> ::'('_x_','_x_')' not
R15827:15827 Poly <> ::'('_x_','_x_')' not
R15829:15829 Poly <> ::'('_x_','_x_')' not
def 16170:16176 <> combine
R16197:16200 Poly <> list ind
R16202:16202 Poly <> X var
R16211:16214 Poly <> list ind
R16216:16216 Poly <> Y var
R16232:16235 Poly <> list ind
R16239:16239 Poly <> :type_scope:x_'*'_x not
R16238:16238 Poly <> X var
R16240:16240 Poly <> Y var
R16254:16254 Poly <> ::'('_x_','_x_')' not
R16257:16257 Poly <> ::'('_x_','_x_')' not
R16260:16260 Poly <> ::'('_x_','_x_')' not
R16255:16256 Poly <> lx var
R16258:16259 Poly <> ly var
R16271:16271 Poly <> ::'('_x_','_x_')' not
R16274:16274 Poly <> ::'('_x_','_x_')' not
R16276:16276 Poly <> ::'('_x_','_x_')' not
R16272:16273 Poly <> ::'['_']' not
R16281:16282 Poly <> ::'['_']' not
R16288:16288 Poly <> ::'('_x_','_x_')' not
R16290:16290 Poly <> ::'('_x_','_x_')' not
R16293:16293 Poly <> ::'('_x_','_x_')' not
R16291:16292 Poly <> ::'['_']' not
R16298:16299 Poly <> ::'['_']' not
R16305:16305 Poly <> ::'('_x_','_x_')' not
R16311:16312 Poly <> ::'('_x_','_x_')' not
R16318:16318 Poly <> ::'('_x_','_x_')' not
R16307:16308 Poly <> ::x_'::'_x not
R16314:16315 Poly <> ::x_'::'_x not
R16328:16332 Poly <> ::x_'::'_x not
R16346:16346 Poly <> ::x_'::'_x not
R16323:16323 Poly <> ::'('_x_','_x_')' not
R16325:16325 Poly <> ::'('_x_','_x_')' not
R16327:16327 Poly <> ::'('_x_','_x_')' not
R16333:16339 Poly <> combine def
R16694:16700 Poly <> combine def
R16721:16727 Poly <> combine def
R16735:16735 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16741:16741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16747:16747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16752:16752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16757:16757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16753:16756 Basics <> true constr
R16748:16751 Basics <> true constr
R16742:16746 Basics <> false constr
R16736:16740 Basics <> false constr
R16729:16729 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16731:16731 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R16733:16733 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 17127:17131 <> split
R17162:17165 Poly <> list ind
R17169:17169 Poly <> :type_scope:x_'*'_x not
R17168:17168 Poly <> X var
R17170:17170 Poly <> Y var
R17187:17187 Poly <> :type_scope:x_'*'_x not
R17194:17198 Poly <> :type_scope:x_'*'_x not
R17205:17205 Poly <> :type_scope:x_'*'_x not
R17188:17191 Poly <> list ind
R17193:17193 Poly <> X var
R17199:17202 Poly <> list ind
R17204:17204 Poly <> Y var
R17217:17217 Poly <> l var
R17227:17229 Poly <> nil constr
R17232:17232 Poly <> ::'('_x_','_x_')' not
R17236:17236 Poly <> ::'('_x_','_x_')' not
R17240:17240 Poly <> ::'('_x_','_x_')' not
R17233:17235 Poly <> nil constr
R17237:17239 Poly <> nil constr
R17252:17253 Poly <> ::x_'::'_x not
R17245:17245 Poly <> ::'('_x_','_x_')' not
R17248:17248 Poly <> ::'('_x_','_x_')' not
R17251:17251 Poly <> ::'('_x_','_x_')' not
R17258:17258 Poly <> ::'('_x_','_x_')' not
R17276:17276 Poly <> ::'('_x_','_x_')' not
R17294:17294 Poly <> ::'('_x_','_x_')' not
R17261:17262 Poly <> ::x_'::'_x not
R17263:17265 Poly <> fst def
R17267:17271 Poly <> split def
R17279:17280 Poly <> ::x_'::'_x not
R17281:17283 Poly <> snd def
R17285:17289 Poly <> split def
def 17312:17321 <> test_split
R17353:17355 Coq.Init.Logic <> :type_scope:x_'='_x not
R17326:17330 Poly <> split def
R17332:17332 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17342:17342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17352:17352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17343:17343 Poly <> ::'('_x_','_x_')' not
R17345:17345 Poly <> ::'('_x_','_x_')' not
R17351:17351 Poly <> ::'('_x_','_x_')' not
R17346:17350 Basics <> false constr
R17333:17333 Poly <> ::'('_x_','_x_')' not
R17335:17335 Poly <> ::'('_x_','_x_')' not
R17341:17341 Poly <> ::'('_x_','_x_')' not
R17336:17340 Basics <> false constr
R17356:17356 Poly <> ::'('_x_','_x_')' not
R17362:17362 Poly <> ::'('_x_','_x_')' not
R17376:17376 Poly <> ::'('_x_','_x_')' not
R17357:17357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17359:17359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17361:17361 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17363:17363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17369:17369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17375:17375 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17370:17374 Basics <> false constr
R17364:17368 Basics <> false constr
ind 17701:17706 <> option
constr 17731:17734 <> Some
constr 17756:17759 <> None
R17743:17748 Poly <> option ind
R17763:17768 Poly <> option ind
R17784:17787 Poly <> Some constr
R17784:17787 Poly <> Some constr
R17807:17810 Poly <> None constr
R17807:17810 Poly <> None constr
def 17921:17925 <> index
R17943:17945 Coq.Init.Datatypes <> nat ind
R17968:17971 Poly <> list ind
R17973:17973 Poly <> X var
R17978:17983 Poly <> option ind
R17985:17985 Poly <> X var
R17998:17998 Poly <> l var
R18009:18010 Poly <> ::'['_']' not
R18015:18018 Poly <> None constr
R18025:18028 Poly <> ::x_'::'_x not
R18038:18044 Basics <> beq_nat def
R18048:18048 Coq.Init.Datatypes <> O constr
R18046:18046 Poly <> n var
R18067:18071 Poly <> index def
R18074:18077 Coq.Init.Peano <> pred def
R18079:18079 Poly <> n var
R18055:18058 Poly <> Some constr
R18099:18102 Poly <> Some constr
R18104:18106 Coq.Init.Datatypes <> nat ind
def 18120:18130 <> test_index1
R18154:18157 Coq.Init.Logic <> :type_scope:x_'='_x not
R18137:18141 Poly <> index def
R18145:18145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18147:18147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18149:18149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18151:18151 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18153:18153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18158:18161 Poly <> Some constr
def 18200:18210 <> test_index2
R18235:18238 Coq.Init.Logic <> :type_scope:x_'='_x not
R18217:18221 Poly <> index def
R18226:18226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18230:18230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18234:18234 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18231:18231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18233:18233 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18227:18227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18229:18229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18239:18242 Poly <> Some constr
R18244:18244 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18246:18246 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18283:18293 <> test_index3
R18315:18318 Coq.Init.Logic <> :type_scope:x_'='_x not
R18300:18304 Poly <> index def
R18309:18309 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18314:18314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18310:18313 Basics <> true constr
R18319:18322 Poly <> None constr
def 18574:18579 <> hd_opt
R18597:18600 Poly <> list ind
R18602:18602 Poly <> X var
R18608:18613 Poly <> option ind
R18615:18615 Poly <> X var
R18627:18627 Poly <> l var
R18637:18639 Poly <> nil constr
R18644:18647 Poly <> None constr
R18653:18654 Poly <> ::x_'::'_x not
R18659:18662 Poly <> Some constr
R18822:18827 Poly <> hd_opt def
def 18839:18850 <> test_hd_opt1
R18867:18869 Coq.Init.Logic <> :type_scope:x_'='_x not
R18855:18860 Poly <> hd_opt def
R18862:18862 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18864:18864 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18866:18866 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18870:18873 Poly <> Some constr
def 18933:18944 <> test_hd_opt2
R18967:18970 Coq.Init.Logic <> :type_scope:x_'='_x not
R18950:18955 Poly <> hd_opt def
R18958:18958 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18962:18962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18966:18966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18963:18963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18965:18965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18959:18959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18961:18961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18971:18974 Poly <> Some constr
R18976:18976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18978:18978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19652:19661 <> doit3times
R19678:19678 Poly <> X var
R19675:19675 Poly <> X var
R19684:19684 Poly <> X var
R19689:19689 Poly <> X var
R19696:19696 Poly <> f var
R19699:19699 Poly <> f var
R19702:19702 Poly <> f var
R19704:19704 Poly <> n var
R19863:19872 Poly <> doit3times def
def 19944:19958 <> test_doit3times
R19982:19984 Coq.Init.Logic <> :type_scope:x_'='_x not
R19961:19970 Poly <> doit3times def
R19972:19979 Basics <> minustwo def
def 20023:20038 <> test_doit3times'
R20061:20063 Coq.Init.Logic <> :type_scope:x_'='_x not
R20041:20050 Poly <> doit3times def
R20057:20060 Basics <> true constr
R20052:20055 Basics <> negb def
R20064:20068 Basics <> false constr
R20362:20365 Coq.Init.Peano <> plus def
def 21087:21091 <> plus3
R21096:21099 Coq.Init.Peano <> plus def
R21110:21114 Poly <> plus3 def
def 21126:21135 <> test_plus3
R21149:21151 Coq.Init.Logic <> :type_scope:x_'='_x not
R21142:21146 Poly <> plus3 def
def 21189:21199 <> test_plus3'
R21223:21225 Coq.Init.Logic <> :type_scope:x_'='_x not
R21205:21214 Poly <> doit3times def
R21216:21220 Poly <> plus3 def
def 21263:21274 <> test_plus3''
R21300:21302 Coq.Init.Logic <> :type_scope:x_'='_x not
R21279:21288 Poly <> doit3times def
R21291:21294 Coq.Init.Peano <> plus def
def 22226:22235 <> prod_curry
R22268:22268 Poly <> Z var
R22260:22262 Poly <> :type_scope:x_'*'_x not
R22259:22259 Poly <> X var
R22263:22263 Poly <> Y var
R22276:22276 Poly <> X var
R22284:22284 Poly <> Y var
R22289:22289 Poly <> Z var
R22294:22294 Poly <> f var
R22296:22296 Poly <> ::'('_x_','_x_')' not
R22298:22299 Poly <> ::'('_x_','_x_')' not
R22301:22301 Poly <> ::'('_x_','_x_')' not
R22297:22297 Poly <> x var
R22300:22300 Poly <> y var
def 22446:22457 <> prod_uncurry
R22491:22491 Poly <> Z var
R22486:22486 Poly <> Y var
R22481:22481 Poly <> X var
R22500:22502 Poly <> :type_scope:x_'*'_x not
R22499:22499 Poly <> X var
R22503:22503 Poly <> Y var
R22508:22508 Poly <> Z var
R22523:22523 Poly <> p var
R22536:22536 Poly <> ::'('_x_','_x_')' not
R22538:22538 Poly <> ::'('_x_','_x_')' not
R22540:22540 Poly <> ::'('_x_','_x_')' not
R22544:22544 Poly <> f var
R22720:22729 Poly <> prod_curry def
R22739:22750 Poly <> prod_uncurry def
prf 22762:22774 <> uncurry_curry
R22815:22815 Poly <> Z var
R22810:22810 Poly <> Y var
R22805:22805 Poly <> X var
R22856:22858 Coq.Init.Logic <> :type_scope:x_'='_x not
R22825:22834 Poly <> prod_curry def
R22855:22855 Poly <> y var
R22853:22853 Poly <> x var
R22837:22848 Poly <> prod_uncurry def
R22850:22850 Poly <> f var
R22859:22859 Poly <> f var
R22863:22863 Poly <> y var
R22861:22861 Poly <> x var
prf 23068:23080 <> curry_uncurry
R23153:23153 Poly <> Z var
R23144:23146 Poly <> :type_scope:x_'*'_x not
R23143:23143 Poly <> X var
R23147:23147 Poly <> Y var
R23162:23164 Poly <> :type_scope:x_'*'_x not
R23161:23161 Poly <> X var
R23165:23165 Poly <> Y var
R23200:23202 Coq.Init.Logic <> :type_scope:x_'='_x not
R23171:23182 Poly <> prod_uncurry def
R23199:23199 Poly <> p var
R23185:23194 Poly <> prod_curry def
R23196:23196 Poly <> f var
R23203:23203 Poly <> f var
R23205:23205 Poly <> p var
R23242:23251 Poly <> prod_curry def
R23263:23274 Poly <> prod_uncurry def
def 23763:23768 <> filter
R23789:23792 Basics <> bool ind
R23786:23786 Poly <> X var
R23798:23801 Poly <> list ind
R23803:23803 Poly <> X var
R23825:23828 Poly <> list ind
R23830:23830 Poly <> X var
R23844:23844 Poly <> l var
R23855:23856 Poly <> ::'['_']' not
R23865:23866 Poly <> ::'['_']' not
R23873:23876 Poly <> ::x_'::'_x not
R23885:23888 Poly <> test var
R23953:23958 Poly <> filter def
R23960:23963 Poly <> test var
R23898:23902 Poly <> ::x_'::'_x not
R23916:23916 Poly <> ::x_'::'_x not
R23903:23908 Poly <> filter def
R23910:23913 Poly <> test var
def 24144:24155 <> test_filter1
R24180:24182 Coq.Init.Logic <> :type_scope:x_'='_x not
R24158:24163 Poly <> filter def
R24171:24171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24173:24173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24175:24175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24177:24177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24179:24179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24165:24169 Basics <> evenb def
R24183:24183 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24185:24185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24187:24187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24228:24238 <> length_is_1
R24256:24259 Poly <> list ind
R24261:24261 Poly <> X var
R24266:24269 Basics <> bool ind
R24276:24282 Basics <> beq_nat def
R24285:24290 Poly <> length def
R24292:24292 Poly <> l var
def 24307:24318 <> test_filter2
R24393:24397 Coq.Init.Logic <> :type_scope:x_'='_x not
R24325:24330 Poly <> filter def
R24355:24356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24363:24364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24368:24369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24373:24374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24382:24383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24386:24387 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24391:24392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24388:24388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24390:24390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24384:24385 Poly <> ::'['_']' not
R24375:24375 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24377:24377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24379:24379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24381:24381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24370:24370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24372:24372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24365:24365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24367:24367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24357:24357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24359:24360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24362:24362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24332:24342 Poly <> length_is_1 def
R24398:24399 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24403:24404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24408:24409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24413:24414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24410:24410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24412:24412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24405:24405 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24407:24407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24400:24400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24402:24402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24573:24588 <> countoddmembers'
R24593:24596 Poly <> list ind
R24598:24600 Coq.Init.Datatypes <> nat ind
R24605:24607 Coq.Init.Datatypes <> nat ind
R24614:24619 Poly <> length def
R24622:24627 Poly <> filter def
R24634:24634 Poly <> l var
R24629:24632 Basics <> oddb def
def 24647:24668 <> test_countoddmembers'1
R24703:24705 Coq.Init.Logic <> :type_scope:x_'='_x not
R24673:24688 Poly <> countoddmembers' def
R24690:24690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24692:24692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24694:24694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24696:24696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24698:24698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24700:24700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24702:24702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24743:24764 <> test_countoddmembers'2
R24793:24795 Coq.Init.Logic <> :type_scope:x_'='_x not
R24769:24784 Poly <> countoddmembers' def
R24786:24786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24788:24788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24790:24790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24792:24792 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24833:24854 <> test_countoddmembers'3
R24879:24881 Coq.Init.Logic <> :type_scope:x_'='_x not
R24859:24874 Poly <> countoddmembers' def
R24876:24878 Poly <> nil constr
def 25748:25761 <> test_anon_fun'
R25795:25797 Coq.Init.Logic <> :type_scope:x_'='_x not
R25766:25775 Poly <> doit3times def
R25788:25790 Basics <> :nat_scope:x_'*'_x not
R25787:25787 Poly <> n var
R25791:25791 Poly <> n var
def 25934:25946 <> test_filter2'
R26041:26045 Coq.Init.Logic <> :type_scope:x_'='_x not
R25953:25958 Poly <> filter def
R26003:26004 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26011:26012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26016:26017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26021:26022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26030:26031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26034:26035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26039:26040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26036:26036 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26038:26038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26032:26033 Poly <> ::'['_']' not
R26023:26023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26025:26025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26027:26027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26029:26029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26018:26018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26020:26020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26013:26013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26015:26015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26005:26005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26007:26008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26010:26010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25970:25976 Basics <> beq_nat def
R25979:25984 Poly <> length def
R25986:25986 Poly <> l var
R26046:26047 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26051:26052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26056:26057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26061:26062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26058:26058 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26060:26060 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26053:26053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26055:26055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26048:26048 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26050:26050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26364:26378 <> filter_even_gt7
R26385:26388 Poly <> list ind
R26390:26392 Coq.Init.Datatypes <> nat ind
R26397:26400 Poly <> list ind
R26402:26404 Coq.Init.Datatypes <> nat ind
R26410:26415 Poly <> filter def
R26424:26429 Poly <> filter def
R26443:26443 Poly <> l var
R26432:26438 Basics <> blt_nat def
R26417:26421 Basics <> evenb def
def 26477:26498 <> test_filter_even_gt7_1
R26539:26541 Coq.Init.Logic <> :type_scope:x_'='_x not
R26504:26518 Poly <> filter_even_gt7 def
R26520:26520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26522:26522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26524:26524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26526:26526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26528:26528 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26531:26531 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26533:26533 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26536:26536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26538:26538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26542:26542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26545:26545 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26548:26548 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26550:26550 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26608:26629 <> test_filter_even_gt7_2
R26665:26667 Coq.Init.Logic <> :type_scope:x_'='_x not
R26635:26649 Poly <> filter_even_gt7 def
R26651:26651 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26653:26653 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26655:26655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26657:26657 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26660:26660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26664:26664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26668:26669 Poly <> ::'['_']' not
def 27339:27346 <> negb_fun
R27365:27368 Basics <> bool ind
R27362:27362 Poly <> X var
R27373:27373 Poly <> X var
R27376:27379 Basics <> bool ind
R27391:27394 Poly <> test var
R27396:27396 Poly <> x var
R27407:27410 Basics <> true constr
R27413:27417 Basics <> false constr
R27423:27427 Basics <> false constr
R27430:27433 Basics <> true constr
def 27453:27461 <> partition
R27487:27490 Basics <> bool ind
R27482:27482 Poly <> X var
R27498:27501 Poly <> list ind
R27503:27503 Poly <> X var
R27535:27537 Poly <> :type_scope:x_'*'_x not
R27529:27532 Poly <> list ind
R27534:27534 Poly <> X var
R27538:27541 Poly <> list ind
R27543:27543 Poly <> X var
R27547:27547 Poly <> ::'('_x_','_x_')' not
R27561:27562 Poly <> ::'('_x_','_x_')' not
R27587:27587 Poly <> ::'('_x_','_x_')' not
R27548:27553 Poly <> filter def
R27560:27560 Poly <> l var
R27555:27558 Poly <> test var
R27563:27568 Poly <> filter def
R27586:27586 Poly <> l var
R27571:27578 Poly <> negb_fun def
R27580:27583 Poly <> test var
def 27602:27611 <> partition'
R27637:27640 Basics <> bool ind
R27632:27632 Poly <> X var
R27648:27651 Poly <> list ind
R27653:27653 Poly <> X var
R27685:27687 Poly <> :type_scope:x_'*'_x not
R27679:27682 Poly <> list ind
R27684:27684 Poly <> X var
R27688:27691 Poly <> list ind
R27693:27693 Poly <> X var
R27706:27706 Poly <> l var
R27717:27719 Poly <> nil constr
R27722:27722 Poly <> ::'('_x_','_x_')' not
R27726:27726 Poly <> ::'('_x_','_x_')' not
R27730:27730 Poly <> ::'('_x_','_x_')' not
R27723:27725 Poly <> nil constr
R27727:27729 Poly <> nil constr
R27737:27738 Poly <> ::x_'::'_x not
R27746:27749 Poly <> test var
R27834:27834 Poly <> ::'('_x_','_x_')' not
R27856:27857 Poly <> ::'('_x_','_x_')' not
R27883:27884 Poly <> ::'('_x_','_x_')' not
R27835:27837 Poly <> fst def
R27839:27847 Poly <> partition def
R27849:27852 Poly <> test var
R27859:27861 Poly <> ::x_'::'_x not
R27862:27864 Poly <> snd def
R27866:27874 Poly <> partition def
R27876:27879 Poly <> test var
R27758:27758 Poly <> ::'('_x_','_x_')' not
R27783:27783 Poly <> ::'('_x_','_x_')' not
R27806:27806 Poly <> ::'('_x_','_x_')' not
R27760:27761 Poly <> ::x_'::'_x not
R27762:27764 Poly <> fst def
R27766:27774 Poly <> partition def
R27776:27779 Poly <> test var
R27784:27786 Poly <> snd def
R27789:27797 Poly <> partition def
R27799:27802 Poly <> test var
def 27922:27936 <> test_partition1
R27965:27967 Coq.Init.Logic <> :type_scope:x_'='_x not
R27939:27947 Poly <> partition def
R27954:27954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27956:27956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27958:27958 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27960:27960 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27962:27962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27964:27964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27949:27952 Basics <> oddb def
R27968:27968 Poly <> ::'('_x_','_x_')' not
R27976:27977 Poly <> ::'('_x_','_x_')' not
R27983:27983 Poly <> ::'('_x_','_x_')' not
R27969:27969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27971:27971 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27973:27973 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27975:27975 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27978:27978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27980:27980 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27982:27982 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28040:28054 <> test_partition2
R28091:28093 Coq.Init.Logic <> :type_scope:x_'='_x not
R28057:28065 Poly <> partition def
R28084:28084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28086:28086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28088:28088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28090:28090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28077:28081 Basics <> false constr
R28094:28094 Poly <> ::'('_x_','_x_')' not
R28097:28098 Poly <> ::'('_x_','_x_')' not
R28106:28106 Poly <> ::'('_x_','_x_')' not
R28095:28096 Poly <> ::'['_']' not
R28099:28099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28101:28101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28103:28103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28105:28105 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28312:28314 <> map
R28333:28333 Poly <> Y var
R28330:28330 Poly <> X var
R28339:28342 Poly <> list ind
R28344:28344 Poly <> X var
R28363:28366 Poly <> list ind
R28368:28368 Poly <> Y var
R28382:28382 Poly <> l var
R28393:28394 Poly <> ::'['_']' not
R28403:28404 Poly <> ::'['_']' not
R28411:28414 Poly <> ::x_'::'_x not
R28420:28420 Poly <> ::x_'::'_x not
R28424:28429 Poly <> ::x_'::'_x not
R28437:28437 Poly <> ::x_'::'_x not
R28421:28421 Poly <> f var
R28430:28432 Poly <> map def
R28434:28434 Poly <> f var
def 28654:28662 <> test_map1
R28685:28687 Coq.Init.Logic <> :type_scope:x_'='_x not
R28665:28667 Poly <> map def
R28678:28678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28680:28680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28682:28682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28684:28684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28670:28673 Coq.Init.Peano <> plus def
R28688:28688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28690:28690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28692:28692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28694:28694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29003:29011 <> test_map2
R29032:29034 Coq.Init.Logic <> :type_scope:x_'='_x not
R29014:29016 Poly <> map def
R29023:29023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29025:29025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29027:29027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29029:29029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29031:29031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29018:29021 Basics <> oddb def
R29035:29035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29041:29041 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29046:29046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29052:29052 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29057:29057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29053:29056 Basics <> true constr
R29047:29051 Basics <> false constr
R29042:29045 Basics <> true constr
R29036:29040 Basics <> false constr
def 29244:29252 <> test_map3
R29300:29304 Coq.Init.Logic <> :type_scope:x_'='_x not
R29259:29261 Poly <> map def
R29291:29291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29293:29293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29295:29295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29297:29297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29299:29299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29273:29273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29281:29281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29288:29288 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29282:29285 Basics <> oddb def
R29287:29287 Poly <> n var
R29274:29278 Basics <> evenb def
R29280:29280 Poly <> n var
R29305:29305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29318:29318 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29331:29331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29344:29344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29357:29357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29345:29345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29351:29351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29356:29356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29352:29355 Basics <> true constr
R29346:29350 Basics <> false constr
R29332:29332 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29337:29337 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29343:29343 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29338:29342 Basics <> false constr
R29333:29336 Basics <> true constr
R29319:29319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29325:29325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29330:29330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29326:29329 Basics <> true constr
R29320:29324 Basics <> false constr
R29306:29306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29311:29311 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29317:29317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29312:29316 Basics <> false constr
R29307:29310 Basics <> true constr
prf 29527:29534 <> map_snoc
R29562:29562 Poly <> Y var
R29559:29559 Poly <> X var
R29567:29570 Poly <> list ind
R29572:29572 Poly <> X var
R29577:29577 Poly <> X var
R29599:29599 Coq.Init.Logic <> :type_scope:x_'='_x not
R29584:29586 Poly <> map def
R29590:29593 Poly <> snoc def
R29597:29597 Poly <> v var
R29595:29595 Poly <> l var
R29588:29588 Poly <> f var
R29600:29603 Poly <> snoc def
R29616:29616 Poly <> f var
R29618:29618 Poly <> v var
R29606:29608 Poly <> map def
R29612:29612 Poly <> l var
R29610:29610 Poly <> f var
prf 29783:29789 <> map_rev
R29823:29823 Poly <> Y var
R29818:29818 Poly <> X var
R29831:29834 Poly <> list ind
R29836:29836 Poly <> X var
R29855:29857 Coq.Init.Logic <> :type_scope:x_'='_x not
R29842:29844 Poly <> map def
R29849:29851 Poly <> rev def
R29853:29853 Poly <> l var
R29846:29846 Poly <> f var
R29858:29860 Poly <> rev def
R29863:29865 Poly <> map def
R29869:29869 Poly <> l var
R29867:29867 Poly <> f var
R29990:29997 Poly <> map_snoc thm
R29990:29997 Poly <> map_snoc thm
def 30516:30523 <> flat_map
R30544:30547 Poly <> list ind
R30549:30549 Poly <> Y var
R30539:30539 Poly <> X var
R30555:30558 Poly <> list ind
R30560:30560 Poly <> X var
R30585:30588 Poly <> list ind
R30590:30590 Poly <> Y var
R30604:30604 Poly <> l var
R30615:30617 Poly <> nil constr
R30622:30624 Poly <> nil constr
R30631:30632 Poly <> ::x_'::'_x not
R30638:30640 Poly <> app def
R30649:30656 Poly <> flat_map def
R30658:30658 Poly <> f var
R30642:30642 Poly <> f var
def 30700:30713 <> test_flat_map1
R30753:30757 Coq.Init.Logic <> :type_scope:x_'='_x not
R30718:30725 Poly <> flat_map def
R30746:30746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30748:30748 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30750:30750 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30752:30752 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30737:30737 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30739:30739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30741:30741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30743:30743 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30742:30742 Poly <> n var
R30740:30740 Poly <> n var
R30738:30738 Poly <> n var
R30758:30758 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30760:30761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30763:30764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30766:30767 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30769:30770 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30772:30773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30775:30776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30778:30779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30781:30782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30784:30784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31006:31015 <> option_map
R31040:31040 Poly <> Y var
R31035:31035 Poly <> X var
R31049:31054 Poly <> option ind
R31056:31056 Poly <> X var
R31083:31088 Poly <> option ind
R31090:31090 Poly <> Y var
R31103:31104 Poly <> xo var
R31117:31120 Poly <> None constr
R31125:31128 Poly <> None constr
R31136:31139 Poly <> Some constr
R31146:31149 Poly <> Some constr
R31152:31152 Poly <> f var
def 31669:31675 <> filter'
R31696:31699 Basics <> bool ind
R31693:31693 Poly <> X var
R31705:31708 Poly <> list ind
R31710:31710 Poly <> X var
R31732:31735 Poly <> list ind
R31737:31737 Poly <> X var
R31751:31751 Poly <> l var
R31762:31763 Poly <> ::'['_']' not
R31772:31773 Poly <> ::'['_']' not
R31780:31783 Poly <> ::x_'::'_x not
R31792:31795 Poly <> test var
R31863:31869 Poly <> filter' def
R31873:31876 Poly <> test var
R31871:31871 Poly <> X var
R31805:31809 Poly <> ::x_'::'_x not
R31826:31826 Poly <> ::x_'::'_x not
R31810:31816 Poly <> filter' def
R31820:31823 Poly <> test var
R31818:31818 Poly <> X var
def 31896:31899 <> map'
R31918:31918 Poly <> Y var
R31915:31915 Poly <> X var
R31924:31927 Poly <> list ind
R31929:31929 Poly <> X var
R31948:31951 Poly <> list ind
R31953:31953 Poly <> Y var
R31967:31967 Poly <> l var
R31978:31979 Poly <> ::'['_']' not
R31988:31989 Poly <> ::'['_']' not
R31996:31999 Poly <> ::x_'::'_x not
R32005:32005 Poly <> ::x_'::'_x not
R32009:32014 Poly <> ::x_'::'_x not
R32027:32027 Poly <> ::x_'::'_x not
R32006:32006 Poly <> f var
R32015:32018 Poly <> map' def
R32024:32024 Poly <> f var
R32022:32022 Poly <> Y var
R32020:32020 Poly <> X var
def 32348:32351 <> fold
R32374:32374 Poly <> Y var
R32371:32371 Poly <> Y var
R32368:32368 Poly <> X var
R32380:32383 Poly <> list ind
R32385:32385 Poly <> X var
R32391:32391 Poly <> Y var
R32396:32396 Poly <> Y var
R32409:32409 Poly <> l var
R32420:32422 Poly <> nil constr
R32427:32427 Poly <> b var
R32434:32437 Poly <> ::x_'::'_x not
R32443:32443 Poly <> f var
R32448:32451 Poly <> fold def
R32457:32457 Poly <> b var
R32453:32453 Poly <> f var
R32930:32933 Poly <> fold def
R32935:32938 Basics <> andb def
R32948:32951 Basics <> andb def
def 33012:33024 <> fold_example1
R33049:33051 Coq.Init.Logic <> :type_scope:x_'='_x not
R33028:33031 Poly <> fold def
R33038:33038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33040:33040 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33042:33042 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33044:33044 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33046:33046 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33033:33036 Coq.Init.Peano <> mult def
def 33090:33102 <> fold_example2
R33143:33145 Coq.Init.Logic <> :type_scope:x_'='_x not
R33106:33109 Poly <> fold def
R33139:33142 Basics <> true constr
R33116:33116 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33121:33121 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33126:33126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33132:33132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33137:33137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33133:33136 Basics <> true constr
R33127:33131 Basics <> false constr
R33122:33125 Basics <> true constr
R33117:33120 Basics <> true constr
R33111:33114 Basics <> andb def
R33146:33150 Basics <> false constr
def 33187:33199 <> fold_example3
R33234:33236 Coq.Init.Logic <> :type_scope:x_'='_x not
R33203:33206 Poly <> fold def
R33232:33233 Poly <> ::'['_']' not
R33213:33213 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33217:33217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33220:33220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33226:33226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33230:33230 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33227:33227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33229:33229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33221:33221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33223:33223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33225:33225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33218:33219 Poly <> ::'['_']' not
R33214:33214 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33216:33216 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33208:33210 Poly <> app def
R33237:33237 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33239:33239 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33241:33241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33243:33243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33245:33245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 33633:33645 <> fold_example4
R33681:33681 Coq.Init.Logic <> :type_scope:x_'='_x not
R33648:33651 Poly <> fold def
R33678:33680 Poly <> nil constr
R33658:33658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33660:33660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33662:33662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33664:33664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33666:33666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33668:33668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33670:33670 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33672:33672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33674:33674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33676:33676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33653:33656 Poly <> cons constr
R33682:33682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33684:33684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33686:33686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33688:33688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33690:33690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33692:33692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33694:33694 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33696:33696 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33698:33698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33700:33700 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 34285:34292 <> constfun
R34308:34308 Poly <> X var
R34318:34318 Poly <> X var
R34313:34315 Coq.Init.Datatypes <> nat ind
R34332:34334 Coq.Init.Datatypes <> nat ind
R34340:34340 Poly <> x var
def 34355:34359 <> ftrue
R34364:34371 Poly <> constfun def
R34373:34376 Basics <> true constr
R34385:34389 Poly <> ftrue def
def 34400:34416 <> constfun_example1
R34427:34429 Coq.Init.Logic <> :type_scope:x_'='_x not
R34420:34424 Poly <> ftrue def
R34430:34433 Basics <> true constr
def 34470:34486 <> constfun_example2
R34505:34507 Coq.Init.Logic <> :type_scope:x_'='_x not
R34491:34498 Poly <> constfun def
def 34840:34847 <> override
R34868:34868 Poly <> X var
R34863:34865 Coq.Init.Datatypes <> nat ind
R34874:34876 Coq.Init.Datatypes <> nat ind
R34882:34882 Poly <> X var
R34892:34892 Poly <> X var
R34887:34889 Coq.Init.Datatypes <> nat ind
R34906:34908 Coq.Init.Datatypes <> nat ind
R34917:34923 Basics <> beq_nat def
R34927:34928 Poly <> k' var
R34925:34925 Poly <> k var
R34942:34942 Poly <> f var
R34944:34945 Poly <> k' var
R34935:34935 Poly <> x var
def 35149:35159 <> fmostlytrue
R35164:35171 Poly <> override def
R35200:35204 Basics <> false constr
R35174:35181 Poly <> override def
R35191:35195 Basics <> false constr
R35183:35187 Poly <> ftrue def
def 35216:35232 <> override_example1
R35249:35251 Coq.Init.Logic <> :type_scope:x_'='_x not
R35236:35246 Poly <> fmostlytrue def
R35252:35255 Basics <> true constr
def 35292:35308 <> override_example2
R35325:35327 Coq.Init.Logic <> :type_scope:x_'='_x not
R35312:35322 Poly <> fmostlytrue def
R35328:35332 Basics <> false constr
def 35369:35385 <> override_example3
R35402:35404 Coq.Init.Logic <> :type_scope:x_'='_x not
R35389:35399 Poly <> fmostlytrue def
R35405:35408 Basics <> true constr
def 35445:35461 <> override_example4
R35478:35480 Coq.Init.Logic <> :type_scope:x_'='_x not
R35465:35475 Poly <> fmostlytrue def
R35481:35485 Basics <> false constr
prf 35773:35788 <> override_example
R35802:35805 Basics <> bool ind
R35843:35845 Coq.Init.Logic <> :type_scope:x_'='_x not
R35812:35819 Poly <> override def
R35836:35839 Basics <> true constr
R35822:35829 Poly <> constfun def
R35831:35831 Poly <> b var
R35846:35846 Poly <> b var
prf 36828:36845 <> unfold_example_bad
R36889:36891 Coq.Init.Logic <> :type_scope:x_'='_x not
R36885:36887 Basics <> :nat_scope:x_'+'_x not
R36878:36882 Poly <> plus3 def
R36884:36884 Poly <> n var
R36893:36895 Basics <> :nat_scope:x_'+'_x not
R36892:36892 Poly <> m var
R36868:36870 Coq.Init.Logic <> :type_scope:x_'='_x not
R36864:36866 Basics <> :nat_scope:x_'+'_x not
R36867:36867 Poly <> n var
R36871:36871 Poly <> m var
prf 37262:37275 <> unfold_example
R37319:37321 Coq.Init.Logic <> :type_scope:x_'='_x not
R37315:37317 Basics <> :nat_scope:x_'+'_x not
R37308:37312 Poly <> plus3 def
R37314:37314 Poly <> n var
R37323:37325 Basics <> :nat_scope:x_'+'_x not
R37322:37322 Poly <> m var
R37298:37300 Coq.Init.Logic <> :type_scope:x_'='_x not
R37294:37296 Basics <> :nat_scope:x_'+'_x not
R37297:37297 Poly <> n var
R37301:37301 Poly <> m var
R37361:37365 Poly <> plus3 def
prf 37582:37592 <> override_eq
R37624:37624 Poly <> X var
R37619:37621 Coq.Init.Datatypes <> nat ind
R37648:37650 Coq.Init.Logic <> :type_scope:x_'='_x not
R37631:37638 Poly <> override def
R37644:37644 Poly <> x var
R37642:37642 Poly <> k var
R37640:37640 Poly <> f var
R37647:37647 Poly <> k var
R37651:37651 Poly <> x var
R37688:37695 Poly <> override def
R37711:37722 Induction <> beq_nat_refl thm
R37711:37722 Induction <> beq_nat_refl thm
prf 37919:37930 <> override_neq
R37972:37972 Poly <> X var
R37967:37969 Coq.Init.Datatypes <> nat ind
R38041:38043 Coq.Init.Logic <> :type_scope:x_'='_x not
R38021:38028 Poly <> override def
R38035:38036 Poly <> x2 var
R38032:38033 Poly <> k2 var
R38030:38030 Poly <> f var
R38039:38040 Poly <> k1 var
R38044:38045 Poly <> x1 var
R38006:38008 Coq.Init.Logic <> :type_scope:x_'='_x not
R37993:37999 Basics <> beq_nat def
R38004:38005 Poly <> k1 var
R38001:38002 Poly <> k2 var
R38009:38013 Basics <> false constr
R37982:37984 Coq.Init.Logic <> :type_scope:x_'='_x not
R37978:37978 Poly <> f var
R37980:37981 Poly <> k1 var
R37985:37986 Poly <> x1 var
R38072:38079 Poly <> override def
def 38602:38612 <> fold_length
R38630:38633 Poly <> list ind
R38635:38635 Poly <> X var
R38640:38642 Coq.Init.Datatypes <> nat ind
R38649:38652 Poly <> fold def
R38671:38671 Poly <> l var
R38666:38666 Coq.Init.Datatypes <> S constr
R38668:38668 Poly <> n var
def 38685:38701 <> test_fold_length1
R38726:38728 Coq.Init.Logic <> :type_scope:x_'='_x not
R38705:38715 Poly <> fold_length def
R38717:38717 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38719:38719 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38721:38721 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38723:38723 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38725:38725 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 38814:38832 <> fold_length_correct
R38850:38853 Poly <> list ind
R38855:38855 Poly <> X var
R38874:38876 Coq.Init.Logic <> :type_scope:x_'='_x not
R38861:38871 Poly <> fold_length def
R38873:38873 Poly <> l var
R38877:38882 Poly <> length def
R38884:38884 Poly <> l var
R38957:38967 Poly <> fold_length def
R39023:39033 Poly <> fold_length def
R39072:39082 Poly <> fold_length def
def 39268:39275 <> fold_map
R39298:39298 Poly <> Y var
R39293:39293 Poly <> X var
R39306:39309 Poly <> list ind
R39311:39311 Poly <> X var
R39316:39319 Poly <> list ind
R39321:39321 Poly <> Y var
R39327:39330 Poly <> fold def
R39365:39367 Poly <> nil constr
R39363:39363 Poly <> l var
R39346:39349 Poly <> cons constr
R39357:39358 Poly <> l' var
R39352:39352 Poly <> f var
R39354:39354 Poly <> x var
prf 39488:39499 <> map_fold_map
R39514:39517 Poly <> list ind
R39519:39521 Coq.Init.Datatypes <> nat ind
R39538:39538 Coq.Init.Logic <> :type_scope:x_'='_x not
R39527:39529 Poly <> map def
R39537:39537 Poly <> l var
R39531:39535 Poly <> plus3 def
R39539:39546 Poly <> fold_map def
R39554:39554 Poly <> l var
R39548:39552 Poly <> plus3 def
R39684:39691 Poly <> fold_map def
