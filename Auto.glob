DIGEST 4e3f7e243ef93cdd2703eec367679de4
FAuto
R47:49 Imp <> <> lib
prf 1075:1093 <> ceval_deterministic
R1170:1172 Coq.Init.Logic <> :type_scope:x_'='_x not
R1167:1169 Auto <> st1 var
R1173:1175 Auto <> st2 var
R1146:1148 Imp <> ::x_'/'_x_'||'_x not
R1151:1154 Imp <> ::x_'/'_x_'||'_x not
R1145:1145 Auto <> c var
R1149:1150 Auto <> st var
R1155:1157 Auto <> st2 var
R1123:1125 Imp <> ::x_'/'_x_'||'_x not
R1128:1131 Imp <> ::x_'/'_x_'||'_x not
R1122:1122 Auto <> c var
R1126:1127 Auto <> st var
R1132:1134 Auto <> st1 var
R1402:1404 Coq.Init.Logic <> :type_scope:x_'='_x not
R1402:1404 Coq.Init.Logic <> :type_scope:x_'='_x not
R2183:2185 Coq.Init.Logic <> :type_scope:x_'='_x not
R2183:2185 Coq.Init.Logic <> :type_scope:x_'='_x not
def 2763:2776 <> auto_example_1
R2831:2831 Auto <> R var
R2826:2826 Auto <> P var
R2820:2820 Auto <> R var
R2815:2815 Auto <> Q var
R2808:2808 Auto <> Q var
R2803:2803 Auto <> P var
def 3047:3061 <> auto_example_1'
R3116:3116 Auto <> R var
R3111:3111 Auto <> P var
R3105:3105 Auto <> R var
R3100:3100 Auto <> Q var
R3093:3093 Auto <> Q var
R3088:3088 Auto <> P var
def 3654:3667 <> auto_example_2
R3799:3799 Auto <> U var
R3792:3792 Auto <> P var
R3785:3785 Auto <> T var
R3776:3776 Auto <> S var
R3773:3773 Auto <> P var
R3766:3766 Auto <> Q var
R3763:3763 Auto <> P var
R3753:3753 Auto <> U var
R3748:3748 Auto <> T var
R3743:3743 Auto <> S var
R3734:3734 Auto <> R var
R3729:3729 Auto <> T var
R3720:3720 Auto <> R var
R3715:3715 Auto <> P var
R3706:3706 Auto <> Q var
R3701:3701 Auto <> P var
def 3945:3958 <> auto_example_3
R4111:4111 Auto <> U var
R4106:4106 Auto <> P var
R4100:4100 Auto <> U var
R4095:4095 Auto <> T var
R4088:4088 Auto <> T var
R4083:4083 Auto <> S var
R4048:4048 Auto <> S var
R4043:4043 Auto <> R var
R4036:4036 Auto <> R var
R4031:4031 Auto <> Q var
R4024:4024 Auto <> Q var
R4019:4019 Auto <> P var
def 4656:4669 <> auto_example_4
R4718:4722 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4729:4729 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4717:4717 Auto <> P var
R4724:4727 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4723:4723 Auto <> Q var
R4728:4728 Auto <> R var
R4709:4709 Auto <> R var
R4704:4704 Auto <> Q var
R4696:4696 Auto <> Q var
def 4849:4862 <> auto_example_5
R4866:4868 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 5104:5113 <> le_antisym
R5129:5131 Coq.Init.Datatypes <> nat ind
R5157:5159 Coq.Init.Logic <> :type_scope:x_'='_x not
R5156:5156 Auto <> n var
R5160:5160 Auto <> m var
R5141:5144 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5136:5139 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R5135:5135 Auto <> n var
R5140:5140 Auto <> m var
R5146:5149 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R5145:5145 Auto <> m var
R5150:5150 Auto <> n var
def 5199:5212 <> auto_example_6
R5231:5233 Coq.Init.Datatypes <> nat ind
R5288:5290 Coq.Init.Logic <> :type_scope:x_'='_x not
R5287:5287 Auto <> n var
R5291:5291 Auto <> m var
R5275:5278 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R5274:5274 Auto <> n var
R5279:5279 Auto <> p var
R5255:5258 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5250:5253 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R5249:5249 Auto <> n var
R5254:5254 Auto <> m var
R5260:5263 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R5259:5259 Auto <> m var
R5264:5264 Auto <> n var
R5240:5242 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R5239:5239 Auto <> n var
R5243:5243 Auto <> p var
R5387:5396 Auto <> le_antisym thm
R5387:5396 Auto <> le_antisym thm
R6212:6221 Auto <> le_antisym thm
def 6234:6248 <> auto_example_6'
R6267:6269 Coq.Init.Datatypes <> nat ind
R6324:6326 Coq.Init.Logic <> :type_scope:x_'='_x not
R6323:6323 Auto <> n var
R6327:6327 Auto <> m var
R6311:6314 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6310:6310 Auto <> n var
R6315:6315 Auto <> p var
R6291:6294 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6286:6289 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6285:6285 Auto <> n var
R6290:6290 Auto <> m var
R6296:6299 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6295:6295 Auto <> m var
R6300:6300 Auto <> n var
R6276:6278 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6275:6275 Auto <> n var
R6279:6279 Auto <> p var
def 6407:6417 <> is_fortytwo
R6425:6427 Coq.Init.Logic <> :type_scope:x_'='_x not
R6424:6424 Auto <> x var
def 6442:6455 <> auto_example_7
R6492:6502 Auto <> is_fortytwo def
R6504:6504 Auto <> x var
R6476:6479 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6470:6473 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6469:6469 Auto <> x var
R6482:6485 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6486:6486 Auto <> x var
R6562:6572 Auto <> is_fortytwo def
def 6585:6599 <> auto_example_7'
R6637:6647 Auto <> is_fortytwo def
R6649:6649 Auto <> x var
R6621:6624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6615:6618 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6614:6614 Auto <> x var
R6627:6630 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6631:6631 Auto <> x var
R6696:6700 Auto <> ceval ind
def 6716:6719 <> st12
R6724:6729 Imp <> update def
R6756:6756 Imp <> Y def
R6732:6737 Imp <> update def
R6751:6751 Imp <> X def
R6739:6749 Imp <> empty_state def
def 6773:6776 <> st21
R6781:6786 Imp <> update def
R6813:6813 Imp <> Y def
R6789:6794 Imp <> update def
R6808:6808 Imp <> X def
R6796:6806 Imp <> empty_state def
def 6827:6840 <> auto_example_8
R6844:6850 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6853:6856 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6857:6857 Imp <> ::x_'/'_x_'||'_x not
R6967:6970 Imp <> ::x_'/'_x_'||'_x not
R6975:6978 Imp <> ::x_'/'_x_'||'_x not
R6858:6862 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6882:6893 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6922:6933 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6961:6966 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6863:6865 Imp <> BLe constr
R6876:6878 Imp <> AId constr
R6880:6880 Imp <> Y def
R6868:6870 Imp <> AId constr
R6872:6872 Imp <> X def
R6895:6899 Imp <> ::x_'::='_x not
R6894:6894 Imp <> Z def
R6900:6905 Imp <> AMinus constr
R6916:6918 Imp <> AId constr
R6920:6920 Imp <> X def
R6908:6910 Imp <> AId constr
R6912:6912 Imp <> Y def
R6935:6939 Imp <> ::x_'::='_x not
R6934:6934 Imp <> Y def
R6940:6944 Imp <> APlus constr
R6955:6957 Imp <> AId constr
R6959:6959 Imp <> Z def
R6947:6949 Imp <> AId constr
R6951:6951 Imp <> X def
R6971:6974 Auto <> st21 def
R6979:6980 Auto <> s' var
def 7028:7042 <> auto_example_8'
R7046:7052 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7055:7058 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7059:7059 Imp <> ::x_'/'_x_'||'_x not
R7169:7172 Imp <> ::x_'/'_x_'||'_x not
R7177:7180 Imp <> ::x_'/'_x_'||'_x not
R7060:7064 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7084:7095 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7124:7135 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7163:7168 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7065:7067 Imp <> BLe constr
R7078:7080 Imp <> AId constr
R7082:7082 Imp <> Y def
R7070:7072 Imp <> AId constr
R7074:7074 Imp <> X def
R7097:7101 Imp <> ::x_'::='_x not
R7096:7096 Imp <> Z def
R7102:7107 Imp <> AMinus constr
R7118:7120 Imp <> AId constr
R7122:7122 Imp <> X def
R7110:7112 Imp <> AId constr
R7114:7114 Imp <> Y def
R7137:7141 Imp <> ::x_'::='_x not
R7136:7136 Imp <> Y def
R7142:7146 Imp <> APlus constr
R7157:7159 Imp <> AId constr
R7161:7161 Imp <> Z def
R7149:7151 Imp <> AId constr
R7153:7153 Imp <> X def
R7173:7176 Auto <> st12 def
R7181:7182 Auto <> s' var
prf 7524:7543 <> ceval_deterministic'
R7620:7622 Coq.Init.Logic <> :type_scope:x_'='_x not
R7617:7619 Auto <> st1 var
R7623:7625 Auto <> st2 var
R7596:7598 Imp <> ::x_'/'_x_'||'_x not
R7601:7604 Imp <> ::x_'/'_x_'||'_x not
R7595:7595 Auto <> c var
R7599:7600 Auto <> st var
R7605:7607 Auto <> st2 var
R7573:7575 Imp <> ::x_'/'_x_'||'_x not
R7578:7581 Imp <> ::x_'/'_x_'||'_x not
R7572:7572 Auto <> c var
R7576:7577 Auto <> st var
R7582:7584 Auto <> st1 var
R7798:7800 Coq.Init.Logic <> :type_scope:x_'='_x not
R7798:7800 Coq.Init.Logic <> :type_scope:x_'='_x not
R8361:8363 Coq.Init.Logic <> :type_scope:x_'='_x not
R8361:8363 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 9409:9429 <> ceval_deterministic''
R9506:9508 Coq.Init.Logic <> :type_scope:x_'='_x not
R9503:9505 Auto <> st1 var
R9509:9511 Auto <> st2 var
R9482:9484 Imp <> ::x_'/'_x_'||'_x not
R9487:9490 Imp <> ::x_'/'_x_'||'_x not
R9481:9481 Auto <> c var
R9485:9486 Auto <> st var
R9491:9493 Auto <> st2 var
R9459:9461 Imp <> ::x_'/'_x_'||'_x not
R9464:9467 Imp <> ::x_'/'_x_'||'_x not
R9458:9458 Auto <> c var
R9462:9463 Auto <> st var
R9468:9470 Auto <> st1 var
R9684:9686 Coq.Init.Logic <> :type_scope:x_'='_x not
R9684:9686 Coq.Init.Logic <> :type_scope:x_'='_x not
R10175:10177 Coq.Init.Logic <> :type_scope:x_'='_x not
R10175:10177 Coq.Init.Logic <> :type_scope:x_'='_x not
R10499:10501 Coq.Init.Logic <> :type_scope:x_'='_x not
R10502:10505 Coq.Init.Datatypes <> true constr
R10499:10501 Coq.Init.Logic <> :type_scope:x_'='_x not
R10502:10505 Coq.Init.Datatypes <> true constr
R10514:10516 Coq.Init.Logic <> :type_scope:x_'='_x not
R10517:10521 Coq.Init.Datatypes <> false constr
R10514:10516 Coq.Init.Logic <> :type_scope:x_'='_x not
R10517:10521 Coq.Init.Datatypes <> false constr
prf 10974:10995 <> ceval_deterministic'''
R11072:11074 Coq.Init.Logic <> :type_scope:x_'='_x not
R11069:11071 Auto <> st1 var
R11075:11077 Auto <> st2 var
R11048:11050 Imp <> ::x_'/'_x_'||'_x not
R11053:11056 Imp <> ::x_'/'_x_'||'_x not
R11047:11047 Auto <> c var
R11051:11052 Auto <> st var
R11057:11059 Auto <> st2 var
R11025:11027 Imp <> ::x_'/'_x_'||'_x not
R11030:11033 Imp <> ::x_'/'_x_'||'_x not
R11024:11024 Auto <> c var
R11028:11029 Auto <> st var
R11034:11036 Auto <> st1 var
R11266:11268 Coq.Init.Logic <> :type_scope:x_'='_x not
R11266:11268 Coq.Init.Logic <> :type_scope:x_'='_x not
R11423:11425 Coq.Init.Logic <> :type_scope:x_'='_x not
R11423:11425 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 11939:11961 <> ceval_deterministic''''
R12038:12040 Coq.Init.Logic <> :type_scope:x_'='_x not
R12035:12037 Auto <> st1 var
R12041:12043 Auto <> st2 var
R12014:12016 Imp <> ::x_'/'_x_'||'_x not
R12019:12022 Imp <> ::x_'/'_x_'||'_x not
R12013:12013 Auto <> c var
R12017:12018 Auto <> st var
R12023:12025 Auto <> st2 var
R11991:11993 Imp <> ::x_'/'_x_'||'_x not
R11996:11999 Imp <> ::x_'/'_x_'||'_x not
R11990:11990 Auto <> c var
R11994:11995 Auto <> st var
R12000:12002 Auto <> st1 var
R12519:12522 Coq.Init.Logic <> :type_scope:x_'='_x not
R12512:12512 Auto <> x var
R12519:12522 Coq.Init.Logic <> :type_scope:x_'='_x not
R12512:12512 Auto <> x var
prf 13229:13252 <> ceval_deterministic'''''
R13329:13331 Coq.Init.Logic <> :type_scope:x_'='_x not
R13326:13328 Auto <> st1 var
R13332:13334 Auto <> st2 var
R13305:13307 Imp <> ::x_'/'_x_'||'_x not
R13310:13313 Imp <> ::x_'/'_x_'||'_x not
R13304:13304 Auto <> c var
R13308:13309 Auto <> st var
R13314:13316 Auto <> st2 var
R13282:13284 Imp <> ::x_'/'_x_'||'_x not
R13287:13290 Imp <> ::x_'/'_x_'||'_x not
R13281:13281 Auto <> c var
R13285:13286 Auto <> st var
R13291:13293 Auto <> st1 var
mod 13764:13769 <> Repeat
ind 13783:13785 Repeat com
constr 13801:13805 Repeat CSkip
constr 13817:13821 Repeat CAsgn
constr 13847:13850 Repeat CSeq
constr 13876:13878 Repeat CIf
constr 13912:13917 Repeat CWhile
constr 13944:13950 Repeat CRepeat
R13809:13811 Auto <> com ind
R13839:13841 Auto <> com ind
R13831:13834 Imp <> aexp ind
R13825:13826 SfLib <> id ind
R13868:13870 Auto <> com ind
R13861:13863 Auto <> com ind
R13854:13856 Auto <> com ind
R13904:13906 Auto <> com ind
R13897:13899 Auto <> com ind
R13890:13892 Auto <> com ind
R13882:13885 Imp <> bexp ind
R13936:13938 Auto <> com ind
R13929:13931 Auto <> com ind
R13921:13924 Imp <> bexp ind
R13969:13971 Auto <> com ind
R13961:13964 Imp <> bexp ind
R13954:13956 Auto <> com ind
R14438:14442 Auto Repeat CSkip constr
not 14423 Repeat ::'SKIP'
R14471:14474 Auto Repeat CSeq constr
not 14454 Repeat ::x_';'_x
R14547:14551 Auto Repeat CAsgn constr
not 14528 Repeat ::x_'::='_x
R14614:14619 Auto Repeat CWhile constr
not 14582 Repeat ::'WHILE'_x_'DO'_x_'END'
R14714:14716 Auto Repeat CIf constr
not 14671 Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R14811:14817 Auto Repeat CRepeat constr
not 14773 Repeat ::'REPEAT'_x_'UNTIL'_x_'END'
ind 14873:14877 Repeat ceval
constr 14918:14923 Repeat E_Skip
constr 14965:14969 Repeat E_Ass
constr 15063:15067 Repeat E_Seq
constr 15183:15190 Repeat E_IfTrue
constr 15322:15330 Repeat E_IfFalse
constr 15463:15472 Repeat E_WhileEnd
constr 15565:15575 Repeat E_WhileLoop
constr 15748:15758 Repeat E_RepeatEnd
constr 15876:15887 Repeat E_RepeatLoop
R14897:14901 Imp <> state def
R14890:14892 Auto Repeat com ind
R14881:14885 Imp <> state def
R14944:14948 Auto <> ceval ind
R14958:14959 Auto <> st var
R14953:14956 Auto Repeat ::'SKIP' not
R14950:14951 Auto <> st var
R15023:15027 Auto <> ceval ind
R15044:15049 Imp <> update def
R15056:15056 Auto <> n var
R15054:15054 Auto <> X var
R15051:15052 Auto <> st var
R15034:15038 Auto Repeat ::x_'::='_x not
R15033:15033 Auto <> X var
R15039:15040 Auto <> a1 var
R15029:15030 Auto <> st var
R15009:15011 Coq.Init.Logic <> :type_scope:x_'='_x not
R14998:15002 Imp <> aeval def
R15007:15008 Auto <> a1 var
R15004:15005 Auto <> st var
R15012:15012 Auto <> n var
R15155:15159 Auto <> ceval ind
R15174:15177 Auto <> st'' var
R15167:15169 Auto Repeat ::x_';'_x not
R15165:15166 Auto <> c1 var
R15170:15171 Auto <> c2 var
R15161:15162 Auto <> st var
R15128:15132 Auto <> ceval ind
R15141:15144 Auto <> st'' var
R15138:15139 Auto <> c2 var
R15134:15136 Auto <> st' var
R15103:15107 Auto <> ceval ind
R15115:15117 Auto <> st' var
R15112:15113 Auto <> c1 var
R15109:15110 Auto <> st var
R15277:15281 Auto <> ceval ind
R15314:15316 Auto <> st' var
R15287:15290 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15293:15298 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15301:15306 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15309:15311 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15291:15292 Auto <> b1 var
R15299:15300 Auto <> c1 var
R15307:15308 Auto <> c2 var
R15283:15284 Auto <> st var
R15252:15256 Auto <> ceval ind
R15264:15266 Auto <> st' var
R15261:15262 Auto <> c1 var
R15258:15259 Auto <> st var
R15235:15237 Coq.Init.Logic <> :type_scope:x_'='_x not
R15224:15228 Imp <> beval def
R15233:15234 Auto <> b1 var
R15230:15231 Auto <> st var
R15238:15241 Coq.Init.Datatypes <> true constr
R15418:15422 Auto <> ceval ind
R15455:15457 Auto <> st' var
R15428:15431 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15434:15439 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15442:15447 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15450:15452 Auto Repeat ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15432:15433 Auto <> b1 var
R15440:15441 Auto <> c1 var
R15448:15449 Auto <> c2 var
R15424:15425 Auto <> st var
R15393:15397 Auto <> ceval ind
R15405:15407 Auto <> st' var
R15402:15403 Auto <> c2 var
R15399:15400 Auto <> st var
R15375:15377 Coq.Init.Logic <> :type_scope:x_'='_x not
R15364:15368 Imp <> beval def
R15373:15374 Auto <> b1 var
R15370:15371 Auto <> st var
R15378:15382 Coq.Init.Datatypes <> false constr
R15528:15532 Auto <> ceval ind
R15558:15559 Auto <> st var
R15538:15543 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15546:15549 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15552:15555 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15544:15545 Auto <> b1 var
R15550:15551 Auto <> c1 var
R15534:15535 Auto <> st var
R15510:15512 Coq.Init.Logic <> :type_scope:x_'='_x not
R15499:15503 Imp <> beval def
R15508:15509 Auto <> b1 var
R15505:15506 Auto <> st var
R15513:15517 Coq.Init.Datatypes <> false constr
R15709:15713 Auto <> ceval ind
R15739:15742 Auto <> st'' var
R15719:15724 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15727:15730 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15733:15736 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15725:15726 Auto <> b1 var
R15731:15732 Auto <> c1 var
R15715:15716 Auto <> st var
R15664:15668 Auto <> ceval ind
R15695:15698 Auto <> st'' var
R15675:15680 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15683:15686 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15689:15692 Auto Repeat ::'WHILE'_x_'DO'_x_'END' not
R15681:15682 Auto <> b1 var
R15687:15688 Auto <> c1 var
R15670:15672 Auto <> st' var
R15639:15643 Auto <> ceval ind
R15651:15653 Auto <> st' var
R15648:15649 Auto <> c1 var
R15645:15646 Auto <> st var
R15622:15624 Coq.Init.Logic <> :type_scope:x_'='_x not
R15611:15615 Imp <> beval def
R15620:15621 Auto <> b1 var
R15617:15618 Auto <> st var
R15625:15628 Coq.Init.Datatypes <> true constr
R15843:15847 Auto <> ceval ind
R15868:15870 Auto <> st' var
R15853:15859 Auto Repeat CRepeat constr
R15864:15865 Auto <> b1 var
R15861:15862 Auto <> c1 var
R15849:15850 Auto <> st var
R15826:15828 Coq.Init.Logic <> :type_scope:x_'='_x not
R15814:15818 Imp <> beval def
R15824:15825 Auto <> b1 var
R15820:15822 Auto <> st' var
R15829:15832 Coq.Init.Datatypes <> true constr
R15789:15793 Auto <> ceval ind
R15801:15803 Auto <> st' var
R15798:15799 Auto <> c1 var
R15795:15796 Auto <> st var
R16018:16022 Auto <> ceval ind
R16043:16046 Auto <> st'' var
R16028:16034 Auto Repeat CRepeat constr
R16039:16040 Auto <> b1 var
R16036:16037 Auto <> c1 var
R16024:16025 Auto <> st var
R15978:15982 Auto <> ceval ind
R16004:16007 Auto <> st'' var
R15989:15995 Auto Repeat CRepeat constr
R16000:16001 Auto <> b1 var
R15997:15998 Auto <> c1 var
R15984:15986 Auto <> st' var
R15960:15962 Coq.Init.Logic <> :type_scope:x_'='_x not
R15948:15952 Imp <> beval def
R15958:15959 Auto <> b1 var
R15954:15956 Auto <> st' var
R15963:15967 Coq.Init.Datatypes <> false constr
R15923:15927 Auto <> ceval ind
R15935:15937 Auto <> st' var
R15932:15933 Auto <> c1 var
R15929:15930 Auto <> st var
R16387:16391 Auto Repeat ceval ind
not 16362 Repeat ::x_'/'_x_'||'_x
prf 16479:16497 Repeat ceval_deterministic
R16574:16576 Coq.Init.Logic <> :type_scope:x_'='_x not
R16571:16573 Auto <> st1 var
R16577:16579 Auto <> st2 var
R16550:16552 Auto Repeat ::x_'/'_x_'||'_x not
R16555:16558 Auto Repeat ::x_'/'_x_'||'_x not
R16553:16554 Auto <> st var
R16549:16549 Auto <> c var
R16559:16561 Auto <> st2 var
R16527:16529 Auto Repeat ::x_'/'_x_'||'_x not
R16532:16535 Auto Repeat ::x_'/'_x_'||'_x not
R16530:16531 Auto <> st var
R16526:16526 Auto <> c var
R16536:16538 Auto <> st1 var
prf 17075:17094 Repeat ceval_deterministic'
R17171:17173 Coq.Init.Logic <> :type_scope:x_'='_x not
R17168:17170 Auto <> st1 var
R17174:17176 Auto <> st2 var
R17147:17149 Auto Repeat ::x_'/'_x_'||'_x not
R17152:17155 Auto Repeat ::x_'/'_x_'||'_x not
R17150:17151 Auto <> st var
R17146:17146 Auto <> c var
R17156:17158 Auto <> st2 var
R17124:17126 Auto Repeat ::x_'/'_x_'||'_x not
R17129:17132 Auto Repeat ::x_'/'_x_'||'_x not
R17127:17128 Auto <> st var
R17123:17123 Auto <> c var
R17133:17135 Auto <> st1 var
R17367:17372 Auto <> <> mod
