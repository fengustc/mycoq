DIGEST 9b9f75c67ddac3fa0760ad08e8217225
FImp
R1676:1680 SfLib <> <> lib
mod 2146:2149 <> AExp
ind 2266:2269 AExp aexp
constr 2285:2288 AExp ANum
constr 2308:2312 AExp APlus
constr 2341:2346 AExp AMinus
constr 2375:2379 AExp AMult
R2299:2302 Imp <> aexp ind
R2292:2294 Coq.Init.Datatypes <> nat ind
R2332:2335 Imp <> aexp ind
R2324:2327 Imp <> aexp ind
R2316:2319 Imp <> aexp ind
R2366:2369 Imp <> aexp ind
R2358:2361 Imp <> aexp ind
R2350:2353 Imp <> aexp ind
R2399:2402 Imp <> aexp ind
R2391:2394 Imp <> aexp ind
R2383:2386 Imp <> aexp ind
ind 2416:2419 AExp bexp
constr 2435:2439 AExp BTrue
constr 2452:2457 AExp BFalse
constr 2470:2472 AExp BEq
constr 2501:2503 AExp BLe
constr 2532:2535 AExp BNot
constr 2556:2559 AExp BAnd
R2443:2446 Imp <> bexp ind
R2461:2464 Imp <> bexp ind
R2492:2495 Imp <> bexp ind
R2484:2487 Imp AExp aexp ind
R2476:2479 Imp AExp aexp ind
R2523:2526 Imp <> bexp ind
R2515:2518 Imp AExp aexp ind
R2507:2510 Imp AExp aexp ind
R2547:2550 Imp <> bexp ind
R2539:2542 Imp <> bexp ind
R2579:2582 Imp <> bexp ind
R2571:2574 Imp <> bexp ind
R2563:2566 Imp <> bexp ind
def 5177:5181 AExp aeval
R5188:5191 Imp AExp aexp ind
R5196:5198 Coq.Init.Datatypes <> nat ind
R5211:5211 Imp <> a var
R5222:5225 Imp AExp ANum constr
R5238:5242 Imp AExp APlus constr
R5253:5253 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5262:5266 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5275:5275 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5254:5258 Imp <> aeval def
R5267:5271 Imp <> aeval def
R5281:5286 Imp AExp AMinus constr
R5298:5298 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5307:5311 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5320:5320 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R5299:5303 Imp <> aeval def
R5312:5316 Imp <> aeval def
R5326:5330 Imp AExp AMult constr
R5341:5341 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5350:5354 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5363:5363 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5342:5346 Imp <> aeval def
R5355:5359 Imp <> aeval def
def 5381:5391 AExp test_aeval1
R5427:5429 Coq.Init.Logic <> :type_scope:x_'='_x not
R5396:5400 Imp AExp aeval def
R5403:5407 Imp AExp APlus constr
R5419:5422 Imp AExp ANum constr
R5410:5413 Imp AExp ANum constr
def 5537:5541 AExp beval
R5548:5551 Imp AExp bexp ind
R5556:5559 Coq.Init.Datatypes <> bool ind
R5572:5572 Imp <> b var
R5583:5587 Imp AExp BTrue constr
R5598:5601 Coq.Init.Datatypes <> true constr
R5607:5612 Imp AExp BFalse constr
R5622:5626 Coq.Init.Datatypes <> false constr
R5632:5634 Imp AExp BEq constr
R5647:5653 Coq.Arith.EqNat <> beq_nat def
R5667:5671 Imp AExp aeval def
R5656:5660 Imp AExp aeval def
R5681:5683 Imp AExp BLe constr
R5696:5702 SfLib <> ble_nat def
R5716:5720 Imp AExp aeval def
R5705:5709 Imp AExp aeval def
R5730:5733 Imp AExp BNot constr
R5745:5748 Coq.Init.Datatypes <> negb def
R5751:5755 Imp <> beval def
R5765:5768 Imp AExp BAnd constr
R5780:5783 Coq.Init.Datatypes <> andb def
R5797:5801 Imp <> beval def
R5786:5790 Imp <> beval def
def 6200:6213 AExp optimize_0plus
R6218:6221 Imp AExp aexp ind
R6226:6229 Imp AExp aexp ind
R6242:6242 Imp <> a var
R6253:6256 Imp AExp ANum constr
R6269:6272 Imp AExp ANum constr
R6280:6284 Imp AExp APlus constr
R6287:6290 Imp AExp ANum constr
R6307:6320 Imp <> optimize_0plus def
R6329:6333 Imp AExp APlus constr
R6350:6354 Imp AExp APlus constr
R6377:6390 Imp <> optimize_0plus def
R6357:6370 Imp <> optimize_0plus def
R6400:6405 Imp AExp AMinus constr
R6422:6427 Imp AExp AMinus constr
R6450:6463 Imp <> optimize_0plus def
R6430:6443 Imp <> optimize_0plus def
R6473:6477 Imp AExp AMult constr
R6494:6498 Imp AExp AMult constr
R6521:6534 Imp <> optimize_0plus def
R6501:6514 Imp <> optimize_0plus def
def 6687:6705 AExp test_optimize_0plus
R6839:6843 Coq.Init.Logic <> :type_scope:x_'='_x not
R6710:6723 Imp AExp optimize_0plus def
R6726:6730 Imp AExp APlus constr
R6766:6770 Imp AExp APlus constr
R6813:6817 Imp AExp APlus constr
R6829:6832 Imp AExp ANum constr
R6820:6823 Imp AExp ANum constr
R6773:6776 Imp AExp ANum constr
R6733:6736 Imp AExp ANum constr
R6844:6848 Imp AExp APlus constr
R6860:6863 Imp AExp ANum constr
R6851:6854 Imp AExp ANum constr
prf 7083:7102 AExp optimize_0plus_sound
R7141:7143 Coq.Init.Logic <> :type_scope:x_'='_x not
R7117:7121 Imp AExp aeval def
R7124:7137 Imp AExp optimize_0plus def
R7139:7139 Imp <> a var
R7144:7148 Imp AExp aeval def
R7150:7150 Imp <> a var
prf 9256:9260 AExp ev100
R9264:9265 SfLib <> ev ind
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9295:9299 SfLib <> ev_SS constr
R9394:9397 SfLib <> ev_0 constr
R9394:9397 SfLib <> ev_0 constr
prf 9639:9644 AExp ev100'
R9648:9649 SfLib <> ev ind
R9679:9682 SfLib <> ev_0 constr
R9679:9682 SfLib <> ev_0 constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9746:9750 SfLib <> ev_SS constr
R9760:9763 SfLib <> ev_0 constr
R9760:9763 SfLib <> ev_0 constr
prf 10414:10419 AExp silly1
R10442:10444 Coq.Init.Logic <> :type_scope:x_'='_x not
R10434:10438 Imp AExp aeval def
R10440:10441 Imp <> ae var
R10445:10449 Imp AExp aeval def
R10451:10452 Imp <> ae var
prf 10528:10533 AExp silly2
R10561:10561 Imp <> P var
R10556:10556 Imp <> P var
prf 11277:11279 AExp foo
R11304:11306 Coq.Init.Logic <> :type_scope:x_'='_x not
R11293:11299 SfLib <> ble_nat def
R11303:11303 Imp <> n var
R11307:11310 Coq.Init.Datatypes <> true constr
prf 11557:11560 AExp foo'
R11585:11587 Coq.Init.Logic <> :type_scope:x_'='_x not
R11574:11580 SfLib <> ble_nat def
R11584:11584 Imp <> n var
R11588:11591 Coq.Init.Datatypes <> true constr
prf 11922:11942 AExp optimize_0plus_sound'
R11981:11983 Coq.Init.Logic <> :type_scope:x_'='_x not
R11957:11961 Imp AExp aeval def
R11964:11977 Imp AExp optimize_0plus def
R11979:11979 Imp <> a var
R11984:11988 Imp AExp aeval def
R11990:11990 Imp <> a var
prf 14770:14791 AExp optimize_0plus_sound''
R14830:14832 Coq.Init.Logic <> :type_scope:x_'='_x not
R14806:14810 Imp AExp aeval def
R14813:14826 Imp AExp optimize_0plus def
R14828:14828 Imp <> a var
R14833:14837 Imp AExp aeval def
R14839:14839 Imp <> a var
prf 19366:19388 AExp optimize_0plus_sound'''
R19427:19429 Coq.Init.Logic <> :type_scope:x_'='_x not
R19403:19407 Imp AExp aeval def
R19410:19423 Imp AExp optimize_0plus def
R19425:19425 Imp <> a var
R19430:19434 Imp AExp aeval def
R19436:19436 Imp <> a var
def 20672:20687 AExp optimize_0plus_b
R20694:20697 Imp AExp bexp ind
R20702:20705 Imp AExp bexp ind
R20718:20718 Imp <> b var
R20729:20732 Imp AExp BAnd constr
R20734:20739 Imp AExp BFalse constr
R20747:20752 Imp AExp BFalse constr
R20757:20759 Imp AExp BEq constr
R20774:20776 Imp AExp BEq constr
R20798:20811 Imp AExp optimize_0plus def
R20779:20792 Imp AExp optimize_0plus def
R20820:20822 Imp AExp BLe constr
R20837:20839 Imp AExp BLe constr
R20862:20875 Imp AExp optimize_0plus def
R20842:20855 Imp AExp optimize_0plus def
R20884:20887 Imp AExp BNot constr
R20893:20896 Imp AExp BNot constr
R20899:20914 Imp <> optimize_0plus_b def
R20923:20926 Imp AExp BAnd constr
R20941:20944 Imp AExp BAnd constr
R20968:20983 Imp <> optimize_0plus_b def
R20947:20962 Imp <> optimize_0plus_b def
R20993:20998 Imp AExp BFalse constr
R21001:21006 Imp AExp BFalse constr
prf 21060:21081 AExp optimize_0plus_b_sound
R21123:21125 Coq.Init.Logic <> :type_scope:x_'='_x not
R21097:21101 Imp AExp beval def
R21104:21119 Imp AExp optimize_0plus_b def
R21121:21121 Imp <> b var
R21126:21130 Imp AExp beval def
R21132:21132 Imp <> b var
R21262:21281 Imp AExp optimize_0plus_sound thm
R21262:21281 Imp AExp optimize_0plus_sound thm
R21300:21319 Imp AExp optimize_0plus_sound thm
R21300:21319 Imp AExp optimize_0plus_sound thm
R21371:21390 Imp AExp optimize_0plus_sound thm
R21371:21390 Imp AExp optimize_0plus_sound thm
R21409:21428 Imp AExp optimize_0plus_sound thm
R21409:21428 Imp AExp optimize_0plus_sound thm
R21672:21691 Imp AExp optimize_0plus_sound thm
R21672:21691 Imp AExp optimize_0plus_sound thm
R21729:21748 Imp AExp optimize_0plus_sound thm
R21729:21748 Imp AExp optimize_0plus_sound thm
R21847:21866 Imp AExp optimize_0plus_sound thm
R21847:21866 Imp AExp optimize_0plus_sound thm
R21904:21923 Imp AExp optimize_0plus_sound thm
R21904:21923 Imp AExp optimize_0plus_sound thm
prf 22213:22235 AExp optimize_0plus_b_sound'
R22277:22279 Coq.Init.Logic <> :type_scope:x_'='_x not
R22251:22255 Imp AExp beval def
R22258:22273 Imp AExp optimize_0plus_b def
R22275:22275 Imp <> b var
R22280:22284 Imp AExp beval def
R22286:22286 Imp <> b var
R22363:22382 Imp AExp optimize_0plus_sound thm
R22393:22412 Imp AExp optimize_0plus_sound thm
R22363:22382 Imp AExp optimize_0plus_sound thm
R22393:22412 Imp AExp optimize_0plus_sound thm
R22363:22382 Imp AExp optimize_0plus_sound thm
R22393:22412 Imp AExp optimize_0plus_sound thm
R22363:22382 Imp AExp optimize_0plus_sound thm
R22363:22382 Imp AExp optimize_0plus_sound thm
R22581:22600 Imp AExp optimize_0plus_sound thm
R22611:22630 Imp AExp optimize_0plus_sound thm
R22581:22600 Imp AExp optimize_0plus_sound thm
R22611:22630 Imp AExp optimize_0plus_sound thm
R22581:22600 Imp AExp optimize_0plus_sound thm
R22611:22630 Imp AExp optimize_0plus_sound thm
R22581:22600 Imp AExp optimize_0plus_sound thm
R22581:22600 Imp AExp optimize_0plus_sound thm
def 23045:23053 AExp optimizer
R23058:23061 Imp AExp aexp ind
R23066:23069 Imp AExp aexp ind
R23082:23082 Imp <> a var
R23093:23096 Imp AExp ANum constr
R23109:23112 Imp AExp ANum constr
R23120:23124 Imp AExp APlus constr
R23127:23130 Imp AExp ANum constr
R23147:23155 Imp <> optimizer def
R23164:23168 Imp AExp APlus constr
R23185:23189 Imp AExp APlus constr
R23207:23215 Imp <> optimizer def
R23192:23200 Imp <> optimizer def
R23225:23230 Imp AExp AMinus constr
R23233:23236 Imp AExp ANum constr
R23247:23250 Imp AExp ANum constr
R23258:23263 Imp AExp AMinus constr
R23280:23285 Imp AExp AMinus constr
R23303:23311 Imp <> optimizer def
R23288:23296 Imp <> optimizer def
R23321:23325 Imp AExp AMult constr
R23342:23346 Imp AExp AMult constr
R23364:23372 Imp <> optimizer def
R23349:23357 Imp <> optimizer def
prf 23393:23407 AExp optimizer_sound
R23441:23443 Coq.Init.Logic <> :type_scope:x_'='_x not
R23422:23426 Imp AExp aeval def
R23429:23437 Imp AExp optimizer def
R23439:23439 Imp <> a var
R23444:23448 Imp AExp aeval def
R23450:23450 Imp <> a var
def 25381:25404 AExp silly_presburger_example
R25464:25467 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R25463:25463 Imp <> m var
R25468:25468 Imp <> p var
R25440:25443 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25431:25434 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R25427:25429 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25426:25426 Imp <> m var
R25430:25430 Imp <> n var
R25436:25438 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25435:25435 Imp <> n var
R25439:25439 Imp <> o var
R25449:25451 Coq.Init.Logic <> :type_scope:x_'='_x not
R25445:25447 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25444:25444 Imp <> o var
R25453:25455 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R25452:25452 Imp <> p var
mod 27545:27560 <> AExp.aevalR_first_try
ind 27574:27579 AExp.aevalR_first_try aevalR
constr 27610:27615 AExp.aevalR_first_try E_ANum
constr 27665:27671 AExp.aevalR_first_try E_APlus
constr 27795:27802 AExp.aevalR_first_try E_AMinus
constr 27926:27932 AExp.aevalR_first_try E_AMult
R27591:27593 Coq.Init.Datatypes <> nat ind
R27583:27586 Imp AExp.aevalR_first_try aexp ind
R27631:27633 Coq.Init.Datatypes <> nat ind
R27643:27648 Imp <> aevalR ind
R27659:27659 Imp <> n var
R27651:27654 Imp AExp.aevalR_first_try ANum constr
R27656:27656 Imp <> n var
R27690:27693 Imp AExp.aevalR_first_try aexp ind
R27704:27706 Coq.Init.Datatypes <> nat ind
R27760:27765 Imp <> aevalR ind
R27784:27786 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R27782:27783 Imp <> n1 var
R27787:27788 Imp <> n2 var
R27768:27772 Imp AExp.aevalR_first_try APlus constr
R27777:27778 Imp <> e2 var
R27774:27775 Imp <> e1 var
R27738:27743 Imp <> aevalR ind
R27748:27749 Imp <> n2 var
R27745:27746 Imp <> e2 var
R27716:27721 Imp <> aevalR ind
R27726:27727 Imp <> n1 var
R27723:27724 Imp <> e1 var
R27820:27823 Imp AExp.aevalR_first_try aexp ind
R27834:27836 Coq.Init.Datatypes <> nat ind
R27890:27895 Imp <> aevalR ind
R27915:27917 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R27913:27914 Imp <> n1 var
R27918:27919 Imp <> n2 var
R27898:27903 Imp AExp.aevalR_first_try AMinus constr
R27908:27909 Imp <> e2 var
R27905:27906 Imp <> e1 var
R27868:27873 Imp <> aevalR ind
R27878:27879 Imp <> n2 var
R27875:27876 Imp <> e2 var
R27846:27851 Imp <> aevalR ind
R27856:27857 Imp <> n1 var
R27853:27854 Imp <> e1 var
R27951:27954 Imp AExp.aevalR_first_try aexp ind
R27965:27967 Coq.Init.Datatypes <> nat ind
R28021:28026 Imp <> aevalR ind
R28045:28047 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28043:28044 Imp <> n1 var
R28048:28049 Imp <> n2 var
R28029:28033 Imp AExp.aevalR_first_try AMult constr
R28038:28039 Imp <> e2 var
R28035:28036 Imp <> e1 var
R27999:28004 Imp <> aevalR ind
R28009:28010 Imp <> n2 var
R28006:28007 Imp <> e2 var
R27977:27982 Imp <> aevalR ind
R27987:27988 Imp <> n1 var
R27984:27985 Imp <> e1 var
R28608:28613 Imp AExp.aevalR_first_try aevalR ind
not 28593 AExp.aevalR_first_try :type_scope:x_'||'_x
R28639:28654 Imp aevalR_first_try <> mod
ind 29158:29163 AExp aevalR
constr 29194:29199 AExp E_ANum
constr 29243:29249 AExp E_APlus
constr 29354:29361 AExp E_AMinus
constr 29467:29473 AExp E_AMult
R29175:29177 Coq.Init.Datatypes <> nat ind
R29167:29170 Imp AExp aexp ind
R29599:29604 Imp <> aevalR ind
R29213:29215 Coq.Init.Datatypes <> nat ind
R29225:29225 Imp AExp :type_scope:x_'||'_x not
R29232:29236 Imp AExp :type_scope:x_'||'_x not
R29226:29229 Imp AExp ANum constr
R29231:29231 Imp <> n var
R29237:29237 Imp <> n var
R29268:29271 Imp AExp aexp ind
R29283:29285 Coq.Init.Datatypes <> nat ind
R29323:29323 Imp AExp :type_scope:x_'||'_x not
R29335:29340 Imp AExp :type_scope:x_'||'_x not
R29348:29348 Imp AExp :type_scope:x_'||'_x not
R29324:29328 Imp AExp APlus constr
R29333:29334 Imp <> e2 var
R29330:29331 Imp <> e1 var
R29343:29345 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29341:29342 Imp <> n1 var
R29346:29347 Imp <> n2 var
R29312:29315 Imp AExp :type_scope:x_'||'_x not
R29310:29311 Imp <> e2 var
R29316:29317 Imp <> n2 var
R29298:29301 Imp AExp :type_scope:x_'||'_x not
R29296:29297 Imp <> e1 var
R29302:29303 Imp <> n1 var
R29380:29383 Imp AExp aexp ind
R29395:29397 Coq.Init.Datatypes <> nat ind
R29435:29435 Imp AExp :type_scope:x_'||'_x not
R29448:29453 Imp AExp :type_scope:x_'||'_x not
R29461:29461 Imp AExp :type_scope:x_'||'_x not
R29436:29441 Imp AExp AMinus constr
R29446:29447 Imp <> e2 var
R29443:29444 Imp <> e1 var
R29456:29458 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R29454:29455 Imp <> n1 var
R29459:29460 Imp <> n2 var
R29424:29427 Imp AExp :type_scope:x_'||'_x not
R29422:29423 Imp <> e2 var
R29428:29429 Imp <> n2 var
R29410:29413 Imp AExp :type_scope:x_'||'_x not
R29408:29409 Imp <> e1 var
R29414:29415 Imp <> n1 var
R29493:29496 Imp AExp aexp ind
R29508:29510 Coq.Init.Datatypes <> nat ind
R29548:29548 Imp AExp :type_scope:x_'||'_x not
R29560:29565 Imp AExp :type_scope:x_'||'_x not
R29573:29573 Imp AExp :type_scope:x_'||'_x not
R29549:29553 Imp AExp AMult constr
R29558:29559 Imp <> e2 var
R29555:29556 Imp <> e1 var
R29568:29570 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29566:29567 Imp <> n1 var
R29571:29572 Imp <> n2 var
R29537:29540 Imp AExp :type_scope:x_'||'_x not
R29535:29536 Imp <> e2 var
R29541:29542 Imp <> n2 var
R29523:29526 Imp AExp :type_scope:x_'||'_x not
R29521:29522 Imp <> e1 var
R29527:29528 Imp <> n1 var
R29599:29604 Imp AExp aevalR ind
not 29584 AExp :type_scope:x_'||'_x
prf 32644:32659 AExp aeval_iff_aevalR
R32677:32677 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32684:32689 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R32679:32682 Imp AExp :type_scope:x_'||'_x not
R32678:32678 Imp <> a var
R32683:32683 Imp <> n var
R32697:32699 Coq.Init.Logic <> :type_scope:x_'='_x not
R32690:32694 Imp AExp aeval def
R32696:32696 Imp <> a var
R32700:32700 Imp <> n var
R33189:33194 Imp AExp E_ANum constr
R33189:33194 Imp AExp E_ANum constr
R33226:33232 Imp AExp E_APlus constr
R33226:33232 Imp AExp E_APlus constr
R33327:33334 Imp AExp E_AMinus constr
R33327:33334 Imp AExp E_AMinus constr
R33428:33434 Imp AExp E_AMult constr
R33428:33434 Imp AExp E_AMult constr
prf 33979:33995 AExp aeval_iff_aevalR'
R34013:34013 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R34020:34025 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R34015:34018 Imp AExp :type_scope:x_'||'_x not
R34014:34014 Imp <> a var
R34019:34019 Imp <> n var
R34033:34035 Coq.Init.Logic <> :type_scope:x_'='_x not
R34026:34030 Imp AExp aeval def
R34032:34032 Imp <> a var
R34036:34036 Imp <> n var
ind 34451:34456 AExp bevalR
constr 34486:34492 AExp E_BTrue
constr 34521:34528 AExp E_BFalse
constr 34558:34562 AExp E_BEq
constr 34644:34648 AExp E_BLe
constr 34730:34735 AExp E_BNot
constr 34806:34811 AExp E_BAnd
R34467:34470 Coq.Init.Datatypes <> bool ind
R34459:34462 Imp AExp bexp ind
R34937:34942 Imp <> bevalR ind
R34508:34512 Imp AExp :type_scope:x_'|||'_x not
R34503:34507 Imp AExp BTrue constr
R34513:34516 Coq.Init.Datatypes <> true constr
R34544:34548 Imp AExp :type_scope:x_'|||'_x not
R34538:34543 Imp AExp BFalse constr
R34549:34553 Coq.Init.Datatypes <> false constr
R34580:34583 Imp AExp aexp ind
R34593:34593 Imp AExp :type_scope:x_'|||'_x not
R34603:34609 Imp AExp :type_scope:x_'|||'_x not
R34639:34639 Imp AExp :type_scope:x_'|||'_x not
R34594:34596 Imp AExp BEq constr
R34601:34602 Imp <> a2 var
R34598:34599 Imp <> a1 var
R34610:34616 Coq.Arith.EqNat <> beq_nat def
R34630:34634 Imp AExp aeval def
R34636:34637 Imp <> a2 var
R34619:34623 Imp AExp aeval def
R34625:34626 Imp <> a1 var
R34666:34669 Imp AExp aexp ind
R34679:34679 Imp AExp :type_scope:x_'|||'_x not
R34689:34695 Imp AExp :type_scope:x_'|||'_x not
R34725:34725 Imp AExp :type_scope:x_'|||'_x not
R34680:34682 Imp AExp BLe constr
R34687:34688 Imp <> a2 var
R34684:34685 Imp <> a1 var
R34696:34702 SfLib <> ble_nat def
R34716:34720 Imp AExp aeval def
R34722:34723 Imp <> a2 var
R34705:34709 Imp AExp aeval def
R34711:34712 Imp <> a1 var
R34749:34752 Imp AExp bexp ind
R34758:34761 Coq.Init.Datatypes <> bool ind
R34782:34782 Imp AExp :type_scope:x_'|||'_x not
R34789:34794 Imp AExp :type_scope:x_'|||'_x not
R34801:34801 Imp AExp :type_scope:x_'|||'_x not
R34783:34786 Imp AExp BNot constr
R34788:34788 Imp <> e var
R34795:34798 Coq.Init.Datatypes <> negb def
R34800:34800 Imp <> b var
R34773:34777 Imp AExp :type_scope:x_'|||'_x not
R34772:34772 Imp <> e var
R34778:34778 Imp <> b var
R34830:34833 Imp AExp bexp ind
R34844:34847 Coq.Init.Datatypes <> bool ind
R34883:34883 Imp AExp :type_scope:x_'|||'_x not
R34894:34900 Imp AExp :type_scope:x_'|||'_x not
R34911:34911 Imp AExp :type_scope:x_'|||'_x not
R34884:34887 Imp AExp BAnd constr
R34892:34893 Imp <> e2 var
R34889:34890 Imp <> e1 var
R34901:34904 Coq.Init.Datatypes <> andb def
R34909:34910 Imp <> b2 var
R34906:34907 Imp <> b1 var
R34873:34877 Imp AExp :type_scope:x_'|||'_x not
R34871:34872 Imp <> e2 var
R34878:34879 Imp <> b2 var
R34860:34864 Imp AExp :type_scope:x_'|||'_x not
R34858:34859 Imp <> e1 var
R34865:34866 Imp <> b1 var
R34937:34942 Imp AExp bevalR ind
not 34921 AExp :type_scope:x_'|||'_x
prf 34970:34985 AExp beval_iff_bevalR
R34999:35002 Imp AExp bexp ind
R35008:35011 Coq.Init.Datatypes <> bool ind
R35017:35017 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R35025:35030 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R35019:35023 Imp AExp :type_scope:x_'|||'_x not
R35018:35018 Imp <> e var
R35024:35024 Imp <> b var
R35038:35040 Coq.Init.Logic <> :type_scope:x_'='_x not
R35031:35035 Imp AExp beval def
R35037:35037 Imp <> e var
R35041:35041 Imp <> b var
R35480:35486 Imp AExp E_BTrue constr
R35480:35486 Imp AExp E_BTrue constr
R35542:35549 Imp AExp E_BFalse constr
R35542:35549 Imp AExp E_BFalse constr
R35602:35606 Imp AExp E_BEq constr
R35602:35606 Imp AExp E_BEq constr
R35659:35663 Imp AExp E_BLe constr
R35659:35663 Imp AExp E_BLe constr
R35717:35722 Imp AExp E_BNot constr
R35717:35722 Imp AExp E_BNot constr
R35820:35825 Imp AExp E_BAnd constr
R35820:35825 Imp AExp E_BAnd constr
R35960:35963 Imp <> <> mod
mod 36787:36801 <> aevalR_division
ind 36940:36943 aevalR_division aexp
constr 36959:36962 aevalR_division ANum
constr 36982:36986 aevalR_division APlus
constr 37015:37020 aevalR_division AMinus
constr 37049:37053 aevalR_division AMult
constr 37082:37085 aevalR_division ADiv
R36973:36976 Imp <> aexp ind
R36966:36968 Coq.Init.Datatypes <> nat ind
R37006:37009 Imp <> aexp ind
R36998:37001 Imp <> aexp ind
R36990:36993 Imp <> aexp ind
R37040:37043 Imp <> aexp ind
R37032:37035 Imp <> aexp ind
R37024:37027 Imp <> aexp ind
R37073:37076 Imp <> aexp ind
R37065:37068 Imp <> aexp ind
R37057:37060 Imp <> aexp ind
R37105:37108 Imp <> aexp ind
R37097:37100 Imp <> aexp ind
R37089:37092 Imp <> aexp ind
ind 37365:37370 aevalR_division aevalR
constr 37401:37406 aevalR_division E_ANum
constr 37450:37456 aevalR_division E_APlus
constr 37561:37568 aevalR_division E_AMinus
constr 37674:37680 aevalR_division E_AMult
constr 37786:37791 aevalR_division E_ADiv
R37382:37384 Coq.Init.Datatypes <> nat ind
R37374:37377 Imp aevalR_division aexp ind
R37930:37935 Imp <> aevalR ind
R37420:37422 Coq.Init.Datatypes <> nat ind
R37432:37432 Imp aevalR_division :type_scope:x_'||'_x not
R37439:37443 Imp aevalR_division :type_scope:x_'||'_x not
R37433:37436 Imp aevalR_division ANum constr
R37438:37438 Imp <> n var
R37444:37444 Imp <> n var
R37475:37478 Imp aevalR_division aexp ind
R37490:37492 Coq.Init.Datatypes <> nat ind
R37530:37530 Imp aevalR_division :type_scope:x_'||'_x not
R37542:37547 Imp aevalR_division :type_scope:x_'||'_x not
R37555:37555 Imp aevalR_division :type_scope:x_'||'_x not
R37531:37535 Imp aevalR_division APlus constr
R37540:37541 Imp <> a2 var
R37537:37538 Imp <> a1 var
R37550:37552 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R37548:37549 Imp <> n1 var
R37553:37554 Imp <> n2 var
R37519:37522 Imp aevalR_division :type_scope:x_'||'_x not
R37517:37518 Imp <> a2 var
R37523:37524 Imp <> n2 var
R37505:37508 Imp aevalR_division :type_scope:x_'||'_x not
R37503:37504 Imp <> a1 var
R37509:37510 Imp <> n1 var
R37587:37590 Imp aevalR_division aexp ind
R37602:37604 Coq.Init.Datatypes <> nat ind
R37642:37642 Imp aevalR_division :type_scope:x_'||'_x not
R37655:37660 Imp aevalR_division :type_scope:x_'||'_x not
R37668:37668 Imp aevalR_division :type_scope:x_'||'_x not
R37643:37648 Imp aevalR_division AMinus constr
R37653:37654 Imp <> a2 var
R37650:37651 Imp <> a1 var
R37663:37665 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R37661:37662 Imp <> n1 var
R37666:37667 Imp <> n2 var
R37631:37634 Imp aevalR_division :type_scope:x_'||'_x not
R37629:37630 Imp <> a2 var
R37635:37636 Imp <> n2 var
R37617:37620 Imp aevalR_division :type_scope:x_'||'_x not
R37615:37616 Imp <> a1 var
R37621:37622 Imp <> n1 var
R37700:37703 Imp aevalR_division aexp ind
R37715:37717 Coq.Init.Datatypes <> nat ind
R37755:37755 Imp aevalR_division :type_scope:x_'||'_x not
R37767:37772 Imp aevalR_division :type_scope:x_'||'_x not
R37780:37780 Imp aevalR_division :type_scope:x_'||'_x not
R37756:37760 Imp aevalR_division AMult constr
R37765:37766 Imp <> a2 var
R37762:37763 Imp <> a1 var
R37775:37777 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R37773:37774 Imp <> n1 var
R37778:37779 Imp <> n2 var
R37744:37747 Imp aevalR_division :type_scope:x_'||'_x not
R37742:37743 Imp <> a2 var
R37748:37749 Imp <> n2 var
R37730:37733 Imp aevalR_division :type_scope:x_'||'_x not
R37728:37729 Imp <> a1 var
R37734:37735 Imp <> n1 var
R37811:37814 Imp aevalR_division aexp ind
R37828:37830 Coq.Init.Datatypes <> nat ind
R37889:37889 Imp aevalR_division :type_scope:x_'||'_x not
R37900:37904 Imp aevalR_division :type_scope:x_'||'_x not
R37890:37893 Imp aevalR_division ADiv constr
R37898:37899 Imp <> a2 var
R37895:37896 Imp <> a1 var
R37905:37906 Imp <> n3 var
R37879:37881 Coq.Init.Logic <> :type_scope:x_'='_x not
R37869:37872 Coq.Init.Peano <> mult def
R37877:37878 Imp <> n3 var
R37874:37875 Imp <> n2 var
R37882:37883 Imp <> n1 var
R37857:37860 Imp aevalR_division :type_scope:x_'||'_x not
R37855:37856 Imp <> a2 var
R37861:37862 Imp <> n2 var
R37843:37846 Imp aevalR_division :type_scope:x_'||'_x not
R37841:37842 Imp <> a1 var
R37847:37848 Imp <> n1 var
R37930:37935 Imp aevalR_division aevalR ind
not 37915 aevalR_division :type_scope:x_'||'_x
R37961:37975 Imp <> <> mod
mod 37985:37999 <> aevalR_extended
ind 38013:38016 aevalR_extended aexp
constr 38032:38035 aevalR_extended AAny
constr 38082:38085 aevalR_extended ANum
constr 38105:38109 aevalR_extended APlus
constr 38138:38143 aevalR_extended AMinus
constr 38172:38176 aevalR_extended AMult
R38040:38043 Imp <> aexp ind
R38096:38099 Imp <> aexp ind
R38089:38091 Coq.Init.Datatypes <> nat ind
R38129:38132 Imp <> aexp ind
R38121:38124 Imp <> aexp ind
R38113:38116 Imp <> aexp ind
R38163:38166 Imp <> aexp ind
R38155:38158 Imp <> aexp ind
R38147:38150 Imp <> aexp ind
R38196:38199 Imp <> aexp ind
R38188:38191 Imp <> aexp ind
R38180:38183 Imp <> aexp ind
ind 38392:38397 aevalR_extended aevalR
constr 38428:38432 aevalR_extended E_Any
constr 38503:38508 aevalR_extended E_ANum
constr 38552:38558 aevalR_extended E_APlus
constr 38663:38670 aevalR_extended E_AMinus
constr 38776:38782 aevalR_extended E_AMult
R38409:38411 Coq.Init.Datatypes <> nat ind
R38401:38404 Imp aevalR_extended aexp ind
R38906:38911 Imp <> aevalR ind
R38446:38448 Coq.Init.Datatypes <> nat ind
R38462:38465 Imp aevalR_extended :type_scope:x_'||'_x not
R38458:38461 Imp aevalR_extended AAny constr
R38466:38466 Imp <> n var
R38522:38524 Coq.Init.Datatypes <> nat ind
R38534:38534 Imp aevalR_extended :type_scope:x_'||'_x not
R38541:38545 Imp aevalR_extended :type_scope:x_'||'_x not
R38535:38538 Imp aevalR_extended ANum constr
R38540:38540 Imp <> n var
R38546:38546 Imp <> n var
R38577:38580 Imp aevalR_extended aexp ind
R38592:38594 Coq.Init.Datatypes <> nat ind
R38632:38632 Imp aevalR_extended :type_scope:x_'||'_x not
R38644:38649 Imp aevalR_extended :type_scope:x_'||'_x not
R38657:38657 Imp aevalR_extended :type_scope:x_'||'_x not
R38633:38637 Imp aevalR_extended APlus constr
R38642:38643 Imp <> a2 var
R38639:38640 Imp <> a1 var
R38652:38654 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R38650:38651 Imp <> n1 var
R38655:38656 Imp <> n2 var
R38621:38624 Imp aevalR_extended :type_scope:x_'||'_x not
R38619:38620 Imp <> a2 var
R38625:38626 Imp <> n2 var
R38607:38610 Imp aevalR_extended :type_scope:x_'||'_x not
R38605:38606 Imp <> a1 var
R38611:38612 Imp <> n1 var
R38689:38692 Imp aevalR_extended aexp ind
R38704:38706 Coq.Init.Datatypes <> nat ind
R38744:38744 Imp aevalR_extended :type_scope:x_'||'_x not
R38757:38762 Imp aevalR_extended :type_scope:x_'||'_x not
R38770:38770 Imp aevalR_extended :type_scope:x_'||'_x not
R38745:38750 Imp aevalR_extended AMinus constr
R38755:38756 Imp <> a2 var
R38752:38753 Imp <> a1 var
R38765:38767 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R38763:38764 Imp <> n1 var
R38768:38769 Imp <> n2 var
R38733:38736 Imp aevalR_extended :type_scope:x_'||'_x not
R38731:38732 Imp <> a2 var
R38737:38738 Imp <> n2 var
R38719:38722 Imp aevalR_extended :type_scope:x_'||'_x not
R38717:38718 Imp <> a1 var
R38723:38724 Imp <> n1 var
R38802:38805 Imp aevalR_extended aexp ind
R38817:38819 Coq.Init.Datatypes <> nat ind
R38857:38857 Imp aevalR_extended :type_scope:x_'||'_x not
R38869:38874 Imp aevalR_extended :type_scope:x_'||'_x not
R38882:38882 Imp aevalR_extended :type_scope:x_'||'_x not
R38858:38862 Imp aevalR_extended AMult constr
R38867:38868 Imp <> a2 var
R38864:38865 Imp <> a1 var
R38877:38879 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R38875:38876 Imp <> n1 var
R38880:38881 Imp <> n2 var
R38846:38849 Imp aevalR_extended :type_scope:x_'||'_x not
R38844:38845 Imp <> a2 var
R38850:38851 Imp <> n2 var
R38832:38835 Imp aevalR_extended :type_scope:x_'||'_x not
R38830:38831 Imp <> a1 var
R38836:38837 Imp <> n1 var
R38906:38911 Imp aevalR_extended aevalR ind
not 38891 aevalR_extended :type_scope:x_'||'_x
R38937:38951 Imp <> <> mod
mod 39783:39784 <> Id
ind 39973:39974 Id id
constr 39988:39989 Id Id
R40000:40001 Imp <> id ind
R39993:39995 Coq.Init.Datatypes <> nat ind
prf 40013:40021 Id eq_id_dec
R40042:40043 Imp Id id ind
R40046:40046 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R40056:40060 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R40071:40071 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R40050:40052 Coq.Init.Logic <> :type_scope:x_'='_x not
R40047:40049 Imp <> id1 var
R40053:40055 Imp <> id2 var
R40064:40067 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40061:40063 Imp <> id1 var
R40068:40070 Imp <> id2 var
R40160:40169 Coq.Arith.Peano_dec <> eq_nat_dec thm
R40160:40169 Coq.Arith.Peano_dec <> eq_nat_dec thm
prf 40442:40446 Id eq_id
R40473:40473 Imp <> T var
R40492:40492 Coq.Init.Logic <> :type_scope:x_'='_x not
R40523:40526 Coq.Init.Logic <> :type_scope:x_'='_x not
R40496:40504 Imp Id eq_id_dec thm
R40508:40508 Imp <> x var
R40506:40506 Imp <> x var
R40522:40522 Imp <> q var
R40515:40515 Imp <> p var
R40527:40527 Imp <> p var
R40561:40569 Imp Id eq_id_dec thm
R40561:40569 Imp Id eq_id_dec thm
R40653:40670 SfLib <> ex_falso_quodlibet thm
R40653:40670 SfLib <> ex_falso_quodlibet thm
prf 40755:40760 Id neq_id
R40789:40789 Imp <> T var
R40819:40819 Coq.Init.Logic <> :type_scope:x_'='_x not
R40850:40853 Coq.Init.Logic <> :type_scope:x_'='_x not
R40823:40831 Imp Id eq_id_dec thm
R40835:40835 Imp <> y var
R40833:40833 Imp <> x var
R40849:40849 Imp <> q var
R40842:40842 Imp <> p var
R40854:40854 Imp <> q var
R40794:40797 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R40793:40793 Imp <> x var
R40798:40798 Imp <> y var
R40887:40895 Imp Id eq_id_dec thm
R40887:40895 Imp Id eq_id_dec thm
R40923:40940 SfLib <> ex_falso_quodlibet thm
R40923:40940 SfLib <> ex_falso_quodlibet thm
R41031:41032 Imp <> <> mod
def 41448:41452 <> state
R41463:41465 Coq.Init.Datatypes <> nat ind
R41457:41458 SfLib <> id ind
def 41480:41490 <> empty_state
R41494:41498 Imp <> state def
def 41529:41534 <> update
R41542:41546 Imp <> state def
R41554:41555 SfLib <> id ind
R41563:41565 Coq.Init.Datatypes <> nat ind
R41570:41574 Imp <> state def
R41594:41602 SfLib <> eq_id_dec thm
R41606:41607 Imp <> x' var
R41604:41604 Imp <> x var
R41621:41622 Imp <> st var
R41624:41625 Imp <> x' var
R41614:41614 Imp <> n var
prf 41769:41777 <> update_eq
R41815:41817 Coq.Init.Logic <> :type_scope:x_'='_x not
R41799:41804 Imp <> update def
R41811:41811 Imp <> n var
R41809:41809 Imp <> x var
R41806:41807 Imp <> st var
R41814:41814 Imp <> x var
R41818:41818 Imp <> n var
R41845:41850 Imp <> update def
R41859:41863 SfLib <> eq_id thm
R41859:41863 SfLib <> eq_id thm
prf 41953:41962 <> update_neq
R42044:42047 Coq.Init.Logic <> :type_scope:x_'='_x not
R42053:42053 Coq.Init.Logic <> :type_scope:x_'='_x not
R42026:42031 Imp <> update def
R42039:42039 Imp <> n var
R42036:42037 Imp <> x2 var
R42033:42034 Imp <> st var
R42042:42043 Imp <> x1 var
R42048:42049 Imp <> st var
R42051:42052 Imp <> x1 var
R41989:41992 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R41987:41988 Imp <> x2 var
R41993:41994 Imp <> x1 var
R42082:42087 Imp <> update def
R42096:42101 SfLib <> neq_id thm
R42096:42101 SfLib <> neq_id thm
prf 42316:42329 <> update_example
R42343:42345 Coq.Init.Datatypes <> nat ind
R42387:42389 Coq.Init.Logic <> :type_scope:x_'='_x not
R42352:42357 Imp <> update def
R42378:42378 Imp <> n var
R42372:42373 SfLib <> Id constr
R42359:42369 Imp <> empty_state def
R42382:42383 SfLib <> Id constr
R42417:42422 Imp <> update def
prf 42535:42547 <> update_shadow
R42576:42580 Imp <> state def
R42623:42625 Coq.Init.Logic <> :type_scope:x_'='_x not
R42588:42593 Imp <> update def
R42617:42618 Imp <> n2 var
R42614:42615 Imp <> x2 var
R42597:42602 Imp <> update def
R42610:42611 Imp <> n1 var
R42607:42608 Imp <> x2 var
R42604:42605 Imp <> st var
R42621:42622 Imp <> x1 var
R42627:42632 Imp <> update def
R42640:42641 Imp <> n2 var
R42637:42638 Imp <> x2 var
R42634:42635 Imp <> st var
R42644:42645 Imp <> x1 var
R42675:42680 Imp <> update def
R42693:42701 SfLib <> eq_id_dec thm
R42693:42701 SfLib <> eq_id_dec thm
prf 42859:42869 <> update_same
R42895:42899 Imp <> state def
R42941:42943 Coq.Init.Logic <> :type_scope:x_'='_x not
R42922:42927 Imp <> update def
R42935:42936 Imp <> n1 var
R42932:42933 Imp <> x1 var
R42929:42930 Imp <> st var
R42939:42940 Imp <> x2 var
R42944:42945 Imp <> st var
R42947:42948 Imp <> x2 var
R42910:42912 Coq.Init.Logic <> :type_scope:x_'='_x not
R42905:42906 Imp <> st var
R42908:42909 Imp <> x1 var
R42913:42914 Imp <> n1 var
R42977:42982 Imp <> update def
R42995:43003 SfLib <> eq_id_dec thm
R42995:43003 SfLib <> eq_id_dec thm
prf 43188:43201 <> update_permute
R43283:43285 Coq.Init.Logic <> :type_scope:x_'='_x not
R43249:43254 Imp <> update def
R43277:43278 Imp <> n2 var
R43274:43275 Imp <> x1 var
R43257:43262 Imp <> update def
R43270:43271 Imp <> n1 var
R43267:43268 Imp <> x2 var
R43264:43265 Imp <> st var
R43281:43282 Imp <> x3 var
R43287:43292 Imp <> update def
R43315:43316 Imp <> n1 var
R43312:43313 Imp <> x2 var
R43295:43300 Imp <> update def
R43308:43309 Imp <> n2 var
R43305:43306 Imp <> x1 var
R43302:43303 Imp <> st var
R43319:43320 Imp <> x3 var
R43235:43238 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R43233:43234 Imp <> x2 var
R43239:43240 Imp <> x1 var
R43350:43355 Imp <> update def
R43368:43376 SfLib <> eq_id_dec thm
R43368:43376 SfLib <> eq_id_dec thm
R43412:43420 SfLib <> eq_id_dec thm
R43412:43420 SfLib <> eq_id_dec thm
R43455:43472 SfLib <> ex_falso_quodlibet thm
R43455:43472 SfLib <> ex_falso_quodlibet thm
R43601:43609 SfLib <> eq_id_dec thm
R43601:43609 SfLib <> eq_id_dec thm
ind 43924:43927 <> aexp
constr 43943:43946 <> ANum
constr 43966:43968 <> AId
constr 44019:44023 <> APlus
constr 44052:44057 <> AMinus
constr 44086:44090 <> AMult
R43957:43960 Imp <> aexp ind
R43950:43952 Coq.Init.Datatypes <> nat ind
R43978:43981 Imp <> aexp ind
R43972:43973 SfLib <> id ind
R44043:44046 Imp <> aexp ind
R44035:44038 Imp <> aexp ind
R44027:44030 Imp <> aexp ind
R44077:44080 Imp <> aexp ind
R44069:44072 Imp <> aexp ind
R44061:44064 Imp <> aexp ind
R44110:44113 Imp <> aexp ind
R44102:44105 Imp <> aexp ind
R44094:44097 Imp <> aexp ind
def 44405:44405 <> X
R44409:44410 SfLib <> id ind
R44415:44416 SfLib <> Id constr
def 44432:44432 <> Y
R44436:44437 SfLib <> id ind
R44442:44443 SfLib <> Id constr
def 44459:44459 <> Z
R44463:44464 SfLib <> id ind
R44469:44470 SfLib <> Id constr
ind 44838:44841 <> bexp
constr 44857:44861 <> BTrue
constr 44874:44879 <> BFalse
constr 44892:44894 <> BEq
constr 44923:44925 <> BLe
constr 44954:44957 <> BNot
constr 44978:44981 <> BAnd
R44865:44868 Imp <> bexp ind
R44883:44886 Imp <> bexp ind
R44914:44917 Imp <> bexp ind
R44906:44909 Imp <> aexp ind
R44898:44901 Imp <> aexp ind
R44945:44948 Imp <> bexp ind
R44937:44940 Imp <> aexp ind
R44929:44932 Imp <> aexp ind
R44969:44972 Imp <> bexp ind
R44961:44964 Imp <> bexp ind
R45001:45004 Imp <> bexp ind
R44993:44996 Imp <> bexp ind
R44985:44988 Imp <> bexp ind
def 45392:45396 <> aeval
R45404:45408 Imp <> state def
R45416:45419 Imp <> aexp ind
R45424:45426 Coq.Init.Datatypes <> nat ind
R45439:45439 Imp <> a var
R45450:45453 Imp <> ANum constr
R45466:45468 Imp <> AId constr
R45475:45476 Imp <> st var
R45540:45544 Imp <> APlus constr
R45555:45555 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45567:45571 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45583:45583 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R45556:45560 Imp <> aeval def
R45562:45563 Imp <> st var
R45572:45576 Imp <> aeval def
R45578:45579 Imp <> st var
R45589:45594 Imp <> AMinus constr
R45606:45606 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45618:45622 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45634:45634 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R45607:45611 Imp <> aeval def
R45613:45614 Imp <> st var
R45623:45627 Imp <> aeval def
R45629:45630 Imp <> st var
R45640:45644 Imp <> AMult constr
R45655:45655 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45667:45671 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45683:45683 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R45656:45660 Imp <> aeval def
R45662:45663 Imp <> st var
R45672:45676 Imp <> aeval def
R45678:45679 Imp <> st var
def 45702:45706 <> beval
R45714:45718 Imp <> state def
R45726:45729 Imp <> bexp ind
R45734:45737 Coq.Init.Datatypes <> bool ind
R45750:45750 Imp <> b var
R45761:45765 Imp <> BTrue constr
R45776:45779 Coq.Init.Datatypes <> true constr
R45785:45790 Imp <> BFalse constr
R45800:45804 Coq.Init.Datatypes <> false constr
R45810:45812 Imp <> BEq constr
R45825:45831 Coq.Arith.EqNat <> beq_nat def
R45848:45852 Imp <> aeval def
R45854:45855 Imp <> st var
R45834:45838 Imp <> aeval def
R45840:45841 Imp <> st var
R45865:45867 Imp <> BLe constr
R45880:45886 SfLib <> ble_nat def
R45903:45907 Imp <> aeval def
R45909:45910 Imp <> st var
R45889:45893 Imp <> aeval def
R45895:45896 Imp <> st var
R45920:45923 Imp <> BNot constr
R45935:45938 Coq.Init.Datatypes <> negb def
R45941:45945 Imp <> beval def
R45947:45948 Imp <> st var
R45958:45961 Imp <> BAnd constr
R45973:45976 Coq.Init.Datatypes <> andb def
R45993:45997 Imp <> beval def
R45999:46000 Imp <> st var
R45979:45983 Imp <> beval def
R45985:45986 Imp <> st var
def 46022:46026 <> aexp1
R46112:46116 Coq.Init.Logic <> :type_scope:x_'='_x not
R46032:46036 Imp <> aeval def
R46072:46076 Imp <> APlus constr
R46088:46092 Imp <> AMult constr
R46103:46106 Imp <> ANum constr
R46095:46097 Imp <> AId constr
R46099:46099 Imp <> X def
R46079:46082 Imp <> ANum constr
R46039:46044 Imp <> update def
R46058:46058 Imp <> X def
R46046:46056 Imp <> empty_state def
def 46155:46159 <> bexp1
R46246:46250 Coq.Init.Logic <> :type_scope:x_'='_x not
R46165:46169 Imp <> beval def
R46205:46208 Imp <> BAnd constr
R46217:46220 Imp <> BNot constr
R46223:46225 Imp <> BLe constr
R46236:46239 Imp <> ANum constr
R46228:46230 Imp <> AId constr
R46232:46232 Imp <> X def
R46210:46214 Imp <> BTrue constr
R46172:46177 Imp <> update def
R46191:46191 Imp <> X def
R46179:46189 Imp <> empty_state def
R46251:46254 Coq.Init.Datatypes <> true constr
ind 47083:47085 <> com
constr 47101:47105 <> CSkip
constr 47117:47120 <> CAss
constr 47146:47149 <> CSeq
constr 47175:47177 <> CIf
constr 47211:47216 <> CWhile
R47109:47111 Imp <> com ind
R47138:47140 Imp <> com ind
R47130:47133 Imp <> aexp ind
R47124:47125 SfLib <> id ind
R47167:47169 Imp <> com ind
R47160:47162 Imp <> com ind
R47153:47155 Imp <> com ind
R47203:47205 Imp <> com ind
R47196:47198 Imp <> com ind
R47189:47191 Imp <> com ind
R47181:47184 Imp <> bexp ind
R47235:47237 Imp <> com ind
R47228:47230 Imp <> com ind
R47220:47223 Imp <> bexp ind
R47888:47892 Imp <> CSkip constr
not 47874 <> ::'SKIP'
R47922:47925 Imp <> CAss constr
not 47904 <> ::x_'::='_x
R47973:47976 Imp <> CSeq constr
not 47956 <> ::x_';;'_x
R48061:48066 Imp <> CWhile constr
not 48030 <> ::'WHILE'_x_'DO'_x_'END'
R48160:48162 Imp <> CIf constr
not 48118 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 48324:48334 <> fact_in_coq
R48338:48340 Imp <> com ind
R48358:48362 Imp <> ::x_';;'_x not
R48348:48352 Imp <> ::x_'::='_x not
R48347:48347 Imp <> Z def
R48353:48355 Imp <> AId constr
R48357:48357 Imp <> X def
R48375:48379 Imp <> ::x_';;'_x not
R48364:48368 Imp <> ::x_'::='_x not
R48363:48363 Imp <> Y def
R48369:48372 Imp <> ANum constr
R48380:48385 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48413:48420 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48484:48489 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48386:48389 Imp <> BNot constr
R48392:48394 Imp <> BEq constr
R48405:48408 Imp <> ANum constr
R48397:48399 Imp <> AId constr
R48401:48401 Imp <> Z def
R48448:48454 Imp <> ::x_';;'_x not
R48422:48426 Imp <> ::x_'::='_x not
R48421:48421 Imp <> Y def
R48427:48431 Imp <> AMult constr
R48442:48444 Imp <> AId constr
R48446:48446 Imp <> Z def
R48434:48436 Imp <> AId constr
R48438:48438 Imp <> Y def
R48456:48460 Imp <> ::x_'::='_x not
R48455:48455 Imp <> Z def
R48461:48466 Imp <> AMinus constr
R48477:48480 Imp <> ANum constr
R48469:48471 Imp <> AId constr
R48473:48473 Imp <> Z def
def 48606:48610 <> plus2
R48614:48616 Imp <> com ind
R48624:48629 Imp <> ::x_'::='_x not
R48652:48652 Imp <> ::x_'::='_x not
R48623:48623 Imp <> X def
R48630:48634 Imp <> APlus constr
R48645:48648 Imp <> ANum constr
R48637:48639 Imp <> AId constr
R48641:48641 Imp <> X def
def 48667:48676 <> XtimesYinZ
R48680:48682 Imp <> com ind
R48690:48695 Imp <> ::x_'::='_x not
R48717:48717 Imp <> ::x_'::='_x not
R48689:48689 Imp <> Z def
R48696:48700 Imp <> AMult constr
R48711:48713 Imp <> AId constr
R48715:48715 Imp <> Y def
R48703:48705 Imp <> AId constr
R48707:48707 Imp <> X def
def 48732:48751 <> subtract_slowly_body
R48755:48757 Imp <> com ind
R48793:48798 Imp <> ::x_';;'_x not
R48765:48769 Imp <> ::x_'::='_x not
R48764:48764 Imp <> Z def
R48770:48775 Imp <> AMinus constr
R48786:48789 Imp <> ANum constr
R48778:48780 Imp <> AId constr
R48782:48782 Imp <> Z def
R48800:48804 Imp <> ::x_'::='_x not
R48799:48799 Imp <> X def
R48805:48810 Imp <> AMinus constr
R48821:48824 Imp <> ANum constr
R48813:48815 Imp <> AId constr
R48817:48817 Imp <> X def
def 48857:48871 <> subtract_slowly
R48875:48877 Imp <> com ind
R48884:48889 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48917:48924 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48945:48950 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48890:48893 Imp <> BNot constr
R48896:48898 Imp <> BEq constr
R48909:48912 Imp <> ANum constr
R48901:48903 Imp <> AId constr
R48905:48905 Imp <> X def
R48925:48944 Imp <> subtract_slowly_body def
def 48965:48988 <> subtract_3_from_5_slowly
R48992:48994 Imp <> com ind
R49013:49018 Imp <> ::x_';;'_x not
R49002:49006 Imp <> ::x_'::='_x not
R49001:49001 Imp <> X def
R49007:49010 Imp <> ANum constr
R49031:49036 Imp <> ::x_';;'_x not
R49020:49024 Imp <> ::x_'::='_x not
R49019:49019 Imp <> Z def
R49025:49028 Imp <> ANum constr
R49037:49051 Imp <> subtract_slowly def
def 49092:49095 <> loop
R49099:49101 Imp <> com ind
R49108:49113 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49119:49126 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49131:49136 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R49114:49118 Imp <> BTrue constr
R49127:49130 Imp <> ::'SKIP' not
def 49628:49645 <> ceval_fun_no_while
R49653:49657 Imp <> state def
R49665:49667 Imp <> com ind
R49672:49676 Imp <> state def
R49689:49689 Imp <> c var
R49702:49705 Imp <> ::'SKIP' not
R49718:49719 Imp <> st var
R49728:49732 Imp <> ::x_'::='_x not
R49747:49752 Imp <> update def
R49760:49764 Imp <> aeval def
R49766:49767 Imp <> st var
R49754:49755 Imp <> st var
R49781:49784 Imp <> ::x_';;'_x not
R49810:49827 Imp <> ceval_fun_no_while def
R49829:49830 Imp <> st var
R49846:49863 Imp <> ceval_fun_no_while def
R49865:49867 Imp <> st' var
R49878:49881 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49883:49888 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49891:49896 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49899:49901 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R49918:49922 Imp <> beval def
R49924:49925 Imp <> st var
R49985:50002 Imp <> ceval_fun_no_while def
R50004:50005 Imp <> st var
R49945:49962 Imp <> ceval_fun_no_while def
R49964:49965 Imp <> st var
R50016:50021 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50023:50026 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50028:50031 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R50044:50045 Imp <> st var
ind 53999:54003 <> ceval
constr 54044:54049 <> E_Skip
constr 54090:54094 <> E_Ass
constr 54187:54191 <> E_Seq
constr 54306:54313 <> E_IfTrue
constr 54440:54448 <> E_IfFalse
constr 54576:54585 <> E_WhileEnd
constr 54672:54682 <> E_WhileLoop
R54023:54027 Imp <> state def
R54014:54018 Imp <> state def
R54007:54009 Imp <> com ind
R54874:54878 Imp <> ceval ind
R54074:54076 Imp <> ::x_'/'_x_'||'_x not
R54079:54082 Imp <> ::x_'/'_x_'||'_x not
R54070:54073 Imp <> ::'SKIP' not
R54077:54078 Imp <> st var
R54083:54084 Imp <> st var
R54148:54148 Imp <> ::x_'/'_x_'||'_x not
R54157:54160 Imp <> ::x_'/'_x_'||'_x not
R54163:54167 Imp <> ::x_'/'_x_'||'_x not
R54181:54181 Imp <> ::x_'/'_x_'||'_x not
R54150:54154 Imp <> ::x_'::='_x not
R54149:54149 Imp <> x var
R54155:54156 Imp <> a1 var
R54161:54162 Imp <> st var
R54168:54173 Imp <> update def
R54180:54180 Imp <> n var
R54178:54178 Imp <> x var
R54175:54176 Imp <> st var
R54134:54136 Coq.Init.Logic <> :type_scope:x_'='_x not
R54123:54127 Imp <> aeval def
R54132:54133 Imp <> a1 var
R54129:54130 Imp <> st var
R54137:54137 Imp <> n var
R54278:54278 Imp <> ::x_'/'_x_'||'_x not
R54287:54290 Imp <> ::x_'/'_x_'||'_x not
R54293:54296 Imp <> ::x_'/'_x_'||'_x not
R54281:54284 Imp <> ::x_';;'_x not
R54279:54280 Imp <> c1 var
R54285:54286 Imp <> c2 var
R54291:54292 Imp <> st var
R54297:54300 Imp <> st'' var
R54254:54256 Imp <> ::x_'/'_x_'||'_x not
R54260:54263 Imp <> ::x_'/'_x_'||'_x not
R54252:54253 Imp <> c2 var
R54257:54259 Imp <> st' var
R54264:54267 Imp <> st'' var
R54229:54231 Imp <> ::x_'/'_x_'||'_x not
R54234:54238 Imp <> ::x_'/'_x_'||'_x not
R54227:54228 Imp <> c1 var
R54232:54233 Imp <> st var
R54239:54241 Imp <> st' var
R54397:54397 Imp <> ::x_'/'_x_'||'_x not
R54422:54425 Imp <> ::x_'/'_x_'||'_x not
R54428:54431 Imp <> ::x_'/'_x_'||'_x not
R54398:54401 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54403:54408 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54411:54416 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54419:54421 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54402:54402 Imp <> b var
R54409:54410 Imp <> c1 var
R54417:54418 Imp <> c2 var
R54426:54427 Imp <> st var
R54432:54434 Imp <> st' var
R54375:54377 Imp <> ::x_'/'_x_'||'_x not
R54380:54383 Imp <> ::x_'/'_x_'||'_x not
R54373:54374 Imp <> c1 var
R54378:54379 Imp <> st var
R54384:54386 Imp <> st' var
R54356:54358 Coq.Init.Logic <> :type_scope:x_'='_x not
R54346:54350 Imp <> beval def
R54355:54355 Imp <> b var
R54352:54353 Imp <> st var
R54359:54362 Coq.Init.Datatypes <> true constr
R54533:54533 Imp <> ::x_'/'_x_'||'_x not
R54558:54561 Imp <> ::x_'/'_x_'||'_x not
R54564:54567 Imp <> ::x_'/'_x_'||'_x not
R54534:54537 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54539:54544 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54547:54552 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54555:54557 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R54538:54538 Imp <> b var
R54545:54546 Imp <> c1 var
R54553:54554 Imp <> c2 var
R54562:54563 Imp <> st var
R54568:54570 Imp <> st' var
R54511:54513 Imp <> ::x_'/'_x_'||'_x not
R54516:54519 Imp <> ::x_'/'_x_'||'_x not
R54509:54510 Imp <> c2 var
R54514:54515 Imp <> st var
R54520:54522 Imp <> st' var
R54491:54493 Coq.Init.Logic <> :type_scope:x_'='_x not
R54481:54485 Imp <> beval def
R54490:54490 Imp <> b var
R54487:54488 Imp <> st var
R54494:54498 Coq.Init.Datatypes <> false constr
R54638:54638 Imp <> ::x_'/'_x_'||'_x not
R54655:54658 Imp <> ::x_'/'_x_'||'_x not
R54661:54664 Imp <> ::x_'/'_x_'||'_x not
R54639:54644 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54646:54649 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54651:54654 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54645:54645 Imp <> b var
R54650:54650 Imp <> c var
R54659:54660 Imp <> st var
R54665:54666 Imp <> st var
R54620:54622 Coq.Init.Logic <> :type_scope:x_'='_x not
R54610:54614 Imp <> beval def
R54619:54619 Imp <> b var
R54616:54617 Imp <> st var
R54623:54627 Coq.Init.Datatypes <> false constr
R54808:54808 Imp <> ::x_'/'_x_'||'_x not
R54825:54828 Imp <> ::x_'/'_x_'||'_x not
R54831:54834 Imp <> ::x_'/'_x_'||'_x not
R54809:54814 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54816:54819 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54821:54824 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54815:54815 Imp <> b var
R54820:54820 Imp <> c var
R54829:54830 Imp <> st var
R54835:54838 Imp <> st'' var
R54766:54766 Imp <> ::x_'/'_x_'||'_x not
R54783:54786 Imp <> ::x_'/'_x_'||'_x not
R54790:54793 Imp <> ::x_'/'_x_'||'_x not
R54767:54772 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54774:54777 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54779:54782 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R54773:54773 Imp <> b var
R54778:54778 Imp <> c var
R54787:54789 Imp <> st' var
R54794:54797 Imp <> st'' var
R54744:54746 Imp <> ::x_'/'_x_'||'_x not
R54749:54752 Imp <> ::x_'/'_x_'||'_x not
R54743:54743 Imp <> c var
R54747:54748 Imp <> st var
R54753:54755 Imp <> st' var
R54726:54728 Coq.Init.Logic <> :type_scope:x_'='_x not
R54716:54720 Imp <> beval def
R54725:54725 Imp <> b var
R54722:54723 Imp <> st var
R54729:54732 Coq.Init.Datatypes <> true constr
R54874:54878 Imp <> ceval ind
not 54849 <> ::x_'/'_x_'||'_x
def 55389:55402 <> ceval_example1
R55409:55409 Imp <> ::x_'/'_x_'||'_x not
R55512:55518 Imp <> ::x_'/'_x_'||'_x not
R55530:55537 Imp <> ::x_'/'_x_'||'_x not
R55573:55573 Imp <> ::x_'/'_x_'||'_x not
R55422:55429 Imp <> ::x_';;'_x not
R55411:55415 Imp <> ::x_'::='_x not
R55410:55410 Imp <> X def
R55416:55419 Imp <> ANum constr
R55430:55433 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55454:55466 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55479:55491 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55504:55511 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R55434:55436 Imp <> BLe constr
R55447:55450 Imp <> ANum constr
R55439:55441 Imp <> AId constr
R55443:55443 Imp <> X def
R55468:55472 Imp <> ::x_'::='_x not
R55467:55467 Imp <> Y def
R55473:55476 Imp <> ANum constr
R55493:55497 Imp <> ::x_'::='_x not
R55492:55492 Imp <> Z def
R55498:55501 Imp <> ANum constr
R55519:55529 Imp <> empty_state def
R55538:55543 Imp <> update def
R55570:55570 Imp <> Z def
R55546:55551 Imp <> update def
R55565:55565 Imp <> X def
R55553:55563 Imp <> empty_state def
R55649:55654 Imp <> update def
R55668:55668 Imp <> X def
R55656:55666 Imp <> empty_state def
R55637:55641 Imp <> E_Seq constr
R55649:55654 Imp <> update def
R55668:55668 Imp <> X def
R55656:55666 Imp <> empty_state def
R55637:55641 Imp <> E_Seq constr
R55713:55717 Imp <> E_Ass constr
R55713:55717 Imp <> E_Ass constr
R55764:55772 Imp <> E_IfFalse constr
R55764:55772 Imp <> E_IfFalse constr
R55806:55810 Imp <> E_Ass constr
R55806:55810 Imp <> E_Ass constr
def 55888:55901 <> ceval_example2
R55908:55908 Imp <> ::x_'/'_x_'||'_x not
R55951:55954 Imp <> ::x_'/'_x_'||'_x not
R55966:55974 Imp <> ::x_'/'_x_'||'_x not
R56023:56023 Imp <> ::x_'/'_x_'||'_x not
R55921:55923 Imp <> ::x_';;'_x not
R55910:55914 Imp <> ::x_'::='_x not
R55909:55909 Imp <> X def
R55915:55918 Imp <> ANum constr
R55936:55938 Imp <> ::x_';;'_x not
R55925:55929 Imp <> ::x_'::='_x not
R55924:55924 Imp <> Y def
R55930:55933 Imp <> ANum constr
R55940:55944 Imp <> ::x_'::='_x not
R55939:55939 Imp <> Z def
R55945:55948 Imp <> ANum constr
R55955:55965 Imp <> empty_state def
R55975:55980 Imp <> update def
R56020:56020 Imp <> Z def
R55983:55988 Imp <> update def
R56015:56015 Imp <> Y def
R55991:55996 Imp <> update def
R56010:56010 Imp <> X def
R55998:56008 Imp <> empty_state def
R56053:56058 Imp <> update def
R56072:56072 Imp <> X def
R56060:56070 Imp <> empty_state def
R56041:56045 Imp <> E_Seq constr
R56053:56058 Imp <> update def
R56072:56072 Imp <> X def
R56060:56070 Imp <> empty_state def
R56041:56045 Imp <> E_Seq constr
R56105:56109 Imp <> E_Ass constr
R56105:56109 Imp <> E_Ass constr
R56156:56161 Imp <> update def
R56188:56188 Imp <> Y def
R56164:56169 Imp <> update def
R56183:56183 Imp <> X def
R56171:56181 Imp <> empty_state def
R56144:56148 Imp <> E_Seq constr
R56156:56161 Imp <> update def
R56188:56188 Imp <> Y def
R56164:56169 Imp <> update def
R56183:56183 Imp <> X def
R56171:56181 Imp <> empty_state def
R56144:56148 Imp <> E_Seq constr
R56224:56228 Imp <> E_Ass constr
R56224:56228 Imp <> E_Ass constr
R56274:56278 Imp <> E_Ass constr
R56274:56278 Imp <> E_Ass constr
def 56631:56638 <> pup_to_n
R56642:56644 Imp <> com ind
R56662:56667 Imp <> ::x_';;'_x not
R56653:56655 Imp <> ::x_'::='_x not
R56652:56652 Imp <> Y def
R56656:56659 Imp <> ANum constr
R56668:56673 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56700:56708 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56769:56775 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R56674:56677 Imp <> BNot constr
R56679:56681 Imp <> BLe constr
R56692:56695 Imp <> ANum constr
R56684:56686 Imp <> AId constr
R56688:56688 Imp <> X def
R56734:56741 Imp <> ::x_';;'_x not
R56710:56712 Imp <> ::x_'::='_x not
R56709:56709 Imp <> Y def
R56713:56717 Imp <> APlus constr
R56728:56730 Imp <> AId constr
R56732:56732 Imp <> X def
R56720:56722 Imp <> AId constr
R56724:56724 Imp <> Y def
R56743:56745 Imp <> ::x_'::='_x not
R56742:56742 Imp <> X def
R56746:56751 Imp <> AMinus constr
R56762:56765 Imp <> ANum constr
R56754:56756 Imp <> AId constr
R56758:56758 Imp <> X def
prf 56809:56822 <> pup_to_2_ceval
R56836:56839 Imp <> ::x_'/'_x_'||'_x not
R56862:56870 Imp <> ::x_'/'_x_'||'_x not
R56828:56835 Imp <> pup_to_n def
R56840:56845 Imp <> update def
R56859:56859 Imp <> X def
R56847:56857 Imp <> empty_state def
R56871:56876 Imp <> update def
R56961:56961 Imp <> X def
R56879:56884 Imp <> update def
R56956:56956 Imp <> Y def
R56887:56892 Imp <> update def
R56951:56951 Imp <> X def
R56895:56900 Imp <> update def
R56946:56946 Imp <> Y def
R56903:56908 Imp <> update def
R56941:56941 Imp <> Y def
R56911:56916 Imp <> update def
R56936:56936 Imp <> X def
R56918:56928 Imp <> empty_state def
R56993:56998 Imp <> update def
R57025:57025 Imp <> Y def
R57001:57006 Imp <> update def
R57020:57020 Imp <> X def
R57008:57018 Imp <> empty_state def
R56981:56985 Imp <> E_Seq constr
R56993:56998 Imp <> update def
R57025:57025 Imp <> Y def
R57001:57006 Imp <> update def
R57020:57020 Imp <> X def
R57008:57018 Imp <> empty_state def
R56981:56985 Imp <> E_Seq constr
R57058:57062 Imp <> E_Ass constr
R57058:57062 Imp <> E_Ass constr
R57122:57127 Imp <> update def
R57180:57180 Imp <> X def
R57130:57135 Imp <> update def
R57175:57175 Imp <> Y def
R57138:57143 Imp <> update def
R57170:57170 Imp <> Y def
R57146:57151 Imp <> update def
R57165:57165 Imp <> X def
R57153:57163 Imp <> empty_state def
R57104:57114 Imp <> E_WhileLoop constr
R57122:57127 Imp <> update def
R57180:57180 Imp <> X def
R57130:57135 Imp <> update def
R57175:57175 Imp <> Y def
R57138:57143 Imp <> update def
R57170:57170 Imp <> Y def
R57146:57151 Imp <> update def
R57165:57165 Imp <> X def
R57153:57163 Imp <> empty_state def
R57104:57114 Imp <> E_WhileLoop constr
R57285:57290 Imp <> update def
R57330:57330 Imp <> Y def
R57293:57298 Imp <> update def
R57325:57325 Imp <> Y def
R57301:57306 Imp <> update def
R57320:57320 Imp <> X def
R57308:57318 Imp <> empty_state def
R57273:57277 Imp <> E_Seq constr
R57285:57290 Imp <> update def
R57330:57330 Imp <> Y def
R57293:57298 Imp <> update def
R57325:57325 Imp <> Y def
R57301:57306 Imp <> update def
R57320:57320 Imp <> X def
R57308:57318 Imp <> empty_state def
R57273:57277 Imp <> E_Seq constr
R57359:57363 Imp <> E_Ass constr
R57359:57363 Imp <> E_Ass constr
R57392:57396 Imp <> E_Ass constr
R57392:57396 Imp <> E_Ass constr
R57446:57451 Imp <> update def
R57536:57536 Imp <> X def
R57454:57459 Imp <> update def
R57531:57531 Imp <> Y def
R57462:57467 Imp <> update def
R57526:57526 Imp <> X def
R57470:57475 Imp <> update def
R57521:57521 Imp <> Y def
R57478:57483 Imp <> update def
R57516:57516 Imp <> Y def
R57486:57491 Imp <> update def
R57511:57511 Imp <> X def
R57493:57503 Imp <> empty_state def
R57428:57438 Imp <> E_WhileLoop constr
R57446:57451 Imp <> update def
R57536:57536 Imp <> X def
R57454:57459 Imp <> update def
R57531:57531 Imp <> Y def
R57462:57467 Imp <> update def
R57526:57526 Imp <> X def
R57470:57475 Imp <> update def
R57521:57521 Imp <> Y def
R57478:57483 Imp <> update def
R57516:57516 Imp <> Y def
R57486:57491 Imp <> update def
R57511:57511 Imp <> X def
R57493:57503 Imp <> empty_state def
R57428:57438 Imp <> E_WhileLoop constr
R57641:57646 Imp <> update def
R57740:57740 Imp <> Y def
R57649:57654 Imp <> update def
R57735:57735 Imp <> X def
R57657:57662 Imp <> update def
R57730:57730 Imp <> Y def
R57665:57670 Imp <> update def
R57725:57725 Imp <> Y def
R57673:57678 Imp <> update def
R57692:57692 Imp <> X def
R57680:57690 Imp <> empty_state def
R57629:57633 Imp <> E_Seq constr
R57641:57646 Imp <> update def
R57740:57740 Imp <> Y def
R57649:57654 Imp <> update def
R57735:57735 Imp <> X def
R57657:57662 Imp <> update def
R57730:57730 Imp <> Y def
R57665:57670 Imp <> update def
R57725:57725 Imp <> Y def
R57673:57678 Imp <> update def
R57692:57692 Imp <> X def
R57680:57690 Imp <> empty_state def
R57629:57633 Imp <> E_Seq constr
R57769:57773 Imp <> E_Ass constr
R57769:57773 Imp <> E_Ass constr
R57802:57806 Imp <> E_Ass constr
R57802:57806 Imp <> E_Ass constr
R57830:57839 Imp <> E_WhileEnd constr
R57830:57839 Imp <> E_WhileEnd constr
prf 58665:58683 <> ceval_deterministic
R58760:58762 Coq.Init.Logic <> :type_scope:x_'='_x not
R58757:58759 Imp <> st1 var
R58763:58765 Imp <> st2 var
R58736:58738 Imp <> ::x_'/'_x_'||'_x not
R58741:58744 Imp <> ::x_'/'_x_'||'_x not
R58735:58735 Imp <> c var
R58739:58740 Imp <> st var
R58745:58747 Imp <> st2 var
R58713:58715 Imp <> ::x_'/'_x_'||'_x not
R58718:58721 Imp <> ::x_'/'_x_'||'_x not
R58712:58712 Imp <> c var
R58716:58717 Imp <> st var
R58722:58724 Imp <> st1 var
R59004:59006 Coq.Init.Logic <> :type_scope:x_'='_x not
R59004:59006 Coq.Init.Logic <> :type_scope:x_'='_x not
R59793:59795 Coq.Init.Logic <> :type_scope:x_'='_x not
R59793:59795 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 60274:60283 <> plus2_spec
R60348:60350 Coq.Init.Logic <> :type_scope:x_'='_x not
R60343:60345 Imp <> st' var
R60347:60347 Imp <> X def
R60352:60354 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R60351:60351 Imp <> n var
R60325:60327 Imp <> ::x_'/'_x_'||'_x not
R60330:60333 Imp <> ::x_'/'_x_'||'_x not
R60320:60324 Imp <> plus2 def
R60328:60329 Imp <> st var
R60334:60336 Imp <> st' var
R60310:60312 Coq.Init.Logic <> :type_scope:x_'='_x not
R60306:60307 Imp <> st var
R60309:60309 Imp <> X def
R60313:60313 Imp <> n var
R60663:60671 Imp <> update_eq thm
R60663:60671 Imp <> update_eq thm
prf 60793:60807 <> XtimesYinZ_spec
R60892:60894 Coq.Init.Logic <> :type_scope:x_'='_x not
R60887:60889 Imp <> st' var
R60891:60891 Imp <> Z def
R60896:60898 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R60895:60895 Imp <> n var
R60899:60899 Imp <> m var
R60869:60871 Imp <> ::x_'/'_x_'||'_x not
R60874:60877 Imp <> ::x_'/'_x_'||'_x not
R60859:60868 Imp <> XtimesYinZ def
R60872:60873 Imp <> st var
R60878:60880 Imp <> st' var
R60849:60851 Coq.Init.Logic <> :type_scope:x_'='_x not
R60845:60846 Imp <> st var
R60848:60848 Imp <> Y def
R60852:60852 Imp <> m var
R60836:60838 Coq.Init.Logic <> :type_scope:x_'='_x not
R60832:60833 Imp <> st var
R60835:60835 Imp <> X def
R60839:60839 Imp <> n var
R61014:61022 Imp <> update_eq thm
R61014:61022 Imp <> update_eq thm
prf 61121:61136 <> loop_never_stops
R61157:61158 Coq.Init.Logic <> :type_scope:'~'_x not
R61175:61175 Coq.Init.Logic <> :type_scope:'~'_x not
R61163:61165 Imp <> ::x_'/'_x_'||'_x not
R61168:61171 Imp <> ::x_'/'_x_'||'_x not
R61159:61162 Imp <> loop def
R61166:61167 Imp <> st var
R61172:61174 Imp <> st' var
R61216:61219 Imp <> loop def
R61244:61249 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61255:61258 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61263:61266 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61250:61254 Imp <> BTrue constr
R61259:61262 Imp <> ::'SKIP' not
R61244:61249 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61255:61258 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61263:61266 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R61250:61254 Imp <> BTrue constr
R61259:61262 Imp <> ::'SKIP' not
def 62308:62316 <> no_whiles
R62323:62325 Imp <> com ind
R62330:62333 Coq.Init.Datatypes <> bool ind
R62346:62346 Imp <> c var
R62357:62360 Imp <> ::'SKIP' not
R62371:62374 Coq.Init.Datatypes <> true constr
R62381:62385 Imp <> ::x_'::='_x not
R62394:62397 Coq.Init.Datatypes <> true constr
R62405:62408 Imp <> ::x_';;'_x not
R62416:62419 Coq.Init.Datatypes <> andb def
R62437:62445 Imp <> no_whiles def
R62422:62430 Imp <> no_whiles def
R62455:62458 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R62460:62465 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R62468:62473 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R62476:62478 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R62483:62486 Coq.Init.Datatypes <> andb def
R62504:62512 Imp <> no_whiles def
R62489:62497 Imp <> no_whiles def
R62522:62527 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R62529:62532 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R62534:62537 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R62543:62547 Coq.Init.Datatypes <> false constr
ind 62846:62855 <> no_whilesR
constr 62876:62881 <> R_SKIP
constr 62903:62907 <> R_ASS
constr 62947:62951 <> R_SQE
constr 63044:63047 <> R_IF
R62858:62860 Imp <> com ind
R62884:62893 Imp <> no_whilesR ind
R62895:62898 Imp <> ::'SKIP' not
R62924:62933 Imp <> no_whilesR ind
R62937:62939 Imp <> ::x_'::='_x not
R62936:62936 Imp <> x var
R62940:62941 Imp <> a1 var
R62971:62973 Imp <> com ind
R63021:63030 Imp <> no_whilesR ind
R63035:63036 Imp <> ::x_';;'_x not
R63033:63034 Imp <> c1 var
R63037:63038 Imp <> c2 var
R63004:63013 Imp <> no_whilesR ind
R63015:63016 Imp <> c2 var
R62977:62986 Imp <> no_whilesR ind
R62988:62989 Imp <> c1 var
R63068:63070 Imp <> com ind
R63120:63129 Imp <> no_whilesR ind
R63132:63135 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63137:63142 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63145:63150 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63153:63155 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R63136:63136 Imp <> b var
R63143:63144 Imp <> c1 var
R63151:63152 Imp <> c2 var
R63103:63112 Imp <> no_whilesR ind
R63114:63115 Imp <> c2 var
R63076:63085 Imp <> no_whilesR ind
R63087:63088 Imp <> c1 var
prf 63189:63201 <> no_whiles_eqv
R63235:63239 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R63228:63230 Coq.Init.Logic <> :type_scope:x_'='_x not
R63217:63225 Imp <> no_whiles def
R63227:63227 Imp <> c var
R63231:63234 Coq.Init.Datatypes <> true constr
R63240:63249 Imp <> no_whilesR ind
R63251:63251 Imp <> c var
R63328:63333 Imp <> R_SKIP constr
R63328:63333 Imp <> R_SKIP constr
R63359:63363 Imp <> R_ASS constr
R63359:63363 Imp <> R_ASS constr
R63402:63410 SfLib <> andb_true thm
R63402:63410 SfLib <> andb_true thm
R63470:63474 Imp <> R_SQE constr
R63470:63474 Imp <> R_SQE constr
R63560:63568 SfLib <> andb_true thm
R63560:63568 SfLib <> andb_true thm
R63627:63630 Imp <> R_IF constr
R63627:63630 Imp <> R_IF constr
prf 64388:64408 <> no_whiles_terminating
R64425:64427 Imp <> com ind
R64458:64462 Imp <> state def
R64466:64472 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R64476:64477 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R64479:64479 Imp <> ::x_'/'_x_'||'_x not
R64482:64483 Imp <> ::x_'/'_x_'||'_x not
R64478:64478 Imp <> c var
R64480:64481 Imp <> st var
R64484:64486 Imp <> st' var
R64431:64440 Imp <> no_whilesR ind
R64442:64442 Imp <> c var
R64561:64566 Imp <> E_Skip constr
R64561:64566 Imp <> E_Skip constr
R64599:64604 Imp <> update def
R64612:64616 Imp <> aeval def
R64599:64604 Imp <> update def
R64612:64616 Imp <> aeval def
R64632:64636 Imp <> E_Ass constr
R64632:64636 Imp <> E_Ass constr
R64848:64852 Imp <> E_Seq constr
R64848:64852 Imp <> E_Seq constr
R64934:64938 Imp <> beval def
R64934:64938 Imp <> beval def
R65076:65083 Imp <> E_IfTrue constr
R65076:65083 Imp <> E_IfTrue constr
R65301:65309 Imp <> E_IfFalse constr
R65301:65309 Imp <> E_IfFalse constr
ind 66817:66822 <> sinstr
constr 66836:66840 <> SPush
constr 66860:66864 <> SLoad
constr 66883:66887 <> SPlus
constr 66900:66905 <> SMinus
constr 66918:66922 <> SMult
R66851:66856 Imp <> sinstr ind
R66844:66846 Coq.Init.Datatypes <> nat ind
R66874:66879 Imp <> sinstr ind
R66868:66869 SfLib <> id ind
R66891:66896 Imp <> sinstr ind
R66909:66914 Imp <> sinstr ind
R66926:66931 Imp <> sinstr ind
def 67576:67584 <> s_execute
R67592:67596 Imp <> state def
R67608:67611 Coq.Init.Datatypes <> list ind
R67613:67615 Coq.Init.Datatypes <> nat ind
R67645:67648 Coq.Init.Datatypes <> list ind
R67650:67655 Imp <> sinstr ind
R67677:67680 Coq.Init.Datatypes <> list ind
R67682:67684 Coq.Init.Datatypes <> nat ind
R67697:67700 Imp <> prog var
R67710:67711 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67714:67718 Imp <> stack var
R67724:67725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67755:67759 Imp <> SPush constr
R67766:67774 Imp <> s_execute def
R67781:67782 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67783:67787 Imp <> stack var
R67776:67777 Imp <> st var
R67804:67808 Imp <> SLoad constr
R67815:67823 Imp <> s_execute def
R67829:67829 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67834:67836 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67830:67831 Imp <> st var
R67837:67841 Imp <> stack var
R67825:67826 Imp <> st var
R67858:67862 Imp <> SPlus constr
R67873:67877 Imp <> stack var
R67907:67908 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67911:67912 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67936:67936 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67938:67938 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R67941:67942 Coq.Lists.List ListNotations :list_scope:'['_']' not
R67968:67969 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67972:67973 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67979:67987 Imp <> s_execute def
R67993:67993 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67999:68001 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R67996:67996 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R67989:67990 Imp <> st var
R68044:68049 Imp <> SMinus constr
R68058:68062 Imp <> stack var
R68091:68092 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68095:68096 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68120:68120 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68122:68122 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68125:68126 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68152:68153 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68156:68157 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68162:68170 Imp <> s_execute def
R68176:68176 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68182:68184 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68179:68179 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R68172:68173 Imp <> st var
R68226:68230 Imp <> SMult constr
R68240:68244 Imp <> stack var
R68273:68274 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68277:68278 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68302:68302 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68304:68304 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68307:68308 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68334:68335 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68338:68339 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68344:68352 Imp <> s_execute def
R68358:68358 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68364:68366 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R68361:68361 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R68354:68355 Imp <> st var
def 68445:68454 <> s_execute1
R68530:68535 Coq.Init.Logic <> :type_scope:x_'='_x not
R68463:68471 Imp <> s_execute def
R68495:68495 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68503:68504 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68512:68513 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68521:68522 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68529:68529 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68523:68528 Imp <> SMinus constr
R68514:68518 Imp <> SPush constr
R68505:68509 Imp <> SPush constr
R68496:68500 Imp <> SPush constr
R68485:68486 Coq.Lists.List ListNotations :list_scope:'['_']' not
R68473:68483 Imp <> empty_state def
R68536:68536 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68538:68539 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68541:68541 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 68605:68614 <> s_execute2
R68703:68708 Coq.Init.Logic <> :type_scope:x_'='_x not
R68623:68631 Imp <> s_execute def
R68671:68671 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68679:68680 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68688:68689 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68695:68696 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68702:68702 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68697:68701 Imp <> SPlus constr
R68690:68694 Imp <> SMult constr
R68681:68685 Imp <> SLoad constr
R68687:68687 Imp <> X def
R68672:68676 Imp <> SPush constr
R68658:68658 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68660:68660 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68662:68662 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68634:68639 Imp <> update def
R68653:68653 Imp <> X def
R68641:68651 Imp <> empty_state def
R68709:68709 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68712:68713 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R68715:68715 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 68979:68987 <> s_compile
R68994:68997 Imp <> aexp ind
R69002:69005 Coq.Init.Datatypes <> list ind
R69007:69012 Imp <> sinstr ind
R69024:69024 Imp <> e var
R69033:69036 Imp <> ANum constr
R69043:69043 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69051:69051 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69044:69048 Imp <> SPush constr
R69055:69057 Imp <> AId constr
R69064:69064 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69072:69072 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69065:69069 Imp <> SLoad constr
R69077:69081 Imp <> APlus constr
R69091:69091 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69104:69108 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69092:69100 Imp <> s_compile def
R69109:69109 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69122:69124 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69110:69118 Imp <> s_compile def
R69125:69125 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69131:69131 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69126:69130 Imp <> SPlus constr
R69135:69140 Imp <> AMinus constr
R69151:69151 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69164:69168 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69152:69160 Imp <> s_compile def
R69169:69169 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69182:69184 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69170:69178 Imp <> s_compile def
R69185:69185 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69192:69192 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69186:69191 Imp <> SMinus constr
R69196:69200 Imp <> AMult constr
R69211:69211 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69224:69228 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69212:69220 Imp <> s_compile def
R69229:69229 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69242:69244 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R69230:69238 Imp <> s_compile def
R69245:69245 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69251:69251 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69246:69250 Imp <> SMult constr
def 69382:69391 <> s_compile1
R69450:69454 Coq.Init.Logic <> :type_scope:x_'='_x not
R69399:69407 Imp <> s_compile def
R69410:69415 Imp <> AMinus constr
R69426:69430 Imp <> AMult constr
R69442:69444 Imp <> AId constr
R69446:69446 Imp <> Y def
R69433:69436 Imp <> ANum constr
R69418:69420 Imp <> AId constr
R69422:69422 Imp <> X def
R69455:69455 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69463:69464 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69472:69473 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69481:69482 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69488:69489 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69496:69496 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R69490:69495 Imp <> SMinus constr
R69483:69487 Imp <> SMult constr
R69474:69478 Imp <> SLoad constr
R69480:69480 Imp <> Y def
R69465:69469 Imp <> SPush constr
R69456:69460 Imp <> SLoad constr
R69462:69462 Imp <> X def
prf 70297:70311 <> s_execute_stack
R70328:70332 Imp <> state def
R70343:70346 Coq.Init.Datatypes <> list ind
R70348:70353 Imp <> sinstr ind
R70380:70383 Coq.Init.Datatypes <> list ind
R70385:70387 Coq.Init.Datatypes <> nat ind
R70486:70489 Coq.Init.Logic <> :type_scope:x_'='_x not
R70507:70507 Coq.Init.Logic <> :type_scope:x_'='_x not
R70451:70459 Imp <> s_execute def
R70482:70485 Imp <> prog var
R70470:70473 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R70465:70469 Imp <> stack var
R70474:70479 Imp <> stack' var
R70461:70462 Imp <> st var
R70497:70500 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R70490:70496 Imp <> stack'' var
R70501:70506 Imp <> stack' var
R70439:70442 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R70432:70438 Imp <> stack'' var
R70443:70444 Coq.Lists.List ListNotations :list_scope:'['_']' not
R70416:70418 Coq.Init.Logic <> :type_scope:x_'='_x not
R70393:70401 Imp <> s_execute def
R70412:70415 Imp <> prog var
R70406:70410 Imp <> stack var
R70403:70404 Imp <> st var
R70419:70425 Imp <> stack'' var
R70729:70732 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70729:70732 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70852:70852 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70857:70861 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70852:70852 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R70857:70861 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71000:71017 SfLib <> ex_falso_quodlibet thm
R71000:71017 SfLib <> ex_falso_quodlibet thm
R71087:71104 SfLib <> ex_falso_quodlibet thm
R71087:71104 SfLib <> ex_falso_quodlibet thm
R71186:71194 Imp <> s_execute def
R71206:71209 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71201:71203 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R71167:71170 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71162:71164 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R71186:71194 Imp <> s_execute def
R71206:71209 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71201:71203 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R71167:71170 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71162:71164 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R71347:71364 SfLib <> ex_falso_quodlibet thm
R71347:71364 SfLib <> ex_falso_quodlibet thm
R71450:71467 SfLib <> ex_falso_quodlibet thm
R71450:71467 SfLib <> ex_falso_quodlibet thm
R71549:71557 Imp <> s_execute def
R71569:71572 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71565:71567 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R71530:71533 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71526:71528 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R71549:71557 Imp <> s_execute def
R71569:71572 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71565:71567 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R71530:71533 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71526:71528 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R71725:71742 SfLib <> ex_falso_quodlibet thm
R71725:71742 SfLib <> ex_falso_quodlibet thm
R71828:71845 SfLib <> ex_falso_quodlibet thm
R71828:71845 SfLib <> ex_falso_quodlibet thm
R71928:71936 Imp <> s_execute def
R71948:71951 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71944:71946 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R71909:71912 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71905:71907 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R71928:71936 Imp <> s_execute def
R71948:71951 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71944:71946 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R71909:71912 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R71905:71907 Coq.Init.Peano <> :nat_scope:x_'*'_x not
prf 71991:72003 <> s_execute_app
R72020:72024 Imp <> state def
R72036:72039 Coq.Init.Datatypes <> list ind
R72041:72046 Imp <> sinstr ind
R72073:72076 Coq.Init.Datatypes <> list ind
R72078:72080 Coq.Init.Datatypes <> nat ind
R72207:72209 Coq.Init.Logic <> :type_scope:x_'='_x not
R72178:72186 Imp <> s_execute def
R72200:72203 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R72198:72199 Imp <> l1 var
R72204:72205 Imp <> l2 var
R72191:72195 Imp <> stack var
R72188:72189 Imp <> st var
R72210:72216 Imp <> stack'' var
R72166:72169 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R72160:72165 Imp <> stack' var
R72170:72171 Coq.Lists.List ListNotations :list_scope:'['_']' not
R72144:72146 Coq.Init.Logic <> :type_scope:x_'='_x not
R72122:72130 Imp <> s_execute def
R72142:72143 Imp <> l2 var
R72135:72140 Imp <> stack' var
R72132:72133 Imp <> st var
R72147:72153 Imp <> stack'' var
R72107:72109 Coq.Init.Logic <> :type_scope:x_'='_x not
R72086:72094 Imp <> s_execute def
R72105:72106 Imp <> l1 var
R72099:72103 Imp <> stack var
R72096:72097 Imp <> st var
R72110:72115 Imp <> stack' var
R72489:72497 Imp <> s_execute def
R72504:72507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72477:72480 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72489:72497 Imp <> s_execute def
R72504:72507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72477:72480 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72623:72631 Imp <> s_execute def
R72641:72644 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72611:72614 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72623:72631 Imp <> s_execute def
R72641:72644 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72611:72614 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72756:72773 SfLib <> ex_falso_quodlibet thm
R72756:72773 SfLib <> ex_falso_quodlibet thm
R72865:72882 SfLib <> ex_falso_quodlibet thm
R72865:72882 SfLib <> ex_falso_quodlibet thm
R72978:72986 Imp <> s_execute def
R72998:73001 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72993:72995 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R72966:72969 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72961:72963 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R72978:72986 Imp <> s_execute def
R72998:73001 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72993:72995 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R72966:72969 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R72961:72963 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R73114:73131 SfLib <> ex_falso_quodlibet thm
R73114:73131 SfLib <> ex_falso_quodlibet thm
R73223:73240 SfLib <> ex_falso_quodlibet thm
R73223:73240 SfLib <> ex_falso_quodlibet thm
R73336:73344 Imp <> s_execute def
R73356:73359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73352:73354 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R73324:73327 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73320:73322 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R73336:73344 Imp <> s_execute def
R73356:73359 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73352:73354 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R73324:73327 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73320:73322 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R73472:73489 SfLib <> ex_falso_quodlibet thm
R73472:73489 SfLib <> ex_falso_quodlibet thm
R73581:73598 SfLib <> ex_falso_quodlibet thm
R73581:73598 SfLib <> ex_falso_quodlibet thm
R73694:73702 Imp <> s_execute def
R73714:73717 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73710:73712 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R73682:73685 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73678:73680 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R73694:73702 Imp <> s_execute def
R73714:73717 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73710:73712 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R73682:73685 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R73678:73680 Coq.Init.Peano <> :nat_scope:x_'*'_x not
prf 73751:73767 <> s_compile_correct
R73784:73788 Imp <> state def
R73796:73799 Imp <> aexp ind
R73834:73836 Coq.Init.Logic <> :type_scope:x_'='_x not
R73805:73813 Imp <> s_execute def
R73822:73830 Imp <> s_compile def
R73832:73832 Imp <> e var
R73818:73819 Coq.Lists.List ListNotations :list_scope:'['_']' not
R73815:73816 Imp <> st var
R73837:73838 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R73849:73850 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R73839:73843 Imp <> aeval def
R73848:73848 Imp <> e var
R73845:73846 Imp <> st var
R73981:73993 Imp <> s_execute_app thm
R74067:74067 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74093:74093 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74079:74081 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R74068:74072 Imp <> aeval def
R74082:74086 Imp <> aeval def
R74053:74053 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74065:74065 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74054:74058 Imp <> aeval def
R74050:74051 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74037:74040 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74025:74033 Imp <> s_compile def
R74041:74041 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74047:74047 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74042:74046 Imp <> SPlus constr
R73999:74007 Imp <> s_compile def
R73981:73993 Imp <> s_execute_app thm
R74067:74067 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74093:74093 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74079:74081 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R74068:74072 Imp <> aeval def
R74082:74086 Imp <> aeval def
R74053:74053 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74065:74065 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74054:74058 Imp <> aeval def
R74050:74051 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74037:74040 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74025:74033 Imp <> s_compile def
R74041:74041 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74047:74047 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74042:74046 Imp <> SPlus constr
R73999:74007 Imp <> s_compile def
R74116:74128 Imp <> s_execute_app thm
R74207:74207 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74233:74233 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74219:74221 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R74208:74212 Imp <> aeval def
R74222:74226 Imp <> aeval def
R74181:74181 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74193:74193 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74205:74205 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74194:74198 Imp <> aeval def
R74182:74186 Imp <> aeval def
R74167:74167 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74179:74179 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74168:74172 Imp <> aeval def
R74159:74159 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74165:74165 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74160:74164 Imp <> SPlus constr
R74134:74142 Imp <> s_compile def
R74116:74128 Imp <> s_execute_app thm
R74207:74207 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74233:74233 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74219:74221 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R74208:74212 Imp <> aeval def
R74222:74226 Imp <> aeval def
R74181:74181 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74193:74193 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74205:74205 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74194:74198 Imp <> aeval def
R74182:74186 Imp <> aeval def
R74167:74167 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74179:74179 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74168:74172 Imp <> aeval def
R74159:74159 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74165:74165 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74160:74164 Imp <> SPlus constr
R74134:74142 Imp <> s_compile def
R74255:74269 Imp <> s_execute_stack thm
R74306:74306 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74318:74318 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74307:74311 Imp <> aeval def
R74292:74292 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74304:74304 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74293:74297 Imp <> aeval def
R74289:74290 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74275:74283 Imp <> s_compile def
R74255:74269 Imp <> s_execute_stack thm
R74306:74306 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74318:74318 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74307:74311 Imp <> aeval def
R74292:74292 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74304:74304 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74293:74297 Imp <> aeval def
R74289:74290 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74275:74283 Imp <> s_compile def
R74369:74377 Coq.Arith.Plus <> plus_comm thm
R74369:74377 Coq.Arith.Plus <> plus_comm thm
R74482:74494 Imp <> s_execute_app thm
R74568:74568 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74594:74594 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74580:74582 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R74569:74573 Imp <> aeval def
R74583:74587 Imp <> aeval def
R74554:74554 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74566:74566 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74555:74559 Imp <> aeval def
R74551:74552 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74537:74540 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74525:74533 Imp <> s_compile def
R74541:74541 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74548:74548 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74542:74547 Imp <> SMinus constr
R74500:74508 Imp <> s_compile def
R74482:74494 Imp <> s_execute_app thm
R74568:74568 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74594:74594 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74580:74582 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R74569:74573 Imp <> aeval def
R74583:74587 Imp <> aeval def
R74554:74554 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74566:74566 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74555:74559 Imp <> aeval def
R74551:74552 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74537:74540 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74525:74533 Imp <> s_compile def
R74541:74541 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74548:74548 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74542:74547 Imp <> SMinus constr
R74500:74508 Imp <> s_compile def
R74618:74630 Imp <> s_execute_app thm
R74709:74709 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74735:74735 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74721:74723 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R74710:74714 Imp <> aeval def
R74724:74728 Imp <> aeval def
R74682:74682 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74694:74695 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74707:74707 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74696:74700 Imp <> aeval def
R74683:74687 Imp <> aeval def
R74668:74668 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74680:74680 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74669:74673 Imp <> aeval def
R74659:74659 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74666:74666 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74660:74665 Imp <> SMinus constr
R74636:74644 Imp <> s_compile def
R74618:74630 Imp <> s_execute_app thm
R74709:74709 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74735:74735 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74721:74723 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R74710:74714 Imp <> aeval def
R74724:74728 Imp <> aeval def
R74682:74682 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74694:74695 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74707:74707 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74696:74700 Imp <> aeval def
R74683:74687 Imp <> aeval def
R74668:74668 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74680:74680 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74669:74673 Imp <> aeval def
R74659:74659 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74666:74666 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74660:74665 Imp <> SMinus constr
R74636:74644 Imp <> s_compile def
R74757:74771 Imp <> s_execute_stack thm
R74808:74808 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74820:74820 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74809:74813 Imp <> aeval def
R74794:74794 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74806:74806 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74795:74799 Imp <> aeval def
R74791:74792 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74777:74785 Imp <> s_compile def
R74757:74771 Imp <> s_execute_stack thm
R74808:74808 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74820:74820 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74809:74813 Imp <> aeval def
R74794:74794 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74806:74806 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74795:74799 Imp <> aeval def
R74791:74792 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74777:74785 Imp <> s_compile def
R74938:74950 Imp <> s_execute_app thm
R75013:75013 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75039:75039 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75025:75027 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R75014:75018 Imp <> aeval def
R75028:75032 Imp <> aeval def
R74999:74999 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75011:75011 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75000:75004 Imp <> aeval def
R74996:74997 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74983:74986 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74971:74979 Imp <> s_compile def
R74987:74987 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74993:74993 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74988:74992 Imp <> SMult constr
R74956:74964 Imp <> s_compile def
R74938:74950 Imp <> s_execute_app thm
R75013:75013 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75039:75039 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75025:75027 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R75014:75018 Imp <> aeval def
R75028:75032 Imp <> aeval def
R74999:74999 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75011:75011 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75000:75004 Imp <> aeval def
R74996:74997 Coq.Lists.List ListNotations :list_scope:'['_']' not
R74983:74986 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R74971:74979 Imp <> s_compile def
R74987:74987 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74993:74993 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R74988:74992 Imp <> SMult constr
R74956:74964 Imp <> s_compile def
R75063:75075 Imp <> s_execute_app thm
R75144:75144 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75170:75170 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75156:75158 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R75145:75149 Imp <> aeval def
R75159:75163 Imp <> aeval def
R75117:75117 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75129:75130 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75142:75142 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75131:75135 Imp <> aeval def
R75118:75122 Imp <> aeval def
R75103:75103 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75115:75115 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75104:75108 Imp <> aeval def
R75095:75095 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75101:75101 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75096:75100 Imp <> SMult constr
R75081:75089 Imp <> s_compile def
R75063:75075 Imp <> s_execute_app thm
R75144:75144 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75170:75170 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75156:75158 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R75145:75149 Imp <> aeval def
R75159:75163 Imp <> aeval def
R75117:75117 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75129:75130 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75142:75142 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75131:75135 Imp <> aeval def
R75118:75122 Imp <> aeval def
R75103:75103 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75115:75115 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75104:75108 Imp <> aeval def
R75095:75095 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75101:75101 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75096:75100 Imp <> SMult constr
R75081:75089 Imp <> s_compile def
R75192:75206 Imp <> s_execute_stack thm
R75243:75243 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75255:75255 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75244:75248 Imp <> aeval def
R75229:75229 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75241:75241 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75230:75234 Imp <> aeval def
R75226:75227 Coq.Lists.List ListNotations :list_scope:'['_']' not
R75212:75220 Imp <> s_compile def
R75192:75206 Imp <> s_execute_stack thm
R75243:75243 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75255:75255 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75244:75248 Imp <> aeval def
R75229:75229 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75241:75241 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R75230:75234 Imp <> aeval def
R75226:75227 Coq.Lists.List ListNotations :list_scope:'['_']' not
R75212:75220 Imp <> s_compile def
mod 75426:75433 <> BreakImp
ind 75730:75732 BreakImp com
constr 75748:75752 BreakImp CSkip
constr 75764:75769 BreakImp CBreak
constr 75781:75784 BreakImp CAss
constr 75810:75813 BreakImp CSeq
constr 75839:75841 BreakImp CIf
constr 75875:75880 BreakImp CWhile
R75756:75758 Imp <> com ind
R75773:75775 Imp <> com ind
R75802:75804 Imp <> com ind
R75794:75797 Imp BreakImp aexp ind
R75788:75789 SfLib <> id ind
R75831:75833 Imp <> com ind
R75824:75826 Imp <> com ind
R75817:75819 Imp <> com ind
R75867:75869 Imp <> com ind
R75860:75862 Imp <> com ind
R75853:75855 Imp <> com ind
R75845:75848 Imp BreakImp bexp ind
R75899:75901 Imp <> com ind
R75892:75894 Imp <> com ind
R75884:75887 Imp BreakImp bexp ind
R76116:76120 Imp BreakImp CSkip constr
not 76102 BreakImp ::'SKIP'
R76147:76152 Imp BreakImp CBreak constr
not 76132 BreakImp ::'BREAK'
R76182:76185 Imp BreakImp CAss constr
not 76164 BreakImp ::x_'::='_x
R76232:76235 Imp BreakImp CSeq constr
not 76216 BreakImp ::x_';'_x
R76320:76325 Imp BreakImp CWhile constr
not 76289 BreakImp ::'WHILE'_x_'DO'_x_'END'
R76419:76421 Imp BreakImp CIf constr
not 76377 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 77515:77520 BreakImp status
constr 77536:77544 BreakImp SContinue
constr 77559:77564 BreakImp SBreak
R77548:77553 Imp <> status ind
R77568:77573 Imp <> status ind
ind 79969:79973 BreakImp ceval
constr 80024:80029 BreakImp E_Skip
constr 80083:80089 BreakImp E_Break
constr 80141:80146 BreakImp E_CAss
constr 80242:80255 BreakImp E_Seq_continue
constr 80392:80402 BreakImp E_Seq_break
constr 80495:80504 BreakImp E_CIf_true
constr 80628:80638 BreakImp E_CIf_false
constr 80763:80772 BreakImp E_WhileEnd
constr 80871:80882 BreakImp E_WhileLoopB
constr 81021:81032 BreakImp E_WhileLoopC
R80003:80007 Imp BreakImp state def
R79993:79998 Imp BreakImp status ind
R79984:79988 Imp BreakImp state def
R79977:79979 Imp BreakImp com ind
R81290:81294 Imp <> ceval ind
R80055:80057 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80060:80063 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80073:80075 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80050:80054 Imp BreakImp CSkip constr
R80058:80059 Imp <> st var
R80064:80072 Imp BreakImp SContinue constr
R80076:80077 Imp <> st var
R80116:80118 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80121:80124 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80131:80133 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80110:80115 Imp BreakImp CBreak constr
R80119:80120 Imp <> st var
R80125:80130 Imp BreakImp SBreak constr
R80134:80135 Imp <> st var
R80160:80161 SfLib <> id ind
R80166:80169 Imp BreakImp aexp ind
R80190:80192 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80195:80198 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80208:80211 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80236:80236 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80182:80185 Imp BreakImp CAss constr
R80189:80189 Imp <> a var
R80187:80187 Imp <> X var
R80193:80194 Imp <> st var
R80199:80207 Imp BreakImp SContinue constr
R80212:80217 Imp BreakImp update def
R80225:80229 Imp BreakImp aeval def
R80234:80234 Imp <> a var
R80231:80232 Imp <> st var
R80222:80222 Imp <> X var
R80219:80220 Imp <> st var
R80359:80359 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80370:80373 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80376:80379 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80381:80382 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80360:80363 Imp BreakImp CSeq constr
R80368:80369 Imp <> c2 var
R80365:80366 Imp <> c1 var
R80374:80375 Imp <> st var
R80380:80380 Imp <> s var
R80383:80386 Imp <> st'' var
R80328:80330 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80334:80337 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80339:80341 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80326:80327 Imp <> c2 var
R80331:80333 Imp <> st' var
R80338:80338 Imp <> s var
R80342:80345 Imp <> st'' var
R80298:80300 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80303:80306 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80316:80318 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80296:80297 Imp <> c1 var
R80301:80302 Imp <> st var
R80307:80315 Imp BreakImp SContinue constr
R80319:80321 Imp <> st' var
R80458:80458 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80469:80472 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80475:80478 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80485:80487 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80459:80462 Imp BreakImp CSeq constr
R80467:80468 Imp <> c2 var
R80464:80465 Imp <> c1 var
R80473:80474 Imp <> st var
R80479:80484 Imp BreakImp SBreak constr
R80488:80489 Imp <> st var
R80434:80436 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80439:80442 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80449:80451 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80432:80433 Imp <> c1 var
R80437:80438 Imp <> st var
R80443:80448 Imp BreakImp SBreak constr
R80452:80453 Imp <> st var
R80594:80594 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80606:80609 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80612:80615 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80617:80619 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80595:80597 Imp BreakImp CIf constr
R80604:80605 Imp <> c2 var
R80601:80602 Imp <> c1 var
R80599:80599 Imp <> b var
R80610:80611 Imp <> st var
R80616:80616 Imp <> s var
R80620:80622 Imp <> st' var
R80574:80576 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80579:80582 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80584:80586 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80572:80573 Imp <> c1 var
R80577:80578 Imp <> st var
R80583:80583 Imp <> s var
R80587:80589 Imp <> st' var
R80552:80554 Coq.Init.Logic <> :type_scope:x_'='_x not
R80542:80546 Imp BreakImp beval def
R80551:80551 Imp <> b var
R80548:80549 Imp <> st var
R80555:80558 Coq.Init.Datatypes <> true constr
R80729:80729 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80741:80744 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80747:80750 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80752:80754 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80730:80732 Imp BreakImp CIf constr
R80739:80740 Imp <> c2 var
R80736:80737 Imp <> c1 var
R80734:80734 Imp <> b var
R80745:80746 Imp <> st var
R80751:80751 Imp <> s var
R80755:80757 Imp <> st' var
R80709:80711 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80714:80717 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80719:80721 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80707:80708 Imp <> c2 var
R80712:80713 Imp <> st var
R80718:80718 Imp <> s var
R80722:80724 Imp <> st' var
R80686:80688 Coq.Init.Logic <> :type_scope:x_'='_x not
R80676:80680 Imp BreakImp beval def
R80685:80685 Imp <> b var
R80682:80683 Imp <> st var
R80689:80693 Coq.Init.Datatypes <> false constr
R80831:80831 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80842:80845 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80848:80851 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80861:80863 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80832:80837 Imp BreakImp CWhile constr
R80841:80841 Imp <> c var
R80839:80839 Imp <> b var
R80846:80847 Imp <> st var
R80852:80860 Imp BreakImp SContinue constr
R80864:80865 Imp <> st var
R80810:80812 Coq.Init.Logic <> :type_scope:x_'='_x not
R80800:80804 Imp BreakImp beval def
R80809:80809 Imp <> b var
R80806:80807 Imp <> st var
R80813:80817 Coq.Init.Datatypes <> false constr
R80979:80979 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80990:80993 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80996:80999 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81009:81010 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80980:80985 Imp BreakImp CWhile constr
R80989:80989 Imp <> c var
R80987:80987 Imp <> b var
R80994:80995 Imp <> st var
R81000:81008 Imp BreakImp SContinue constr
R81011:81013 Imp <> st' var
R80945:80947 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80950:80953 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80960:80962 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R80944:80944 Imp <> c var
R80948:80949 Imp <> st var
R80954:80959 Imp BreakImp SBreak constr
R80963:80965 Imp <> st' var
R80924:80926 Coq.Init.Logic <> :type_scope:x_'='_x not
R80914:80918 Imp BreakImp beval def
R80923:80923 Imp <> b var
R80920:80921 Imp <> st var
R80927:80930 Coq.Init.Datatypes <> true constr
R81180:81180 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81191:81194 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81197:81201 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81203:81205 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81181:81186 Imp BreakImp CWhile constr
R81190:81190 Imp <> c var
R81188:81188 Imp <> b var
R81195:81196 Imp <> st var
R81202:81202 Imp <> s var
R81206:81209 Imp <> st'' var
R81138:81138 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81149:81152 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81156:81159 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81161:81163 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81139:81144 Imp BreakImp CWhile constr
R81148:81148 Imp <> c var
R81146:81146 Imp <> b var
R81153:81155 Imp <> st' var
R81160:81160 Imp <> s var
R81164:81167 Imp <> st'' var
R81102:81103 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81106:81109 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81119:81121 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81101:81101 Imp <> c var
R81104:81105 Imp <> st var
R81110:81118 Imp BreakImp SContinue constr
R81122:81124 Imp <> st' var
R81081:81083 Coq.Init.Logic <> :type_scope:x_'='_x not
R81071:81075 Imp BreakImp beval def
R81080:81080 Imp <> b var
R81077:81078 Imp <> st var
R81084:81087 Coq.Init.Datatypes <> true constr
R81290:81294 Imp BreakImp ceval ind
not 81259 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 81734:81745 BreakImp break_ignore
R81810:81812 Coq.Init.Logic <> :type_scope:x_'='_x not
R81808:81809 Imp <> st var
R81813:81815 Imp <> st' var
R81773:81773 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81782:81785 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81788:81791 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81793:81795 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R81779:81780 Imp BreakImp ::x_';'_x not
R81774:81778 Imp BreakImp ::'BREAK' not
R81781:81781 Imp <> c var
R81786:81787 Imp <> st var
R81792:81792 Imp <> s var
R81796:81798 Imp <> st' var
R81852:81852 Imp BreakImp ::x_';'_x not
R81847:81851 Imp BreakImp ::'BREAK' not
R81852:81852 Imp BreakImp ::x_';'_x not
R81847:81851 Imp BreakImp ::'BREAK' not
prf 81986:81999 BreakImp while_continue
R82067:82069 Coq.Init.Logic <> :type_scope:x_'='_x not
R82066:82066 Imp <> s var
R82070:82078 Imp BreakImp SContinue constr
R82026:82026 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82043:82046 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82049:82052 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82054:82056 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82027:82032 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82034:82037 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82039:82042 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82033:82033 Imp <> b var
R82038:82038 Imp <> c var
R82047:82048 Imp <> st var
R82053:82053 Imp <> s var
R82057:82059 Imp <> st' var
R82110:82115 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82117:82120 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82122:82125 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82110:82115 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82117:82120 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82122:82125 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 82274:82293 BreakImp while_stops_on_break
R82369:82369 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82386:82389 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82392:82395 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82405:82407 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82370:82375 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82377:82380 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82382:82385 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82376:82376 Imp <> b var
R82381:82381 Imp <> c var
R82390:82391 Imp <> st var
R82396:82404 Imp BreakImp SContinue constr
R82408:82410 Imp <> st' var
R82342:82344 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82347:82350 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82357:82359 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82341:82341 Imp <> c var
R82345:82346 Imp <> st var
R82351:82356 Imp BreakImp SBreak constr
R82360:82362 Imp <> st' var
R82328:82330 Coq.Init.Logic <> :type_scope:x_'='_x not
R82318:82322 Imp BreakImp beval def
R82327:82327 Imp <> b var
R82324:82325 Imp <> st var
R82331:82334 Coq.Init.Datatypes <> true constr
R82438:82449 Imp BreakImp E_WhileLoopB constr
R82438:82449 Imp BreakImp E_WhileLoopB constr
prf 82506:82521 BreakImp while_break_true
R82618:82624 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R82629:82630 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R82632:82634 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82639:82642 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82649:82651 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82631:82631 Imp <> c var
R82635:82638 Imp <> st'' var
R82643:82648 Imp BreakImp SBreak constr
R82652:82654 Imp <> st' var
R82605:82607 Coq.Init.Logic <> :type_scope:x_'='_x not
R82594:82598 Imp BreakImp beval def
R82604:82604 Imp <> b var
R82600:82602 Imp <> st' var
R82608:82611 Coq.Init.Datatypes <> true constr
R82546:82546 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82563:82566 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82569:82572 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82582:82584 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82547:82552 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82554:82557 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82559:82562 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82553:82553 Imp <> b var
R82558:82558 Imp <> c var
R82567:82568 Imp <> st var
R82573:82581 Imp BreakImp SContinue constr
R82585:82587 Imp <> st' var
R82686:82691 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82693:82696 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82698:82701 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82686:82691 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82693:82696 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R82698:82701 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 82913:82931 BreakImp ceval_deterministic
R82944:82946 Imp BreakImp com ind
R83036:83039 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R83030:83032 Coq.Init.Logic <> :type_scope:x_'='_x not
R83027:83029 Imp <> st1 var
R83033:83035 Imp <> st2 var
R83042:83044 Coq.Init.Logic <> :type_scope:x_'='_x not
R83040:83041 Imp <> s1 var
R83045:83046 Imp <> s2 var
R83001:83003 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R83006:83009 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R83012:83014 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R83000:83000 Imp <> c var
R83004:83005 Imp <> st var
R83010:83011 Imp <> s2 var
R83015:83017 Imp <> st2 var
R82973:82975 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82978:82981 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82984:82986 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R82972:82972 Imp <> c var
R82976:82977 Imp <> st var
R82982:82983 Imp <> s1 var
R82987:82989 Imp <> st1 var
R83360:83362 Coq.Init.Logic <> :type_scope:x_'='_x not
R83360:83362 Coq.Init.Logic <> :type_scope:x_'='_x not
R83404:83412 Imp BreakImp SContinue constr
R83404:83412 Imp BreakImp SContinue constr
R83508:83508 Coq.Init.Logic <> :type_scope:x_'='_x not
R83499:83507 Imp BreakImp SContinue constr
R83509:83514 Imp BreakImp SBreak constr
R83508:83508 Coq.Init.Logic <> :type_scope:x_'='_x not
R83499:83507 Imp BreakImp SContinue constr
R83509:83514 Imp BreakImp SBreak constr
R83689:83689 Coq.Init.Logic <> :type_scope:x_'='_x not
R83683:83688 Imp BreakImp SBreak constr
R83690:83698 Imp BreakImp SContinue constr
R83689:83689 Coq.Init.Logic <> :type_scope:x_'='_x not
R83683:83688 Imp BreakImp SBreak constr
R83690:83698 Imp BreakImp SContinue constr
R84602:84602 Coq.Init.Logic <> :type_scope:x_'='_x not
R84596:84601 Imp BreakImp SBreak constr
R84603:84611 Imp BreakImp SContinue constr
R84602:84602 Coq.Init.Logic <> :type_scope:x_'='_x not
R84596:84601 Imp BreakImp SBreak constr
R84603:84611 Imp BreakImp SContinue constr
R84865:84865 Coq.Init.Logic <> :type_scope:x_'='_x not
R84856:84864 Imp BreakImp SContinue constr
R84866:84871 Imp BreakImp SBreak constr
R84865:84865 Coq.Init.Logic <> :type_scope:x_'='_x not
R84856:84864 Imp BreakImp SContinue constr
R84866:84871 Imp BreakImp SBreak constr
R85014:85016 Coq.Init.Logic <> :type_scope:x_'='_x not
R85014:85016 Coq.Init.Logic <> :type_scope:x_'='_x not
R85135:85142 Imp <> <> mod
def 85748:85758 <> alter_beval
R85766:85770 Imp <> state def
R85778:85781 Imp <> bexp ind
R85786:85789 Coq.Init.Datatypes <> bool ind
R85802:85802 Imp <> b var
R85813:85817 Imp <> BTrue constr
R85828:85831 Coq.Init.Datatypes <> true constr
R85837:85842 Imp <> BFalse constr
R85852:85856 Coq.Init.Datatypes <> false constr
R85862:85864 Imp <> BEq constr
R85877:85883 Coq.Arith.EqNat <> beq_nat def
R85900:85904 Imp <> aeval def
R85906:85907 Imp <> st var
R85886:85890 Imp <> aeval def
R85892:85893 Imp <> st var
R85917:85919 Imp <> BLe constr
R85932:85938 SfLib <> ble_nat def
R85955:85959 Imp <> aeval def
R85961:85962 Imp <> st var
R85941:85945 Imp <> aeval def
R85947:85948 Imp <> st var
R85972:85975 Imp <> BNot constr
R85987:85990 Coq.Init.Datatypes <> negb def
R85993:85997 Imp <> beval def
R85999:86000 Imp <> st var
R86010:86013 Imp <> BAnd constr
R86032:86036 Imp <> beval def
R86038:86039 Imp <> st var
R86072:86075 Coq.Init.Datatypes <> true constr
R86079:86083 Imp <> beval def
R86085:86086 Imp <> st var
R86112:86116 Coq.Init.Datatypes <> false constr
R86121:86125 Coq.Init.Datatypes <> false constr
prf 86165:86182 <> alter_beval__beval
R86219:86221 Coq.Init.Logic <> :type_scope:x_'='_x not
R86203:86213 Imp <> alter_beval def
R86218:86218 Imp <> b var
R86215:86216 Imp <> st var
R86222:86226 Imp <> beval def
R86231:86231 Imp <> b var
R86228:86229 Imp <> st var
mod 87073:87078 <> ForImp
ind 87091:87093 ForImp com
constr 87109:87113 ForImp CSkip
constr 87125:87130 ForImp CBreak
constr 87142:87145 ForImp CAss
constr 87171:87174 ForImp CSeq
constr 87200:87202 ForImp CIf
constr 87236:87241 ForImp CWhile
constr 87268:87271 ForImp CFor
R87117:87119 Imp <> com ind
R87134:87136 Imp <> com ind
R87163:87165 Imp <> com ind
R87155:87158 Imp ForImp aexp ind
R87149:87150 SfLib <> id ind
R87192:87194 Imp <> com ind
R87185:87187 Imp <> com ind
R87178:87180 Imp <> com ind
R87228:87230 Imp <> com ind
R87221:87223 Imp <> com ind
R87214:87216 Imp <> com ind
R87206:87209 Imp ForImp bexp ind
R87260:87262 Imp <> com ind
R87253:87255 Imp <> com ind
R87245:87248 Imp ForImp bexp ind
R87304:87306 Imp <> com ind
R87297:87299 Imp <> com ind
R87290:87292 Imp <> com ind
R87282:87285 Imp ForImp bexp ind
R87275:87277 Imp <> com ind
R87539:87543 Imp ForImp CSkip constr
not 87525 ForImp ::'SKIP'
R87570:87575 Imp ForImp CBreak constr
not 87555 ForImp ::'BREAK'
R87605:87608 Imp ForImp CAss constr
not 87587 ForImp ::x_'::='_x
R87655:87658 Imp ForImp CSeq constr
not 87639 ForImp ::x_';'_x
R87743:87748 Imp ForImp CWhile constr
not 87712 ForImp ::'WHILE'_x_'DO'_x_'END'
R87842:87844 Imp ForImp CIf constr
not 87800 ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R87939:87942 Imp ForImp CFor constr
not 87901 ForImp ::'For'_x_x_x_'DO'_x_'ENDFOR'
ind 88002:88007 ForImp status
constr 88023:88031 ForImp SContinue
constr 88046:88051 ForImp SBreak
R88035:88040 Imp <> status ind
R88055:88060 Imp <> status ind
ind 88172:88176 ForImp ceval
constr 88227:88232 ForImp E_Skip
constr 88286:88292 ForImp E_Break
constr 88344:88349 ForImp E_CAss
constr 88445:88458 ForImp E_Seq_continue
constr 88595:88605 ForImp E_Seq_break
constr 88698:88707 ForImp E_CIf_true
constr 88831:88841 ForImp E_CIf_false
constr 88966:88975 ForImp E_WhileEnd
constr 89074:89085 ForImp E_WhileLoopB
constr 89224:89235 ForImp E_WhileLoopC
constr 89422:89430 ForImp E_ForLoop
constr 89580:89589 ForImp E_ForLoopB
constr 89782:89791 ForImp E_ForLoopC
R88206:88210 Imp ForImp state def
R88196:88201 Imp ForImp status ind
R88187:88191 Imp ForImp state def
R88180:88182 Imp ForImp com ind
R90127:90131 Imp <> ceval ind
R88258:88260 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88263:88266 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88276:88278 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88253:88257 Imp ForImp CSkip constr
R88261:88262 Imp <> st var
R88267:88275 Imp ForImp SContinue constr
R88279:88280 Imp <> st var
R88319:88321 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88324:88327 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88334:88336 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88313:88318 Imp ForImp CBreak constr
R88322:88323 Imp <> st var
R88328:88333 Imp ForImp SBreak constr
R88337:88338 Imp <> st var
R88363:88364 SfLib <> id ind
R88369:88372 Imp ForImp aexp ind
R88393:88395 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88398:88401 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88411:88414 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88439:88439 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88385:88388 Imp ForImp CAss constr
R88392:88392 Imp <> a var
R88390:88390 Imp <> X var
R88396:88397 Imp <> st var
R88402:88410 Imp ForImp SContinue constr
R88415:88420 Imp ForImp update def
R88428:88432 Imp ForImp aeval def
R88437:88437 Imp <> a var
R88434:88435 Imp <> st var
R88425:88425 Imp <> X var
R88422:88423 Imp <> st var
R88562:88562 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88573:88576 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88579:88582 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88584:88585 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88563:88566 Imp ForImp CSeq constr
R88571:88572 Imp <> c2 var
R88568:88569 Imp <> c1 var
R88577:88578 Imp <> st var
R88583:88583 Imp <> s var
R88586:88589 Imp <> st'' var
R88531:88533 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88537:88540 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88542:88544 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88529:88530 Imp <> c2 var
R88534:88536 Imp <> st' var
R88541:88541 Imp <> s var
R88545:88548 Imp <> st'' var
R88501:88503 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88506:88509 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88519:88521 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88499:88500 Imp <> c1 var
R88504:88505 Imp <> st var
R88510:88518 Imp ForImp SContinue constr
R88522:88524 Imp <> st' var
R88661:88661 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88672:88675 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88678:88681 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88688:88690 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88662:88665 Imp ForImp CSeq constr
R88670:88671 Imp <> c2 var
R88667:88668 Imp <> c1 var
R88676:88677 Imp <> st var
R88682:88687 Imp ForImp SBreak constr
R88691:88692 Imp <> st var
R88637:88639 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88642:88645 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88652:88654 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88635:88636 Imp <> c1 var
R88640:88641 Imp <> st var
R88646:88651 Imp ForImp SBreak constr
R88655:88656 Imp <> st var
R88797:88797 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88809:88812 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88815:88818 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88820:88822 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88798:88800 Imp ForImp CIf constr
R88807:88808 Imp <> c2 var
R88804:88805 Imp <> c1 var
R88802:88802 Imp <> b var
R88813:88814 Imp <> st var
R88819:88819 Imp <> s var
R88823:88825 Imp <> st' var
R88777:88779 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88782:88785 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88787:88789 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88775:88776 Imp <> c1 var
R88780:88781 Imp <> st var
R88786:88786 Imp <> s var
R88790:88792 Imp <> st' var
R88755:88757 Coq.Init.Logic <> :type_scope:x_'='_x not
R88745:88749 Imp ForImp beval def
R88754:88754 Imp <> b var
R88751:88752 Imp <> st var
R88758:88761 Coq.Init.Datatypes <> true constr
R88932:88932 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88944:88947 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88950:88953 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88955:88957 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88933:88935 Imp ForImp CIf constr
R88942:88943 Imp <> c2 var
R88939:88940 Imp <> c1 var
R88937:88937 Imp <> b var
R88948:88949 Imp <> st var
R88954:88954 Imp <> s var
R88958:88960 Imp <> st' var
R88912:88914 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88917:88920 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88922:88924 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R88910:88911 Imp <> c2 var
R88915:88916 Imp <> st var
R88921:88921 Imp <> s var
R88925:88927 Imp <> st' var
R88889:88891 Coq.Init.Logic <> :type_scope:x_'='_x not
R88879:88883 Imp ForImp beval def
R88888:88888 Imp <> b var
R88885:88886 Imp <> st var
R88892:88896 Coq.Init.Datatypes <> false constr
R89034:89034 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89045:89048 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89051:89054 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89064:89066 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89035:89040 Imp ForImp CWhile constr
R89044:89044 Imp <> c var
R89042:89042 Imp <> b var
R89049:89050 Imp <> st var
R89055:89063 Imp ForImp SContinue constr
R89067:89068 Imp <> st var
R89013:89015 Coq.Init.Logic <> :type_scope:x_'='_x not
R89003:89007 Imp ForImp beval def
R89012:89012 Imp <> b var
R89009:89010 Imp <> st var
R89016:89020 Coq.Init.Datatypes <> false constr
R89182:89182 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89193:89196 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89199:89202 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89212:89213 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89183:89188 Imp ForImp CWhile constr
R89192:89192 Imp <> c var
R89190:89190 Imp <> b var
R89197:89198 Imp <> st var
R89203:89211 Imp ForImp SContinue constr
R89214:89216 Imp <> st' var
R89148:89150 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89153:89156 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89163:89165 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89147:89147 Imp <> c var
R89151:89152 Imp <> st var
R89157:89162 Imp ForImp SBreak constr
R89166:89168 Imp <> st' var
R89127:89129 Coq.Init.Logic <> :type_scope:x_'='_x not
R89117:89121 Imp ForImp beval def
R89126:89126 Imp <> b var
R89123:89124 Imp <> st var
R89130:89133 Coq.Init.Datatypes <> true constr
R89383:89383 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89394:89397 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89400:89404 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89406:89408 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89384:89389 Imp ForImp CWhile constr
R89393:89393 Imp <> c var
R89391:89391 Imp <> b var
R89398:89399 Imp <> st var
R89405:89405 Imp <> s var
R89409:89412 Imp <> st'' var
R89341:89341 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89352:89355 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89359:89362 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89364:89366 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89342:89347 Imp ForImp CWhile constr
R89351:89351 Imp <> c var
R89349:89349 Imp <> b var
R89356:89358 Imp <> st' var
R89363:89363 Imp <> s var
R89367:89370 Imp <> st'' var
R89305:89306 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89309:89312 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89322:89324 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89304:89304 Imp <> c var
R89307:89308 Imp <> st var
R89313:89321 Imp ForImp SContinue constr
R89325:89327 Imp <> st' var
R89284:89286 Coq.Init.Logic <> :type_scope:x_'='_x not
R89274:89278 Imp ForImp beval def
R89283:89283 Imp <> b var
R89280:89281 Imp <> st var
R89287:89290 Coq.Init.Datatypes <> true constr
R89534:89534 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89550:89553 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89556:89559 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89569:89571 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89535:89538 Imp ForImp CFor constr
R89548:89549 Imp <> c3 var
R89545:89546 Imp <> c2 var
R89543:89543 Imp <> b var
R89540:89541 Imp <> c1 var
R89554:89555 Imp <> st var
R89560:89568 Imp ForImp SContinue constr
R89572:89574 Imp <> st' var
R89514:89516 Coq.Init.Logic <> :type_scope:x_'='_x not
R89503:89507 Imp ForImp beval def
R89513:89513 Imp <> b var
R89509:89511 Imp <> st' var
R89517:89521 Coq.Init.Datatypes <> false constr
R89474:89476 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89479:89482 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89484:89486 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89472:89473 Imp <> c1 var
R89477:89478 Imp <> st var
R89483:89483 Imp <> s var
R89487:89489 Imp <> st' var
R89734:89734 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89750:89754 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89757:89760 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89770:89772 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89735:89738 Imp ForImp CFor constr
R89748:89749 Imp <> c3 var
R89745:89746 Imp <> c2 var
R89743:89743 Imp <> b var
R89740:89741 Imp <> c1 var
R89755:89756 Imp <> st var
R89761:89769 Imp ForImp SContinue constr
R89773:89776 Imp <> st'' var
R89699:89701 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89705:89708 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89715:89717 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89697:89698 Imp <> c3 var
R89702:89704 Imp <> st' var
R89709:89714 Imp ForImp SBreak constr
R89718:89721 Imp <> st'' var
R89677:89679 Coq.Init.Logic <> :type_scope:x_'='_x not
R89666:89670 Imp ForImp beval def
R89676:89676 Imp <> b var
R89672:89674 Imp <> st' var
R89680:89683 Coq.Init.Datatypes <> true constr
R89637:89639 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89642:89645 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89647:89649 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89635:89636 Imp <> c1 var
R89640:89641 Imp <> st var
R89646:89646 Imp <> s var
R89650:89652 Imp <> st' var
R90048:90048 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90064:90067 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90070:90073 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90077:90079 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90049:90052 Imp ForImp CFor constr
R90062:90063 Imp <> c3 var
R90059:90060 Imp <> c2 var
R90057:90057 Imp <> b var
R90054:90055 Imp <> c1 var
R90068:90069 Imp <> st var
R90074:90076 Imp <> s'' var
R90080:90085 Imp <> st'''' var
R89995:89995 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90011:90014 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90020:90023 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90027:90029 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89996:89999 Imp ForImp CFor constr
R90009:90010 Imp <> c3 var
R90006:90007 Imp <> c2 var
R90004:90004 Imp <> b var
R90001:90002 Imp <> c1 var
R90015:90019 Imp <> st''' var
R90024:90026 Imp <> s'' var
R90030:90035 Imp <> st'''' var
R89961:89963 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89968:89971 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89974:89976 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89959:89960 Imp <> c2 var
R89964:89967 Imp <> st'' var
R89972:89973 Imp <> s' var
R89977:89981 Imp <> st''' var
R89921:89923 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89927:89930 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89940:89942 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89919:89920 Imp <> c3 var
R89924:89926 Imp <> st' var
R89931:89939 Imp ForImp SContinue constr
R89943:89946 Imp <> st'' var
R89899:89901 Coq.Init.Logic <> :type_scope:x_'='_x not
R89888:89892 Imp ForImp beval def
R89898:89898 Imp <> b var
R89894:89896 Imp <> st' var
R89902:89905 Coq.Init.Datatypes <> true constr
R89859:89861 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89864:89867 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89869:89871 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R89857:89858 Imp <> c1 var
R89862:89863 Imp <> st var
R89868:89868 Imp <> s var
R89872:89874 Imp <> st' var
R90127:90131 Imp ForImp ceval ind
not 90096 ForImp ::x_'/'_x_'||'_x_'/'_x
prf 90554:90565 ForImp break_ignore
R90630:90632 Coq.Init.Logic <> :type_scope:x_'='_x not
R90628:90629 Imp <> st var
R90633:90635 Imp <> st' var
R90593:90593 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90602:90605 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90608:90611 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90613:90615 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90599:90600 Imp ForImp ::x_';'_x not
R90594:90598 Imp ForImp ::'BREAK' not
R90601:90601 Imp <> c var
R90606:90607 Imp <> st var
R90612:90612 Imp <> s var
R90616:90618 Imp <> st' var
R90672:90672 Imp ForImp ::x_';'_x not
R90667:90671 Imp ForImp ::'BREAK' not
R90672:90672 Imp ForImp ::x_';'_x not
R90667:90671 Imp ForImp ::'BREAK' not
prf 90784:90797 ForImp while_continue
R90865:90867 Coq.Init.Logic <> :type_scope:x_'='_x not
R90864:90864 Imp <> s var
R90868:90876 Imp ForImp SContinue constr
R90824:90824 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90841:90844 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90847:90850 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90852:90854 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R90825:90830 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90832:90835 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90837:90840 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90831:90831 Imp <> b var
R90836:90836 Imp <> c var
R90845:90846 Imp <> st var
R90851:90851 Imp <> s var
R90855:90857 Imp <> st' var
R90908:90913 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90915:90918 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90920:90923 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90908:90913 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90915:90918 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R90920:90923 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
prf 91050:91069 ForImp while_stops_on_break
R91145:91145 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91162:91165 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91168:91171 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91181:91183 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91146:91151 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91153:91156 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91158:91161 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91152:91152 Imp <> b var
R91157:91157 Imp <> c var
R91166:91167 Imp <> st var
R91172:91180 Imp ForImp SContinue constr
R91184:91186 Imp <> st' var
R91118:91120 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91123:91126 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91133:91135 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91117:91117 Imp <> c var
R91121:91122 Imp <> st var
R91127:91132 Imp ForImp SBreak constr
R91136:91138 Imp <> st' var
R91104:91106 Coq.Init.Logic <> :type_scope:x_'='_x not
R91094:91098 Imp ForImp beval def
R91103:91103 Imp <> b var
R91100:91101 Imp <> st var
R91107:91110 Coq.Init.Datatypes <> true constr
R91214:91225 Imp ForImp E_WhileLoopB constr
R91214:91225 Imp ForImp E_WhileLoopB constr
prf 91262:91277 ForImp while_break_true
R91374:91380 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91385:91386 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91388:91390 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91395:91398 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91405:91407 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91387:91387 Imp <> c var
R91391:91394 Imp <> st'' var
R91399:91404 Imp ForImp SBreak constr
R91408:91410 Imp <> st' var
R91361:91363 Coq.Init.Logic <> :type_scope:x_'='_x not
R91350:91354 Imp ForImp beval def
R91360:91360 Imp <> b var
R91356:91358 Imp <> st' var
R91364:91367 Coq.Init.Datatypes <> true constr
R91302:91302 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91319:91322 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91325:91328 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91338:91340 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91303:91308 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91310:91313 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91315:91318 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91309:91309 Imp <> b var
R91314:91314 Imp <> c var
R91323:91324 Imp <> st var
R91329:91337 Imp ForImp SContinue constr
R91341:91343 Imp <> st' var
R91442:91447 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91449:91452 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91454:91457 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91442:91447 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91449:91452 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R91454:91457 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
prf 91649:91667 ForImp ceval_deterministic
R91680:91682 Imp ForImp com ind
R91772:91775 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91766:91768 Coq.Init.Logic <> :type_scope:x_'='_x not
R91763:91765 Imp <> st1 var
R91769:91771 Imp <> st2 var
R91778:91780 Coq.Init.Logic <> :type_scope:x_'='_x not
R91776:91777 Imp <> s1 var
R91781:91782 Imp <> s2 var
R91737:91739 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91742:91745 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91748:91750 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91736:91736 Imp <> c var
R91740:91741 Imp <> st var
R91746:91747 Imp <> s2 var
R91751:91753 Imp <> st2 var
R91709:91711 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91714:91717 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91720:91722 Imp ForImp ::x_'/'_x_'||'_x_'/'_x not
R91708:91708 Imp <> c var
R91712:91713 Imp <> st var
R91718:91719 Imp <> s1 var
R91723:91725 Imp <> st1 var
R92098:92100 Coq.Init.Logic <> :type_scope:x_'='_x not
R92098:92100 Coq.Init.Logic <> :type_scope:x_'='_x not
R92142:92150 Imp ForImp SContinue constr
R92142:92150 Imp ForImp SContinue constr
R92246:92246 Coq.Init.Logic <> :type_scope:x_'='_x not
R92237:92245 Imp ForImp SContinue constr
R92247:92252 Imp ForImp SBreak constr
R92246:92246 Coq.Init.Logic <> :type_scope:x_'='_x not
R92237:92245 Imp ForImp SContinue constr
R92247:92252 Imp ForImp SBreak constr
R92427:92427 Coq.Init.Logic <> :type_scope:x_'='_x not
R92421:92426 Imp ForImp SBreak constr
R92428:92436 Imp ForImp SContinue constr
R92427:92427 Coq.Init.Logic <> :type_scope:x_'='_x not
R92421:92426 Imp ForImp SBreak constr
R92428:92436 Imp ForImp SContinue constr
R93340:93340 Coq.Init.Logic <> :type_scope:x_'='_x not
R93334:93339 Imp ForImp SBreak constr
R93341:93349 Imp ForImp SContinue constr
R93340:93340 Coq.Init.Logic <> :type_scope:x_'='_x not
R93334:93339 Imp ForImp SBreak constr
R93341:93349 Imp ForImp SContinue constr
R93603:93603 Coq.Init.Logic <> :type_scope:x_'='_x not
R93594:93602 Imp ForImp SContinue constr
R93604:93609 Imp ForImp SBreak constr
R93603:93603 Coq.Init.Logic <> :type_scope:x_'='_x not
R93594:93602 Imp ForImp SContinue constr
R93604:93609 Imp ForImp SBreak constr
R93752:93754 Coq.Init.Logic <> :type_scope:x_'='_x not
R93752:93754 Coq.Init.Logic <> :type_scope:x_'='_x not
R94044:94046 Coq.Init.Logic <> :type_scope:x_'='_x not
R94044:94046 Coq.Init.Logic <> :type_scope:x_'='_x not
R94232:94234 Coq.Init.Logic <> :type_scope:x_'='_x not
R94232:94234 Coq.Init.Logic <> :type_scope:x_'='_x not
R94445:94447 Coq.Init.Logic <> :type_scope:x_'='_x not
R94445:94447 Coq.Init.Logic <> :type_scope:x_'='_x not
R94623:94625 Coq.Init.Logic <> :type_scope:x_'='_x not
R94623:94625 Coq.Init.Logic <> :type_scope:x_'='_x not
R94816:94816 Coq.Init.Logic <> :type_scope:x_'='_x not
R94810:94815 Imp ForImp SBreak constr
R94817:94825 Imp ForImp SContinue constr
R94816:94816 Coq.Init.Logic <> :type_scope:x_'='_x not
R94810:94815 Imp ForImp SBreak constr
R94817:94825 Imp ForImp SContinue constr
R94890:94892 Coq.Init.Logic <> :type_scope:x_'='_x not
R94890:94892 Coq.Init.Logic <> :type_scope:x_'='_x not
R95079:95081 Coq.Init.Logic <> :type_scope:x_'='_x not
R95079:95081 Coq.Init.Logic <> :type_scope:x_'='_x not
R95253:95253 Coq.Init.Logic <> :type_scope:x_'='_x not
R95244:95252 Imp ForImp SContinue constr
R95254:95259 Imp ForImp SBreak constr
R95253:95253 Coq.Init.Logic <> :type_scope:x_'='_x not
R95244:95252 Imp ForImp SContinue constr
R95254:95259 Imp ForImp SBreak constr
R95323:95325 Coq.Init.Logic <> :type_scope:x_'='_x not
R95323:95325 Coq.Init.Logic <> :type_scope:x_'='_x not
R95484:95486 Coq.Init.Logic <> :type_scope:x_'='_x not
R95484:95486 Coq.Init.Logic <> :type_scope:x_'='_x not
R95568:95570 Coq.Init.Logic <> :type_scope:x_'='_x not
R95568:95570 Coq.Init.Logic <> :type_scope:x_'='_x not
R95649:95651 Coq.Init.Logic <> :type_scope:x_'='_x not
R95649:95651 Coq.Init.Logic <> :type_scope:x_'='_x not
R95869:95874 Imp <> <> mod
